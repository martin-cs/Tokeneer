           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:15.98

               procedure CertificateStore.GetNextSerialNumber




For path(s) from start to run-time check associated with statement of line 142:

procedure_getnextserialnumber_1.
H1:    true .
        ->
C1:    certtypes__serialnumbert__last >= 
           certtypes__serialnumbert__first .
C2:    certtypes__serialnumbert__last <= 
           certtypes__serialnumbert__last .
 

For path(s) from start to run-time check associated with statement of line 148:

procedure_getnextserialnumber_2.
H1:    true .
H2:    certtypes__serialnumbert__last >= 
           certtypes__serialnumbert__first .
H3:    certtypes__serialnumbert__last <= 
           certtypes__serialnumbert__last .
H4:    true .
H5:    true .
H6:    opened__1 .
H7:    for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H8:    stop__2 >= natural__first .
H9:    stop__2 <= natural__last .
        ->
C1:    stop__2 >= natural__first .
C2:    stop__2 <= natural__last .
 

For path(s) from start to run-time check associated with statement of line 154:

procedure_getnextserialnumber_3.
H1:    true .
H2:    certtypes__serialnumbert__last >= 
           certtypes__serialnumbert__first .
H3:    certtypes__serialnumbert__last <= 
           certtypes__serialnumbert__last .
H4:    true .
H5:    true .
H6:    opened__1 .
H7:    for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H8:    stop__2 >= natural__first .
H9:    stop__2 <= natural__last .
H10:   stop__2 >= natural__first .
H11:   stop__2 <= natural__last .
H12:   for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H13:   true .
H14:   stringisoverflowed(rawnext__2) .
        ->
C1:    certtypes__serialnumbert__last >= 
           certtypes__serialnumbert__first .
C2:    certtypes__serialnumbert__last <= 
           certtypes__serialnumbert__last .
 

For path(s) from start to run-time check associated with statement of line 156:

procedure_getnextserialnumber_4.
H1:    true .
H2:    certtypes__serialnumbert__last >= 
           certtypes__serialnumbert__first .
H3:    certtypes__serialnumbert__last <= 
           certtypes__serialnumbert__last .
H4:    true .
H5:    true .
H6:    opened__1 .
H7:    for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H8:    stop__2 >= natural__first .
H9:    stop__2 <= natural__last .
H10:   stop__2 >= natural__first .
H11:   stop__2 <= natural__last .
H12:   for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H13:   true .
H14:   not (stringisoverflowed(rawnext__2)) .
H15:   for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H16:   stop__2 >= natural__first .
H17:   stop__2 <= natural__last .
        ->
C1:    stop__2 >= natural__first .
C2:    stop__2 <= natural__last .
 

For path(s) from start to run-time check associated with statement of line 156:

procedure_getnextserialnumber_5.
H1:    true .
H2:    certtypes__serialnumbert__last >= 
           certtypes__serialnumbert__first .
H3:    certtypes__serialnumbert__last <= 
           certtypes__serialnumbert__last .
H4:    true .
H5:    true .
H6:    opened__1 .
H7:    for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H8:    stop__2 >= natural__first .
H9:    stop__2 <= natural__last .
H10:   stop__2 >= natural__first .
H11:   stop__2 <= natural__last .
H12:   for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H13:   true .
H14:   not (stringisoverflowed(rawnext__2)) .
H15:   for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H16:   stop__2 >= natural__first .
H17:   stop__2 <= natural__last .
H18:   stop__2 >= natural__first .
H19:   stop__2 <= natural__last .
H20:   newnext__3 >= certtypes__serialnumbert__first .
H21:   newnext__3 <= certtypes__serialnumbert__last .
H22:   true .
        ->
C1:    newnext__3 >= certtypes__serialnumbert__first .
C2:    newnext__3 <= certtypes__serialnumbert__last .
 

For path(s) from start to run-time check associated with statement of line 162:

procedure_getnextserialnumber_6.
H1:    true .
H2:    certtypes__serialnumbert__last >= 
           certtypes__serialnumbert__first .
H3:    certtypes__serialnumbert__last <= 
           certtypes__serialnumbert__last .
H4:    true .
H5:    true .
H6:    opened__1 .
H7:    for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H8:    stop__2 >= natural__first .
H9:    stop__2 <= natural__last .
H10:   stop__2 >= natural__first .
H11:   stop__2 <= natural__last .
H12:   for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H13:   true .
H14:   not (stringisoverflowed(rawnext__2)) .
H15:   for_all(i___1: integer, ((i___1 >= rawnexti__first) and (
           i___1 <= rawnexti__last)) -> ((element(rawnext__2, [
           i___1]) >= character__first) and (element(rawnext__2, [
           i___1]) <= character__last))) .
H16:   stop__2 >= natural__first .
H17:   stop__2 <= natural__last .
H18:   stop__2 >= natural__first .
H19:   stop__2 <= natural__last .
H20:   newnext__3 >= certtypes__serialnumbert__first .
H21:   newnext__3 <= certtypes__serialnumbert__last .
H22:   true .
H23:   newnext__3 >= certtypes__serialnumbert__first .
H24:   newnext__3 <= certtypes__serialnumbert__last .
H25:   true .
H26:   readok__3 .
H27:   newnext__3 >= certtypes__serialnumbert__first .
H28:   newnext__3 <= certtypes__serialnumbert__last .
        ->
C1:    newnext__3 >= certtypes__serialnumbert__first .
C2:    newnext__3 <= certtypes__serialnumbert__last .
 

For path(s) from start to finish:

procedure_getnextserialnumber_7.
*** true .          /* trivially true VC removed by Examiner */


procedure_getnextserialnumber_8.
*** true .          /* trivially true VC removed by Examiner */


procedure_getnextserialnumber_9.
*** true .          /* trivially true VC removed by Examiner */


procedure_getnextserialnumber_10.
*** true .          /* trivially true VC removed by Examiner */


