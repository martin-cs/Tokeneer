           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:10.64

                            procedure Door.Poll




For path(s) from start to run-time check associated with statement of line 196:

procedure_poll_1.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
        ->
C1:    newdoor__1 >= t__first .
C2:    newdoor__1 <= t__last .
 

For path(s) from start to run-time check associated with statement of line 202:

procedure_poll_2.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   systemfault__1 .
        ->
C1:    audittypes__critical >= audittypes__severityt__first .
C2:    audittypes__critical <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 215:

procedure_poll_3.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   newdoor__1 = closed .
        ->
C1:    audittypes__doorclosed >= audittypes__elementt__first .
C2:    audittypes__doorclosed <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 217:

procedure_poll_4.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   not (newdoor__1 = closed) .
        ->
C1:    audittypes__dooropened >= audittypes__elementt__first .
C2:    audittypes__dooropened <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 220:

procedure_poll_5.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   newdoor__1 = closed .
H19:   audittypes__doorclosed >= audittypes__elementt__first .
H20:   audittypes__doorclosed <= audittypes__elementt__last .
H21:   audittypes__doorclosed >= audittypes__elementt__first .
H22:   audittypes__doorclosed <= audittypes__elementt__last .
        ->
C1:    audittypes__information >= audittypes__severityt__first .
C2:    audittypes__information <= audittypes__severityt__last .
C3:    audittypes__doorclosed >= audittypes__elementt__first .
C4:    audittypes__doorclosed <= audittypes__elementt__last .
 

procedure_poll_6.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   not (newdoor__1 = closed) .
H19:   audittypes__dooropened >= audittypes__elementt__first .
H20:   audittypes__dooropened <= audittypes__elementt__last .
H21:   audittypes__dooropened >= audittypes__elementt__first .
H22:   audittypes__dooropened <= audittypes__elementt__last .
        ->
C1:    audittypes__information >= audittypes__severityt__first .
C2:    audittypes__information <= audittypes__severityt__last .
C3:    audittypes__dooropened >= audittypes__elementt__first .
C4:    audittypes__dooropened <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 227:

procedure_poll_7.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   newdoor__1 = closed .
H19:   audittypes__doorclosed >= audittypes__elementt__first .
H20:   audittypes__doorclosed <= audittypes__elementt__last .
H21:   audittypes__doorclosed >= audittypes__elementt__first .
H22:   audittypes__doorclosed <= audittypes__elementt__last .
H23:   audittypes__information >= audittypes__severityt__first .
H24:   audittypes__information <= audittypes__severityt__last .
H25:   audittypes__doorclosed >= audittypes__elementt__first .
H26:   audittypes__doorclosed <= audittypes__elementt__last .
H27:   newdoor__1 >= t__first .
H28:   newdoor__1 <= t__last .
        ->
C1:    newdoor__1 >= t__first .
C2:    newdoor__1 <= t__last .
 

procedure_poll_8.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   not (newdoor__1 = closed) .
H19:   audittypes__dooropened >= audittypes__elementt__first .
H20:   audittypes__dooropened <= audittypes__elementt__last .
H21:   audittypes__dooropened >= audittypes__elementt__first .
H22:   audittypes__dooropened <= audittypes__elementt__last .
H23:   audittypes__information >= audittypes__severityt__first .
H24:   audittypes__information <= audittypes__severityt__last .
H25:   audittypes__dooropened >= audittypes__elementt__first .
H26:   audittypes__dooropened <= audittypes__elementt__last .
H27:   newdoor__1 >= t__first .
H28:   newdoor__1 <= t__last .
        ->
C1:    newdoor__1 >= t__first .
C2:    newdoor__1 <= t__last .
 

For path(s) from start to finish:

procedure_poll_9.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   systemfault__1 .
H13:   audittypes__critical >= audittypes__severityt__first .
H14:   audittypes__critical <= audittypes__severityt__last .
H15:   audittypes__systemfault >= audittypes__elementt__first .
H16:   audittypes__systemfault <= audittypes__elementt__last .
H17:   latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
H18:   latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
H19:   ((currentdoor = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
H20:   dooralarm__5 >= alarmtypes__statust__first .
H21:   dooralarm__5 <= alarmtypes__statust__last .
        ->
C1:    ((currentdoor = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
C2:    latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
C3:    latch__islocked(latch__state) -> ((latch__state__4 = 
           latch__state) and latch__islocked(latch__state__4)) .
C4:    latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
 

procedure_poll_10.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   newdoor__1 = closed .
H19:   audittypes__doorclosed >= audittypes__elementt__first .
H20:   audittypes__doorclosed <= audittypes__elementt__last .
H21:   audittypes__doorclosed >= audittypes__elementt__first .
H22:   audittypes__doorclosed <= audittypes__elementt__last .
H23:   audittypes__information >= audittypes__severityt__first .
H24:   audittypes__information <= audittypes__severityt__last .
H25:   audittypes__doorclosed >= audittypes__elementt__first .
H26:   audittypes__doorclosed <= audittypes__elementt__last .
H27:   newdoor__1 >= t__first .
H28:   newdoor__1 <= t__last .
H29:   newdoor__1 >= t__first .
H30:   newdoor__1 <= t__last .
H31:   latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
H32:   latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
H33:   ((newdoor__1 = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
H34:   dooralarm__5 >= alarmtypes__statust__first .
H35:   dooralarm__5 <= alarmtypes__statust__last .
        ->
C1:    ((newdoor__1 = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
C2:    latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
C3:    latch__islocked(latch__state) -> ((latch__state__4 = 
           latch__state) and latch__islocked(latch__state__4)) .
C4:    latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
 

procedure_poll_11.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   currentdoor <> newdoor__1 .
H16:   newdoor__1 >= t__first .
H17:   newdoor__1 <= t__last .
H18:   not (newdoor__1 = closed) .
H19:   audittypes__dooropened >= audittypes__elementt__first .
H20:   audittypes__dooropened <= audittypes__elementt__last .
H21:   audittypes__dooropened >= audittypes__elementt__first .
H22:   audittypes__dooropened <= audittypes__elementt__last .
H23:   audittypes__information >= audittypes__severityt__first .
H24:   audittypes__information <= audittypes__severityt__last .
H25:   audittypes__dooropened >= audittypes__elementt__first .
H26:   audittypes__dooropened <= audittypes__elementt__last .
H27:   newdoor__1 >= t__first .
H28:   newdoor__1 <= t__last .
H29:   newdoor__1 >= t__first .
H30:   newdoor__1 <= t__last .
H31:   latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
H32:   latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
H33:   ((newdoor__1 = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
H34:   dooralarm__5 >= alarmtypes__statust__first .
H35:   dooralarm__5 <= alarmtypes__statust__last .
        ->
C1:    ((newdoor__1 = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
C2:    latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
C3:    latch__islocked(latch__state) -> ((latch__state__4 = 
           latch__state) and latch__islocked(latch__state__4)) .
C4:    latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
 

procedure_poll_12.
H1:    true .
H2:    dooralarm >= alarmtypes__statust__first .
H3:    dooralarm <= alarmtypes__statust__last .
H4:    currentdoor >= t__first .
H5:    currentdoor <= t__last .
H6:    newdoor__1 >= t__first .
H7:    newdoor__1 <= t__last .
H8:    true .
H9:    newdoor__1 >= t__first .
H10:   newdoor__1 <= t__last .
H11:   true .
H12:   not systemfault__1 .
H13:   newdoor__1 >= t__first .
H14:   newdoor__1 <= t__last .
H15:   not (currentdoor <> newdoor__1) .
H16:   latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
H17:   latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
H18:   ((currentdoor = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
H19:   dooralarm__5 >= alarmtypes__statust__first .
H20:   dooralarm__5 <= alarmtypes__statust__last .
        ->
C1:    ((currentdoor = open) and (latch__islocked(latch__state__4) and 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), alarmtimeout))) <-> (dooralarm__5 = 
           alarmtypes__alarming) .
C2:    latch__islocked(latch__state__4) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(latch__state__4)) .
C3:    latch__islocked(latch__state) -> ((latch__state__4 = 
           latch__state) and latch__islocked(latch__state__4)) .
C4:    latch__prf_latchtimeout(latch__state__4) = 
           latch__prf_latchtimeout(latch__state) .
 

For checks of refinement integrity: 

procedure_poll_13.
*** true .          /* trivially true VC removed by Examiner */


procedure_poll_14.
H1:    true .
H2:    true .
H3:    alarmtimeout = fld_alarmtimeout(state~) .
H4:    alarmtimeout = fld_alarmtimeout(state) .
H5:    door__interface__input~ = fld_door__interface__input(
           input~) .
H6:    door__interface__input = fld_door__interface__input(
           input) .
H7:    dooralarm~ = fld_dooralarm(state~) .
H8:    dooralarm = fld_dooralarm(state) .
H9:    currentdoor~ = fld_currentdoor(state~) .
H10:   currentdoor = fld_currentdoor(state) .
H11:   dooralarm~ >= alarmtypes__statust__first .
H12:   dooralarm~ <= alarmtypes__statust__last .
H13:   currentdoor~ >= t__first .
H14:   currentdoor~ <= t__last .
H15:   true .
H16:   dooralarm >= alarmtypes__statust__first .
H17:   dooralarm <= alarmtypes__statust__last .
H18:   currentdoor >= t__first .
H19:   currentdoor <= t__last .
H20:   ((currentdoor = open) and (latch__islocked(
           latch__state) and clock__greaterthanorequal(
           clock__thecurrenttime(clock__currenttime), 
           alarmtimeout))) <-> (dooralarm = 
           alarmtypes__alarming) .
H21:   latch__islocked(latch__state) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(
           latch__state)) .
H22:   latch__islocked(latch__state~) -> ((latch__state = 
           latch__state~) and latch__islocked(latch__state)) .
H23:   latch__prf_latchtimeout(latch__state) = 
           latch__prf_latchtimeout(latch__state~) .
        ->
C1:    (latch__islocked(latch__state) and ((thecurrentdoor(
           state) = open) and clock__greaterthanorequal(
           clock__thecurrenttime(clock__currenttime), 
           prf_alarmtimeout(state)))) <-> (thedooralarm(
           state) = alarmtypes__alarming) .
C2:    latch__islocked(latch__state) <-> 
           clock__greaterthanorequal(clock__thecurrenttime(
           clock__currenttime), latch__prf_latchtimeout(
           latch__state)) .
C3:    latch__islocked(latch__state~) -> ((latch__state = 
           latch__state~) and latch__islocked(latch__state)) .
C4:    latch__prf_latchtimeout(latch__state) = 
           latch__prf_latchtimeout(latch__state~) .
 

