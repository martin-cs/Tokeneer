           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:10.64}

                            {procedure Door.Poll}


title procedure poll;

  function round__(real) : integer;
  type clock__currenttime__type = pending;
  type clock__timet = pending;
  type audittypes__elementt = (audittypes__startunenrolledtis, 
     audittypes__startenrolledtis, audittypes__enrolmentcomplete, 
     audittypes__enrolmentfailed, audittypes__displaychanged, 
     audittypes__screenchanged, audittypes__doorclosed, 
     audittypes__dooropened, audittypes__latchlocked, 
     audittypes__latchunlocked, audittypes__alarmraised, 
     audittypes__alarmsilenced, audittypes__truncatelog, 
     audittypes__auditalarmraised, audittypes__auditalarmsilenced, 
     audittypes__usertokenremoved, audittypes__usertokenpresent, 
     audittypes__usertokeninvalid, audittypes__authcertvalid, 
     audittypes__authcertinvalid, audittypes__fingerdetected, 
     audittypes__fingertimeout, audittypes__fingermatched, 
     audittypes__fingernotmatched, audittypes__authcertwritten, 
     audittypes__authcertwritefailed, audittypes__entrypermitted, 
     audittypes__entrytimeout, audittypes__entrydenied, 
     audittypes__admintokenpresent, audittypes__admintokenvalid, 
     audittypes__admintokeninvalid, audittypes__admintokenexpired, 
     audittypes__admintokenremoved, audittypes__invalidoprequest, 
     audittypes__operationstart, audittypes__archivelog, 
     audittypes__archivecomplete, audittypes__archivecheckfailed, 
     audittypes__updatedconfigdata, audittypes__invalidconfigdata, 
     audittypes__shutdown, audittypes__overridelock, 
     audittypes__systemfault);
  type audittypes__severityt = (audittypes__information, 
     audittypes__warning, audittypes__critical);
  type alarmtypes__statust = (alarmtypes__alarming, 
     alarmtypes__silent);
  type latch__statetype = pending;
  type t = (open, closed);
  type door__interface__input__type = pending;
  type statetype = record
        dooralarm : alarmtypes__statust;
        alarmtimeout : clock__timet;
        currentdoor : t
     end;
  type input__type = record
        door__interface__input : door__interface__input__type
     end;
  const t__base__first : t = pending; 
  const t__base__last : t = pending; 
  const alarmtypes__statust__base__first : alarmtypes__statust = pending; 
  const alarmtypes__statust__base__last : alarmtypes__statust = pending; 
  const audittypes__severityt__base__first : 
     audittypes__severityt = pending; 
  const audittypes__severityt__base__last : audittypes__severityt = pending; 
  const audittypes__elementt__base__first : audittypes__elementt = pending; 
  const audittypes__elementt__base__last : audittypes__elementt = pending; 
  const t__first : t = pending; 
  const t__last : t = pending; 
  const t__size : integer = pending; 
  const alarmtypes__statust__first : alarmtypes__statust = pending; 
  const alarmtypes__statust__last : alarmtypes__statust = pending; 
  const alarmtypes__statust__size : integer = pending; 
  const audittypes__severityt__first : audittypes__severityt = pending; 
  const audittypes__severityt__last : audittypes__severityt = pending; 
  const audittypes__severityt__size : integer = pending; 
  const audittypes__elementt__first : audittypes__elementt = pending; 
  const audittypes__elementt__last : audittypes__elementt = pending; 
  const audittypes__elementt__size : integer = pending; 
  var clock__currenttime : clock__currenttime__type;
  var latch__state : latch__statetype;
  var state : statetype;
  var input : input__type;
  var systemfault : boolean;
  var door__interface__input : door__interface__input__type;
  var currentdoor : t;
  var alarmtimeout : clock__timet;
  var dooralarm : alarmtypes__statust;
  var newdoor : t;
  function clock__thecurrenttime(clock__currenttime__type) : 
     clock__timet;
  function clock__greaterthanorequal(clock__timet, clock__timet) : boolean;
  function latch__prf_latchtimeout(latch__statetype) : 
     clock__timet;
  function latch__islocked(latch__statetype) : boolean;
  function prf_alarmtimeout(statetype) : clock__timet;
  function thecurrentdoor(statetype) : t;
  function thedooralarm(statetype) : alarmtypes__statust;
  var dooralarm__5 : alarmtypes__statust;
  var latch__state__4 : latch__statetype;
  var systemfault__1 : boolean;
  var newdoor__1 : t;

end;
