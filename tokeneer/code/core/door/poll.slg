*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:10  SIMPLIFIED 05-SEP-2011, 15:40:21

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure Door.Poll






RRS  The following user defined rule files have been read:
&&&  d:/sparkdev/tis2011/code/core/door/poll.rlu
SEM  No semantic checks are performed on the rules.


@@@@@@@@@@  VC: procedure_poll_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= newdoor__1
***  Proved C1:  t__first <= newdoor__1
     using hypothesis H6.
***  Proved C2:  newdoor__1 <= t__last
     using hypothesis H7.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_2.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__critical
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule poll_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule poll_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule poll_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule poll_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_3.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__elementt__first <= audittypes__doorclosed
-S-  Applied substitution rule poll_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C1:  true
-S-  Applied substitution rule poll_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_4.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__elementt__first <= audittypes__dooropened
-S-  Applied substitution rule poll_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C1:  true
-S-  Applied substitution rule poll_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_5.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  audittypes__elementt__first <= audittypes__doorclosed
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__information
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__doorclosed
***  Proved C3:  audittypes__elementt__first <= audittypes__doorclosed
     using hypothesis H19.
***  Proved C4:  audittypes__doorclosed <= audittypes__elementt__last
     using hypothesis H20.
-S-  Applied substitution rule poll_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule poll_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_6.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  audittypes__elementt__first <= audittypes__dooropened
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__information
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__dooropened
***  Proved C3:  audittypes__elementt__first <= audittypes__dooropened
     using hypothesis H19.
***  Proved C4:  audittypes__dooropened <= audittypes__elementt__last
     using hypothesis H20.
-S-  Applied substitution rule poll_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule poll_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_7.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  audittypes__elementt__first <= audittypes__doorclosed
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
%%%  Simplified H23 on reading formula in, to give:
     %%%  H23:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= newdoor__1
***  Proved C1:  t__first <= newdoor__1
     using hypothesis H6.
***  Proved C2:  newdoor__1 <= t__last
     using hypothesis H7.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_8.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  audittypes__elementt__first <= audittypes__dooropened
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
%%%  Simplified H23 on reading formula in, to give:
     %%%  H23:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= newdoor__1
***  Proved C1:  t__first <= newdoor__1
     using hypothesis H6.
***  Proved C2:  newdoor__1 <= t__last
     using hypothesis H7.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_9.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  audittypes__severityt__first <= audittypes__critical
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  audittypes__elementt__first <= audittypes__systemfault
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  alarmtypes__statust__first <= dooralarm__5
***  Proved C1:  currentdoor = open and (latch__islocked(latch__state__4) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          alarmtimeout)) <-> dooralarm__5 = alarmtypes__alarming
     using hypothesis H19.
***  Proved C2:  latch__islocked(latch__state__4) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latch__prf_latchtimeout(
          latch__state__4))
     using hypothesis H17.
***  Proved C4:  latch__prf_latchtimeout(latch__state__4) = 
          latch__prf_latchtimeout(latch__state)
     using hypothesis H18.
-S-  Applied substitution rule poll_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H15:  true
-S-  Applied substitution rule poll_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H16:  true
-S-  Applied substitution rule poll_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H13:  true
-S-  Applied substitution rule poll_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H14:  true
-S-  Applied substitution rule poll_rules(134).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H2:  alarmtypes__alarming <= dooralarm
<S>  New H20:  alarmtypes__alarming <= dooralarm__5
-S-  Applied substitution rule poll_rules(135).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H3:  dooralarm <= alarmtypes__silent
<S>  New H21:  dooralarm__5 <= alarmtypes__silent
-S-  Applied substitution rule poll_rules(157).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H4:  open <= currentdoor
<S>  New H6:  open <= newdoor__1
-S-  Applied substitution rule poll_rules(158).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H5:  currentdoor <= closed
<S>  New H7:  newdoor__1 <= closed
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H12, which only specifies a value for systemfault__1.
     This is not referred to anywhere else in the VC.
     +++  New H22:  audittypes__elementt__size >= 0
     +++  New H23:  audittypes__severityt__size >= 0
     +++  New H24:  alarmtypes__statust__size >= 0
     +++  New H25:  t__size >= 0


@@@@@@@@@@  VC: procedure_poll_10.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  audittypes__elementt__first <= audittypes__doorclosed
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
%%%  Simplified H23 on reading formula in, to give:
     %%%  H23:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H34 on reading formula in, to give:
     %%%  H34:  alarmtypes__statust__first <= dooralarm__5
***  Proved C1:  newdoor__1 = open and (latch__islocked(latch__state__4) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          alarmtimeout)) <-> dooralarm__5 = alarmtypes__alarming
     using hypothesis H33.
***  Proved C2:  latch__islocked(latch__state__4) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latch__prf_latchtimeout(
          latch__state__4))
     using hypothesis H31.
***  Proved C4:  latch__prf_latchtimeout(latch__state__4) = 
          latch__prf_latchtimeout(latch__state)
     using hypothesis H32.
-S-  Applied substitution rule poll_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H19:  true
-S-  Applied substitution rule poll_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H20:  true
-S-  Applied substitution rule poll_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H23:  true
-S-  Applied substitution rule poll_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H24:  true
-S-  Applied substitution rule poll_rules(134).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H2:  alarmtypes__alarming <= dooralarm
<S>  New H34:  alarmtypes__alarming <= dooralarm__5
-S-  Applied substitution rule poll_rules(135).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H3:  dooralarm <= alarmtypes__silent
<S>  New H35:  dooralarm__5 <= alarmtypes__silent
-S-  Applied substitution rule poll_rules(157).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H4:  open <= currentdoor
<S>  New H6:  open <= newdoor__1
-S-  Applied substitution rule poll_rules(158).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H5:  currentdoor <= closed
<S>  New H7:  newdoor__1 <= closed
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H25 (true-hypothesis).
---  Eliminated hypothesis H26 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H24 (true-hypothesis).
-S-  Eliminated hypothesis H18.
     This was achieved by replacing all occurrences of newdoor__1 by:
          closed.
<S>  New H15:  currentdoor <> closed
<S>  New H33:  not dooralarm__5 = alarmtypes__alarming
<S>  New H6:  true
<S>  New H7:  true
---  Eliminated hypothesis H12, which only specifies a value for systemfault__1.
     This is not referred to anywhere else in the VC.
---  Eliminated hypothesis H6 (true-hypothesis).
---  Eliminated hypothesis H7 (true-hypothesis).
>>>  Restructured hypothesis H33 into:
     >>>  H33:  dooralarm__5 <> alarmtypes__alarming
     +++  New H36:  audittypes__elementt__size >= 0
     +++  New H37:  audittypes__severityt__size >= 0
     +++  New H38:  alarmtypes__statust__size >= 0
     +++  New H39:  t__size >= 0


@@@@@@@@@@  VC: procedure_poll_11.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  audittypes__elementt__first <= audittypes__dooropened
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
%%%  Simplified H23 on reading formula in, to give:
     %%%  H23:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H34 on reading formula in, to give:
     %%%  H34:  alarmtypes__statust__first <= dooralarm__5
***  Proved C1:  newdoor__1 = open and (latch__islocked(latch__state__4) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          alarmtimeout)) <-> dooralarm__5 = alarmtypes__alarming
     using hypothesis H33.
***  Proved C2:  latch__islocked(latch__state__4) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latch__prf_latchtimeout(
          latch__state__4))
     using hypothesis H31.
***  Proved C4:  latch__prf_latchtimeout(latch__state__4) = 
          latch__prf_latchtimeout(latch__state)
     using hypothesis H32.
>>>  Restructured hypothesis H18 into:
     >>>  H18:  newdoor__1 <> closed
-S-  Applied substitution rule poll_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H19:  true
-S-  Applied substitution rule poll_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H20:  true
-S-  Applied substitution rule poll_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H23:  true
-S-  Applied substitution rule poll_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H24:  true
-S-  Applied substitution rule poll_rules(134).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H2:  alarmtypes__alarming <= dooralarm
<S>  New H34:  alarmtypes__alarming <= dooralarm__5
-S-  Applied substitution rule poll_rules(135).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H3:  dooralarm <= alarmtypes__silent
<S>  New H35:  dooralarm__5 <= alarmtypes__silent
-S-  Applied substitution rule poll_rules(157).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H4:  open <= currentdoor
<S>  New H6:  open <= newdoor__1
-S-  Applied substitution rule poll_rules(158).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H5:  currentdoor <= closed
<S>  New H7:  newdoor__1 <= closed
%%%  Hypotheses H7 & H18 together imply that
          newdoor__1 < closed.
     H7 & H18 have therefore been deleted and a new H36 added to this effect.
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H25 (true-hypothesis).
---  Eliminated hypothesis H26 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H24 (true-hypothesis).
---  Eliminated hypothesis H12, which only specifies a value for systemfault__1.
     This is not referred to anywhere else in the VC.
     +++  New H37:  audittypes__elementt__size >= 0
     +++  New H38:  audittypes__severityt__size >= 0
     +++  New H39:  alarmtypes__statust__size >= 0
     +++  New H40:  t__size >= 0


@@@@@@@@@@  VC: procedure_poll_12.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  t__first <= currentdoor
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  t__first <= newdoor__1
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H6).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  alarmtypes__statust__first <= dooralarm__5
***  Proved C1:  currentdoor = open and (latch__islocked(latch__state__4) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          alarmtimeout)) <-> dooralarm__5 = alarmtypes__alarming
     using hypothesis H18.
***  Proved C2:  latch__islocked(latch__state__4) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latch__prf_latchtimeout(
          latch__state__4))
     using hypothesis H16.
***  Proved C4:  latch__prf_latchtimeout(latch__state__4) = 
          latch__prf_latchtimeout(latch__state)
     using hypothesis H17.
>>>  Restructured hypothesis H15 into:
     >>>  H15:  currentdoor = newdoor__1
-S-  Applied substitution rule poll_rules(134).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H2:  alarmtypes__alarming <= dooralarm
<S>  New H19:  alarmtypes__alarming <= dooralarm__5
-S-  Applied substitution rule poll_rules(135).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H3:  dooralarm <= alarmtypes__silent
<S>  New H20:  dooralarm__5 <= alarmtypes__silent
-S-  Applied substitution rule poll_rules(157).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H4:  open <= currentdoor
<S>  New H6:  open <= newdoor__1
-S-  Applied substitution rule poll_rules(158).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H5:  currentdoor <= closed
<S>  New H7:  newdoor__1 <= closed
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
-S-  Eliminated hypothesis H15.
     This was achieved by replacing all occurrences of currentdoor by:
          newdoor__1.
<S>  New H18:  newdoor__1 = open and (latch__islocked(latch__state__4) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          alarmtimeout)) <-> dooralarm__5 = alarmtypes__alarming
<S>  New H4:  open <= newdoor__1
<S>  New H5:  newdoor__1 <= closed
---  Eliminated hypothesis H12, which only specifies a value for systemfault__1.
     This is not referred to anywhere else in the VC.
     +++  New H21:  audittypes__elementt__size >= 0
     +++  New H22:  audittypes__severityt__size >= 0
     +++  New H23:  alarmtypes__statust__size >= 0
     +++  New H24:  t__size >= 0


@@@@@@@@@@  VC: procedure_poll_13.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_poll_14.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  alarmtimeout = fld_alarmtimeout(state~)
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  door__interface__input~ = fld_door__interface__input(input~)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  dooralarm~ = fld_dooralarm(state~)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  currentdoor~ = fld_currentdoor(state~)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  alarmtypes__statust__first <= dooralarm~
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  dooralarm~ <= alarmtypes__statust__last
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  t__first <= currentdoor~
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  currentdoor~ <= t__last
%%%  Simplified H16 on reading formula in, to give:
     %%%  H16:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H18 on reading formula in, to give:
     %%%  H18:  t__first <= currentdoor
%%%  Simplified H22 on reading formula in, to give:
     %%%  H22:  latch__islocked(latch__state~) -> latch__state = latch__state~ 
          and latch__islocked(latch__state)
%%%  Simplified H23 on reading formula in, to give:
     %%%  H23:  latch__prf_latchtimeout(latch__state) = latch__prf_latchtimeout(
          latch__state~)
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  latch__islocked(latch__state~) -> latch__state = latch__state~ 
          and latch__islocked(latch__state)
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  latch__prf_latchtimeout(latch__state) = latch__prf_latchtimeout(
          latch__state~)
***  Proved C2:  latch__islocked(latch__state) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latch__prf_latchtimeout(
          latch__state))
     using hypothesis H21.
***  Proved C3:  latch__islocked(latch__state~) -> latch__state = latch__state~ 
          and latch__islocked(latch__state)
     using hypothesis H22.
***  Proved C4:  latch__prf_latchtimeout(latch__state) = 
          latch__prf_latchtimeout(latch__state~)
     using hypothesis H23.
-S-  Applied substitution rule poll_rules(134).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H11:  alarmtypes__alarming <= dooralarm~
<S>  New H16:  alarmtypes__alarming <= dooralarm
-S-  Applied substitution rule poll_rules(135).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H12:  dooralarm~ <= alarmtypes__silent
<S>  New H17:  dooralarm <= alarmtypes__silent
-S-  Applied substitution rule poll_rules(157).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H13:  open <= currentdoor~
<S>  New H18:  open <= currentdoor
-S-  Applied substitution rule poll_rules(158).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H14:  currentdoor~ <= closed
<S>  New H19:  currentdoor <= closed
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H2 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
-S-  Eliminated hypothesis H3.
     This was achieved by replacing all occurrences of alarmtimeout by:
          fld_alarmtimeout(state~).
<S>  New H4:  fld_alarmtimeout(state~) = fld_alarmtimeout(state)
<S>  New H20:  currentdoor = open and (latch__islocked(latch__state) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          fld_alarmtimeout(state~))) <-> dooralarm = alarmtypes__alarming
---  Eliminated hypothesis H6, which only specifies a value for 
          door__interface__input.
     This is not referred to anywhere else in the VC.
-S-  Eliminated hypothesis H8.
     This was achieved by replacing all occurrences of dooralarm by:
          fld_dooralarm(state).
<S>  New H16:  alarmtypes__alarming <= fld_dooralarm(state)
<S>  New H17:  fld_dooralarm(state) <= alarmtypes__silent
<S>  New H20:  currentdoor = open and (latch__islocked(latch__state) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          fld_alarmtimeout(state~))) <-> fld_dooralarm(state) = 
          alarmtypes__alarming
-S-  Eliminated hypothesis H10.
     This was achieved by replacing all occurrences of currentdoor by:
          fld_currentdoor(state).
<S>  New H18:  open <= fld_currentdoor(state)
<S>  New H19:  fld_currentdoor(state) <= closed
<S>  New H20:  fld_currentdoor(state) = open and (latch__islocked(latch__state) 
          and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), fld_alarmtimeout(state~))) <-> fld_dooralarm(
          state) = alarmtypes__alarming
     +++  New H24:  audittypes__elementt__size >= 0
     +++  New H25:  audittypes__severityt__size >= 0
     +++  New H26:  alarmtypes__statust__size >= 0
     +++  New H27:  t__size >= 0
***  Proved C1:  latch__islocked(latch__state) and (thecurrentdoor(state) = 
          open and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), prf_alarmtimeout(state))) <-> thedooralarm(state)
           = alarmtypes__alarming
     This was achieved by applying the inference rule poll_user(1)
     [from rulefile poll.rlu] to infer this conclusion from its side-conditions,
     which were established as follows:
     <<<  From H20, proved: fld_currentdoor(state) = open and (latch__islocked(
          latch__state) and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), fld_alarmtimeout(state~))) <-> fld_dooralarm(
          state) = alarmtypes__alarming
     <<<  From H4, proved: fld_alarmtimeout(state~) = fld_alarmtimeout(state)
***  PROVED VC.

VCN  14: Summary of user rule application.
FIL  poll.rlu
RUL     poll_user(1)
CON        1


OVR  Overall summary of VCs using user rules.
FIL  poll.rlu
RUL     poll_user(1)
VCS        14

