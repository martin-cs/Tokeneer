*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:10  SIMPLIFIED 05-SEP-2011, 15:40:20

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure Door.LockDoor






RRS  The following user defined rule files have been read:
&&&  d:/sparkdev/tis2011/code/core/door/lockdoor.rlu
SEM  No semantic checks are performed on the rules.


@@@@@@@@@@  VC: procedure_lockdoor_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentdoor
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  alarmtypes__statust__first <= dooralarm
***  Proved C1:  latch__prf_latchtimeout(latch__state__2) = 
          clock__thecurrenttime(clock__currenttime)
     using hypotheses H7 & H10.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_lockdoor_2.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentdoor
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  alarmtypes__statust__first <= dooralarm__3
-S-  Applied substitution rule lockdoor_rules(2).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H4:  alarmtypes__alarming <= dooralarm
<S>  New H13:  alarmtypes__alarming <= dooralarm__3
-S-  Applied substitution rule lockdoor_rules(3).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H5:  dooralarm <= alarmtypes__silent
<S>  New H14:  dooralarm__3 <= alarmtypes__silent
-S-  Applied substitution rule lockdoor_rules(25).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H2:  open <= currentdoor
-S-  Applied substitution rule lockdoor_rules(26).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H3:  currentdoor <= closed
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H6 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
     +++  New H15:  alarmtypes__statust__size >= 0
     +++  New H16:  t__size >= 0
***  Proved C1:  clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), clock__thecurrenttime(clock__currenttime))
     This was achieved by applying the inference rule lockdoor_user(1)
     [from rulefile lockdoor.rlu] to infer this conclusion directly (rule has 
          no side-conditions).
***  PROVED VC.

VCN  2: Summary of user rule application.
FIL  lockdoor.rlu
RUL     lockdoor_user(1)
CON        1


@@@@@@@@@@  VC: procedure_lockdoor_3.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentdoor
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  alarmtypes__statust__first <= dooralarm
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  alarmtypes__statust__first <= dooralarm__3
***  Proved C1:  currentdoor = open and (latch__islocked(latch__state__2) and 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          clock__thecurrenttime(clock__currenttime))) <-> dooralarm__3 = 
          alarmtypes__alarming
     using hypothesis H12.
-S-  Applied substitution rule lockdoor_rules(2).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H4:  alarmtypes__alarming <= dooralarm
<S>  New H13:  alarmtypes__alarming <= dooralarm__3
-S-  Applied substitution rule lockdoor_rules(3).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H5:  dooralarm <= alarmtypes__silent
<S>  New H14:  dooralarm__3 <= alarmtypes__silent
-S-  Applied substitution rule lockdoor_rules(25).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H2:  open <= currentdoor
-S-  Applied substitution rule lockdoor_rules(26).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H3:  currentdoor <= closed
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H6 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
     +++  New H16:  alarmtypes__statust__size >= 0
     +++  New H17:  t__size >= 0
***  Proved C2:  latch__islocked(latch__state__2)
     This was achieved by applying the inference rule lockdoor_user(2)
     [from rulefile lockdoor.rlu] to infer this conclusion from its 
          side-conditions,
     which were established as follows:
     <<<  From H9, proved: latch__islocked(latch__state__2) <-> 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          latch__prf_latchtimeout(latch__state__2))
     <<<  From H11, proved: latch__prf_latchtimeout(latch__state__2) = 
          clock__thecurrenttime(clock__currenttime)
***  PROVED VC.

VCN  3: Summary of user rule application.
FIL  lockdoor.rlu
RUL     lockdoor_user(2)
CON        2


@@@@@@@@@@  VC: procedure_lockdoor_4.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_lockdoor_5.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  currentdoor = fld_currentdoor(state~)
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  dooralarm~ = fld_dooralarm(state~)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  t__first <= currentdoor
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  alarmtypes__statust__first <= dooralarm~
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  dooralarm~ <= alarmtypes__statust__last
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  alarmtypes__statust__first <= dooralarm
***  Proved C2:  latch__islocked(latch__state)
     using hypothesis H15.
-S-  Applied substitution rule lockdoor_rules(2).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New H10:  alarmtypes__alarming <= dooralarm~
<S>  New H12:  alarmtypes__alarming <= dooralarm
-S-  Applied substitution rule lockdoor_rules(3).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New H11:  dooralarm~ <= alarmtypes__silent
<S>  New H13:  dooralarm <= alarmtypes__silent
-S-  Applied substitution rule lockdoor_rules(25).
     This was achieved by replacing all occurrences of t__first by:
          open.
<S>  New H8:  open <= currentdoor
-S-  Applied substitution rule lockdoor_rules(26).
     This was achieved by replacing all occurrences of t__last by:
          closed.
<S>  New H9:  currentdoor <= closed
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H2 (true-hypothesis).
-S-  Eliminated hypothesis H3.
     This was achieved by replacing all occurrences of currentdoor by:
          fld_currentdoor(state~).
<S>  New H4:  fld_currentdoor(state~) = fld_currentdoor(state)
<S>  New H14:  fld_currentdoor(state~) = open and (latch__islocked(latch__state)
           and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), alarmtimeout)) <-> dooralarm = 
          alarmtypes__alarming
<S>  New H8:  open <= fld_currentdoor(state~)
<S>  New H9:  fld_currentdoor(state~) <= closed
-S-  Eliminated hypothesis H6.
     This was achieved by replacing all occurrences of dooralarm by:
          fld_dooralarm(state).
<S>  New H12:  alarmtypes__alarming <= fld_dooralarm(state)
<S>  New H13:  fld_dooralarm(state) <= alarmtypes__silent
<S>  New H14:  fld_currentdoor(state~) = open and (latch__islocked(latch__state)
           and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), alarmtimeout)) <-> fld_dooralarm(state) = 
          alarmtypes__alarming
-S-  Eliminated hypothesis H7.
     This was achieved by replacing all occurrences of alarmtimeout by:
          fld_alarmtimeout(state).
<S>  New H14:  fld_currentdoor(state~) = open and (latch__islocked(latch__state)
           and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), fld_alarmtimeout(state))) <-> fld_dooralarm(
          state) = alarmtypes__alarming
     +++  New H16:  alarmtypes__statust__size >= 0
     +++  New H17:  t__size >= 0
***  Proved C1:  latch__islocked(latch__state) and (thecurrentdoor(state) = 
          open and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), prf_alarmtimeout(state))) <-> thedooralarm(state)
           = alarmtypes__alarming
     This was achieved by applying the inference rule lockdoor_user(3)
     [from rulefile lockdoor.rlu] to infer this conclusion from its 
          side-conditions,
     which were established as follows:
     <<<  From H14, proved: fld_currentdoor(state~) = open and (latch__islocked(
          latch__state) and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), fld_alarmtimeout(state))) <-> fld_dooralarm(
          state) = alarmtypes__alarming
     <<<  From H4, proved: fld_currentdoor(state~) = fld_currentdoor(state)
***  PROVED VC.

VCN  5: Summary of user rule application.
FIL  lockdoor.rlu
RUL     lockdoor_user(3)
CON        1


OVR  Overall summary of VCs using user rules.
FIL  lockdoor.rlu
RUL     lockdoor_user(1)
VCS        2
RUL     lockdoor_user(2)
VCS        3
RUL     lockdoor_user(3)
VCS        5

