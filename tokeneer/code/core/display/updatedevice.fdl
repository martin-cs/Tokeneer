           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:17.84}

                       {procedure Display.UpdateDevice}


title procedure updatedevice;

  function round__(real) : integer;
  type character = integer;
  type basictypes__unsigned32t = integer;
  type audittypes__elementt = (audittypes__startunenrolledtis, 
     audittypes__startenrolledtis, audittypes__enrolmentcomplete, 
     audittypes__enrolmentfailed, audittypes__displaychanged, 
     audittypes__screenchanged, audittypes__doorclosed, 
     audittypes__dooropened, audittypes__latchlocked, 
     audittypes__latchunlocked, audittypes__alarmraised, 
     audittypes__alarmsilenced, audittypes__truncatelog, 
     audittypes__auditalarmraised, audittypes__auditalarmsilenced, 
     audittypes__usertokenremoved, audittypes__usertokenpresent, 
     audittypes__usertokeninvalid, audittypes__authcertvalid, 
     audittypes__authcertinvalid, audittypes__fingerdetected, 
     audittypes__fingertimeout, audittypes__fingermatched, 
     audittypes__fingernotmatched, audittypes__authcertwritten, 
     audittypes__authcertwritefailed, audittypes__entrypermitted, 
     audittypes__entrytimeout, audittypes__entrydenied, 
     audittypes__admintokenpresent, audittypes__admintokenvalid, 
     audittypes__admintokeninvalid, audittypes__admintokenexpired, 
     audittypes__admintokenremoved, audittypes__invalidoprequest, 
     audittypes__operationstart, audittypes__archivelog, 
     audittypes__archivecomplete, audittypes__archivecheckfailed, 
     audittypes__updatedconfigdata, audittypes__invalidconfigdata, 
     audittypes__shutdown, audittypes__overridelock, 
     audittypes__systemfault);
  type audittypes__severityt = (audittypes__information, 
     audittypes__warning, audittypes__critical);
  type msgt = (blank, welcome, insertfinger, opendoor, wait, 
     removetoken, tokenupdatefailed, doorunlocked);
  type string = array [integer] of character;
  const null__string : string = pending;
  type sizest = record
        top : integer;
        bottom : integer
     end;
  type msglinet = record
        text : string;
        len : integer
     end;
  type scrollstrt = record
        text : string;
        len : integer
     end;
  type msgstrt = record
        top : msglinet;
        bottom : msglinet
     end;
  type msgtostringt = array [msgt] of msgstrt;
  const msgtostrings : msgtostringt = pending;
  const scrolltexti__base__first : integer = pending; 
  const scrolltexti__base__last : integer = pending; 
  const scrolltextcount__base__first : integer = pending; 
  const scrolltextcount__base__last : integer = pending; 
  const msgtexti__base__first : integer = pending; 
  const msgtexti__base__last : integer = pending; 
  const msgtextcount__base__first : integer = pending; 
  const msgtextcount__base__last : integer = pending; 
  const msgt__base__first : msgt = pending; 
  const msgt__base__last : msgt = pending; 
  const audittypes__severityt__base__first : 
     audittypes__severityt = pending; 
  const audittypes__severityt__base__last : audittypes__severityt = pending; 
  const audittypes__elementt__base__first : audittypes__elementt = pending; 
  const audittypes__elementt__base__last : audittypes__elementt = pending; 
  const basictypes__unsigned32t__base__first : integer = pending; 
  const basictypes__unsigned32t__base__last : integer = pending; 
  const positive__base__first : integer = pending; 
  const positive__base__last : integer = pending; 
  const character__base__first : character = pending; 
  const character__base__last : character = pending; 
  const integer__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const sizest__size : integer = pending; 
  const scrollstrt__size : integer = pending; 
  const scrolltexti__first : integer = pending; 
  const scrolltexti__last : integer = pending; 
  const scrolltexti__size : integer = pending; 
  const scrolltextcount__first : integer = pending; 
  const scrolltextcount__last : integer = pending; 
  const scrolltextcount__size : integer = pending; 
  const msgstrt__size : integer = pending; 
  const msglinet__size : integer = pending; 
  const msgtexti__first : integer = pending; 
  const msgtexti__last : integer = pending; 
  const msgtexti__size : integer = pending; 
  const msgtextcount__first : integer = pending; 
  const msgtextcount__last : integer = pending; 
  const msgtextcount__size : integer = pending; 
  const msgt__first : msgt = pending; 
  const msgt__last : msgt = pending; 
  const msgt__size : integer = pending; 
  const audittypes__severityt__first : audittypes__severityt = pending; 
  const audittypes__severityt__last : audittypes__severityt = pending; 
  const audittypes__severityt__size : integer = pending; 
  const audittypes__elementt__first : audittypes__elementt = pending; 
  const audittypes__elementt__last : audittypes__elementt = pending; 
  const audittypes__elementt__size : integer = pending; 
  const basictypes__unsigned32t__first : integer = pending; 
  const basictypes__unsigned32t__last : integer = pending; 
  const basictypes__unsigned32t__size : integer = pending; 
  const positive__first : integer = pending; 
  const positive__last : integer = pending; 
  const positive__size : integer = pending; 
  const character__first : character = pending; 
  const character__last : character = pending; 
  const character__size : integer = pending; 
  const integer__first : integer = pending; 
  const integer__last : integer = pending; 
  const integer__size : integer = pending; 
  var currentdisplay : msgt;
  var currentlydisplayed : msgt;
  var sizes : sizest;
  var written : boolean;
  var topwritten : boolean;
  var bottomwritten : boolean;
  function combinelines(msgstrt) : scrollstrt;
  var written__4 : boolean;
  var bottomwritten__3 : boolean;
  var topwritten__2 : boolean;

end;
