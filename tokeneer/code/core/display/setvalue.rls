           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:17.77*/

                         /*procedure Display.SetValue*/


rule_family setvalue_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

setvalue_rules(1): character__first <= element(fld_text(fld_top(element(msgtostrings, [I]))), [J]) may_be_deduced_from [blank <= I, I <= doorunlocked, 1 <= J, J <= 23].
setvalue_rules(2): element(fld_text(fld_top(element(msgtostrings, [I]))), [J]) <= 
     character__last may_be_deduced_from [blank <= I, I <= doorunlocked, 1 <= J, J <= 23].
setvalue_rules(3): msgtextcount__first <= fld_len(fld_top(element(msgtostrings, [I]))) may_be_deduced_from [blank <= I, I <= doorunlocked].
setvalue_rules(4): fld_len(fld_top(element(msgtostrings, [I]))) <= 
     msgtextcount__last may_be_deduced_from [blank <= I, I <= doorunlocked].
setvalue_rules(5): character__first <= element(fld_text(fld_bottom(element(msgtostrings, [I]))), [J]) may_be_deduced_from [blank <= I, I <= doorunlocked, 1 <= J, J <= 23].
setvalue_rules(6): element(fld_text(fld_bottom(element(msgtostrings, [I]))), [J]) <= 
     character__last may_be_deduced_from [blank <= I, I <= doorunlocked, 1 <= J, J <= 23].
setvalue_rules(7): msgtextcount__first <= fld_len(fld_bottom(element(msgtostrings, [I]))) may_be_deduced_from [blank <= I, I <= doorunlocked].
setvalue_rules(8): fld_len(fld_bottom(element(msgtostrings, [I]))) <= 
     msgtextcount__last may_be_deduced_from [blank <= I, I <= doorunlocked].
setvalue_rules(9): integer__size >= 0 may_be_deduced.
setvalue_rules(10): integer__first may_be_replaced_by -2147483648.
setvalue_rules(11): integer__last may_be_replaced_by 2147483647.
setvalue_rules(12): integer__base__first may_be_replaced_by -2147483648.
setvalue_rules(13): integer__base__last may_be_replaced_by 2147483647.
setvalue_rules(14): character__size >= 0 may_be_deduced.
setvalue_rules(15): character__first may_be_replaced_by 0.
setvalue_rules(16): character__last may_be_replaced_by 255.
setvalue_rules(17): character__base__first may_be_replaced_by 0.
setvalue_rules(18): character__base__last may_be_replaced_by 255.
setvalue_rules(19): positive__size >= 0 may_be_deduced.
setvalue_rules(20): positive__first may_be_replaced_by 1.
setvalue_rules(21): positive__last may_be_replaced_by 2147483647.
setvalue_rules(22): positive__base__first may_be_replaced_by -2147483648.
setvalue_rules(23): positive__base__last may_be_replaced_by 2147483647.
setvalue_rules(24): audittypes__elementt__size >= 0 may_be_deduced.
setvalue_rules(25): audittypes__elementt__first may_be_replaced_by audittypes__startunenrolledtis.
setvalue_rules(26): audittypes__elementt__last may_be_replaced_by audittypes__systemfault.
setvalue_rules(27): audittypes__elementt__base__first may_be_replaced_by audittypes__startunenrolledtis.
setvalue_rules(28): audittypes__elementt__base__last may_be_replaced_by audittypes__systemfault.
setvalue_rules(29): audittypes__elementt__pos(
     audittypes__elementt__first) may_be_replaced_by 0.
setvalue_rules(30): audittypes__elementt__pos(
     audittypes__startunenrolledtis) may_be_replaced_by 0.
setvalue_rules(31): audittypes__elementt__val(0) may_be_replaced_by 
     audittypes__startunenrolledtis.
setvalue_rules(32): audittypes__elementt__pos(
     audittypes__startenrolledtis) may_be_replaced_by 1.
setvalue_rules(33): audittypes__elementt__val(1) may_be_replaced_by 
     audittypes__startenrolledtis.
setvalue_rules(34): audittypes__elementt__pos(
     audittypes__enrolmentcomplete) may_be_replaced_by 2.
setvalue_rules(35): audittypes__elementt__val(2) may_be_replaced_by 
     audittypes__enrolmentcomplete.
setvalue_rules(36): audittypes__elementt__pos(
     audittypes__enrolmentfailed) may_be_replaced_by 3.
setvalue_rules(37): audittypes__elementt__val(3) may_be_replaced_by 
     audittypes__enrolmentfailed.
setvalue_rules(38): audittypes__elementt__pos(
     audittypes__displaychanged) may_be_replaced_by 4.
setvalue_rules(39): audittypes__elementt__val(4) may_be_replaced_by 
     audittypes__displaychanged.
setvalue_rules(40): audittypes__elementt__pos(
     audittypes__screenchanged) may_be_replaced_by 5.
setvalue_rules(41): audittypes__elementt__val(5) may_be_replaced_by 
     audittypes__screenchanged.
setvalue_rules(42): audittypes__elementt__pos(
     audittypes__doorclosed) may_be_replaced_by 6.
setvalue_rules(43): audittypes__elementt__val(6) may_be_replaced_by 
     audittypes__doorclosed.
setvalue_rules(44): audittypes__elementt__pos(
     audittypes__dooropened) may_be_replaced_by 7.
setvalue_rules(45): audittypes__elementt__val(7) may_be_replaced_by 
     audittypes__dooropened.
setvalue_rules(46): audittypes__elementt__pos(
     audittypes__latchlocked) may_be_replaced_by 8.
setvalue_rules(47): audittypes__elementt__val(8) may_be_replaced_by 
     audittypes__latchlocked.
setvalue_rules(48): audittypes__elementt__pos(
     audittypes__latchunlocked) may_be_replaced_by 9.
setvalue_rules(49): audittypes__elementt__val(9) may_be_replaced_by 
     audittypes__latchunlocked.
setvalue_rules(50): audittypes__elementt__pos(
     audittypes__alarmraised) may_be_replaced_by 10.
setvalue_rules(51): audittypes__elementt__val(10) may_be_replaced_by 
     audittypes__alarmraised.
setvalue_rules(52): audittypes__elementt__pos(
     audittypes__alarmsilenced) may_be_replaced_by 11.
setvalue_rules(53): audittypes__elementt__val(11) may_be_replaced_by 
     audittypes__alarmsilenced.
setvalue_rules(54): audittypes__elementt__pos(
     audittypes__truncatelog) may_be_replaced_by 12.
setvalue_rules(55): audittypes__elementt__val(12) may_be_replaced_by 
     audittypes__truncatelog.
setvalue_rules(56): audittypes__elementt__pos(
     audittypes__auditalarmraised) may_be_replaced_by 13.
setvalue_rules(57): audittypes__elementt__val(13) may_be_replaced_by 
     audittypes__auditalarmraised.
setvalue_rules(58): audittypes__elementt__pos(
     audittypes__auditalarmsilenced) may_be_replaced_by 14.
setvalue_rules(59): audittypes__elementt__val(14) may_be_replaced_by 
     audittypes__auditalarmsilenced.
setvalue_rules(60): audittypes__elementt__pos(
     audittypes__usertokenremoved) may_be_replaced_by 15.
setvalue_rules(61): audittypes__elementt__val(15) may_be_replaced_by 
     audittypes__usertokenremoved.
setvalue_rules(62): audittypes__elementt__pos(
     audittypes__usertokenpresent) may_be_replaced_by 16.
setvalue_rules(63): audittypes__elementt__val(16) may_be_replaced_by 
     audittypes__usertokenpresent.
setvalue_rules(64): audittypes__elementt__pos(
     audittypes__usertokeninvalid) may_be_replaced_by 17.
setvalue_rules(65): audittypes__elementt__val(17) may_be_replaced_by 
     audittypes__usertokeninvalid.
setvalue_rules(66): audittypes__elementt__pos(
     audittypes__authcertvalid) may_be_replaced_by 18.
setvalue_rules(67): audittypes__elementt__val(18) may_be_replaced_by 
     audittypes__authcertvalid.
setvalue_rules(68): audittypes__elementt__pos(
     audittypes__authcertinvalid) may_be_replaced_by 19.
setvalue_rules(69): audittypes__elementt__val(19) may_be_replaced_by 
     audittypes__authcertinvalid.
setvalue_rules(70): audittypes__elementt__pos(
     audittypes__fingerdetected) may_be_replaced_by 20.
setvalue_rules(71): audittypes__elementt__val(20) may_be_replaced_by 
     audittypes__fingerdetected.
setvalue_rules(72): audittypes__elementt__pos(
     audittypes__fingertimeout) may_be_replaced_by 21.
setvalue_rules(73): audittypes__elementt__val(21) may_be_replaced_by 
     audittypes__fingertimeout.
setvalue_rules(74): audittypes__elementt__pos(
     audittypes__fingermatched) may_be_replaced_by 22.
setvalue_rules(75): audittypes__elementt__val(22) may_be_replaced_by 
     audittypes__fingermatched.
setvalue_rules(76): audittypes__elementt__pos(
     audittypes__fingernotmatched) may_be_replaced_by 23.
setvalue_rules(77): audittypes__elementt__val(23) may_be_replaced_by 
     audittypes__fingernotmatched.
setvalue_rules(78): audittypes__elementt__pos(
     audittypes__authcertwritten) may_be_replaced_by 24.
setvalue_rules(79): audittypes__elementt__val(24) may_be_replaced_by 
     audittypes__authcertwritten.
setvalue_rules(80): audittypes__elementt__pos(
     audittypes__authcertwritefailed) may_be_replaced_by 25.
setvalue_rules(81): audittypes__elementt__val(25) may_be_replaced_by 
     audittypes__authcertwritefailed.
setvalue_rules(82): audittypes__elementt__pos(
     audittypes__entrypermitted) may_be_replaced_by 26.
setvalue_rules(83): audittypes__elementt__val(26) may_be_replaced_by 
     audittypes__entrypermitted.
setvalue_rules(84): audittypes__elementt__pos(
     audittypes__entrytimeout) may_be_replaced_by 27.
setvalue_rules(85): audittypes__elementt__val(27) may_be_replaced_by 
     audittypes__entrytimeout.
setvalue_rules(86): audittypes__elementt__pos(
     audittypes__entrydenied) may_be_replaced_by 28.
setvalue_rules(87): audittypes__elementt__val(28) may_be_replaced_by 
     audittypes__entrydenied.
setvalue_rules(88): audittypes__elementt__pos(
     audittypes__admintokenpresent) may_be_replaced_by 29.
setvalue_rules(89): audittypes__elementt__val(29) may_be_replaced_by 
     audittypes__admintokenpresent.
setvalue_rules(90): audittypes__elementt__pos(
     audittypes__admintokenvalid) may_be_replaced_by 30.
setvalue_rules(91): audittypes__elementt__val(30) may_be_replaced_by 
     audittypes__admintokenvalid.
setvalue_rules(92): audittypes__elementt__pos(
     audittypes__admintokeninvalid) may_be_replaced_by 31.
setvalue_rules(93): audittypes__elementt__val(31) may_be_replaced_by 
     audittypes__admintokeninvalid.
setvalue_rules(94): audittypes__elementt__pos(
     audittypes__admintokenexpired) may_be_replaced_by 32.
setvalue_rules(95): audittypes__elementt__val(32) may_be_replaced_by 
     audittypes__admintokenexpired.
setvalue_rules(96): audittypes__elementt__pos(
     audittypes__admintokenremoved) may_be_replaced_by 33.
setvalue_rules(97): audittypes__elementt__val(33) may_be_replaced_by 
     audittypes__admintokenremoved.
setvalue_rules(98): audittypes__elementt__pos(
     audittypes__invalidoprequest) may_be_replaced_by 34.
setvalue_rules(99): audittypes__elementt__val(34) may_be_replaced_by 
     audittypes__invalidoprequest.
setvalue_rules(100): audittypes__elementt__pos(
     audittypes__operationstart) may_be_replaced_by 35.
setvalue_rules(101): audittypes__elementt__val(35) may_be_replaced_by 
     audittypes__operationstart.
setvalue_rules(102): audittypes__elementt__pos(
     audittypes__archivelog) may_be_replaced_by 36.
setvalue_rules(103): audittypes__elementt__val(36) may_be_replaced_by 
     audittypes__archivelog.
setvalue_rules(104): audittypes__elementt__pos(
     audittypes__archivecomplete) may_be_replaced_by 37.
setvalue_rules(105): audittypes__elementt__val(37) may_be_replaced_by 
     audittypes__archivecomplete.
setvalue_rules(106): audittypes__elementt__pos(
     audittypes__archivecheckfailed) may_be_replaced_by 38.
setvalue_rules(107): audittypes__elementt__val(38) may_be_replaced_by 
     audittypes__archivecheckfailed.
setvalue_rules(108): audittypes__elementt__pos(
     audittypes__updatedconfigdata) may_be_replaced_by 39.
setvalue_rules(109): audittypes__elementt__val(39) may_be_replaced_by 
     audittypes__updatedconfigdata.
setvalue_rules(110): audittypes__elementt__pos(
     audittypes__invalidconfigdata) may_be_replaced_by 40.
setvalue_rules(111): audittypes__elementt__val(40) may_be_replaced_by 
     audittypes__invalidconfigdata.
setvalue_rules(112): audittypes__elementt__pos(
     audittypes__shutdown) may_be_replaced_by 41.
setvalue_rules(113): audittypes__elementt__val(41) may_be_replaced_by 
     audittypes__shutdown.
setvalue_rules(114): audittypes__elementt__pos(
     audittypes__overridelock) may_be_replaced_by 42.
setvalue_rules(115): audittypes__elementt__val(42) may_be_replaced_by 
     audittypes__overridelock.
setvalue_rules(116): audittypes__elementt__pos(
     audittypes__systemfault) may_be_replaced_by 43.
setvalue_rules(117): audittypes__elementt__val(43) may_be_replaced_by 
     audittypes__systemfault.
setvalue_rules(118): audittypes__elementt__pos(
     audittypes__elementt__last) may_be_replaced_by 43.
setvalue_rules(119): audittypes__elementt__pos(succ(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) + 1
     if [X <=audittypes__systemfault, X <> 
     audittypes__systemfault].
setvalue_rules(120): audittypes__elementt__pos(pred(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) - 1
     if [X >=audittypes__startunenrolledtis, X <> 
     audittypes__startunenrolledtis].
setvalue_rules(121): audittypes__elementt__pos(X) >= 0 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
setvalue_rules(122): audittypes__elementt__pos(X) <= 43 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
setvalue_rules(123): audittypes__elementt__val(X) >= 
     audittypes__startunenrolledtis may_be_deduced_from
     [0 <= X, X <= 43].
setvalue_rules(124): audittypes__elementt__val(X) <= 
     audittypes__systemfault may_be_deduced_from
     [0 <= X, X <= 43].
setvalue_rules(125): succ(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X+1)
     if [0 <= X, X < 43].
setvalue_rules(126): pred(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X-1)
     if [0 < X, X <= 43].
setvalue_rules(127): audittypes__elementt__pos(
     audittypes__elementt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 43].
setvalue_rules(128): audittypes__elementt__val(
     audittypes__elementt__pos(X)) may_be_replaced_by X
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
setvalue_rules(129): audittypes__elementt__pos(X) <= 
     audittypes__elementt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault, audittypes__startunenrolledtis <= Y, Y <= 
     audittypes__systemfault].
setvalue_rules(130): audittypes__elementt__val(X) <= 
     audittypes__elementt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 43, 0 <= Y, Y <= 43].
setvalue_rules(131): audittypes__severityt__size >= 0 may_be_deduced.
setvalue_rules(132): audittypes__severityt__first may_be_replaced_by audittypes__information.
setvalue_rules(133): audittypes__severityt__last may_be_replaced_by audittypes__critical.
setvalue_rules(134): audittypes__severityt__base__first may_be_replaced_by audittypes__information.
setvalue_rules(135): audittypes__severityt__base__last may_be_replaced_by audittypes__critical.
setvalue_rules(136): audittypes__severityt__pos(
     audittypes__severityt__first) may_be_replaced_by 0.
setvalue_rules(137): audittypes__severityt__pos(
     audittypes__information) may_be_replaced_by 0.
setvalue_rules(138): audittypes__severityt__val(0) may_be_replaced_by 
     audittypes__information.
setvalue_rules(139): audittypes__severityt__pos(
     audittypes__warning) may_be_replaced_by 1.
setvalue_rules(140): audittypes__severityt__val(1) may_be_replaced_by 
     audittypes__warning.
setvalue_rules(141): audittypes__severityt__pos(
     audittypes__critical) may_be_replaced_by 2.
setvalue_rules(142): audittypes__severityt__val(2) may_be_replaced_by 
     audittypes__critical.
setvalue_rules(143): audittypes__severityt__pos(
     audittypes__severityt__last) may_be_replaced_by 2.
setvalue_rules(144): audittypes__severityt__pos(succ(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) + 1
     if [X <=audittypes__critical, X <> audittypes__critical].
setvalue_rules(145): audittypes__severityt__pos(pred(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) - 1
     if [X >=audittypes__information, X <> 
     audittypes__information].
setvalue_rules(146): audittypes__severityt__pos(X) >= 0 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
setvalue_rules(147): audittypes__severityt__pos(X) <= 2 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
setvalue_rules(148): audittypes__severityt__val(X) >= 
     audittypes__information may_be_deduced_from
     [0 <= X, X <= 2].
setvalue_rules(149): audittypes__severityt__val(X) <= 
     audittypes__critical may_be_deduced_from
     [0 <= X, X <= 2].
setvalue_rules(150): succ(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X+1)
     if [0 <= X, X < 2].
setvalue_rules(151): pred(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X-1)
     if [0 < X, X <= 2].
setvalue_rules(152): audittypes__severityt__pos(
     audittypes__severityt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 2].
setvalue_rules(153): audittypes__severityt__val(
     audittypes__severityt__pos(X)) may_be_replaced_by X
     if [audittypes__information <= X, X <= audittypes__critical].
setvalue_rules(154): audittypes__severityt__pos(X) <= 
     audittypes__severityt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__information <= X, X <= audittypes__critical, 
     audittypes__information <= Y, Y <= audittypes__critical].
setvalue_rules(155): audittypes__severityt__val(X) <= 
     audittypes__severityt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 2, 0 <= Y, Y <= 2].
setvalue_rules(156): msgt__size >= 0 may_be_deduced.
setvalue_rules(157): msgt__first may_be_replaced_by blank.
setvalue_rules(158): msgt__last may_be_replaced_by doorunlocked.
setvalue_rules(159): msgt__base__first may_be_replaced_by blank.
setvalue_rules(160): msgt__base__last may_be_replaced_by doorunlocked.
setvalue_rules(161): msgt__pos(msgt__first) may_be_replaced_by 0.
setvalue_rules(162): msgt__pos(blank) may_be_replaced_by 0.
setvalue_rules(163): msgt__val(0) may_be_replaced_by blank.
setvalue_rules(164): msgt__pos(welcome) may_be_replaced_by 1.
setvalue_rules(165): msgt__val(1) may_be_replaced_by welcome.
setvalue_rules(166): msgt__pos(insertfinger) may_be_replaced_by 2.
setvalue_rules(167): msgt__val(2) may_be_replaced_by insertfinger.
setvalue_rules(168): msgt__pos(opendoor) may_be_replaced_by 3.
setvalue_rules(169): msgt__val(3) may_be_replaced_by opendoor.
setvalue_rules(170): msgt__pos(wait) may_be_replaced_by 4.
setvalue_rules(171): msgt__val(4) may_be_replaced_by wait.
setvalue_rules(172): msgt__pos(removetoken) may_be_replaced_by 5.
setvalue_rules(173): msgt__val(5) may_be_replaced_by removetoken.
setvalue_rules(174): msgt__pos(tokenupdatefailed) may_be_replaced_by 6.
setvalue_rules(175): msgt__val(6) may_be_replaced_by 
     tokenupdatefailed.
setvalue_rules(176): msgt__pos(doorunlocked) may_be_replaced_by 7.
setvalue_rules(177): msgt__val(7) may_be_replaced_by doorunlocked.
setvalue_rules(178): msgt__pos(msgt__last) may_be_replaced_by 7.
setvalue_rules(179): msgt__pos(succ(X)) may_be_replaced_by msgt__pos(X) + 1
     if [X <=doorunlocked, X <> doorunlocked].
setvalue_rules(180): msgt__pos(pred(X)) may_be_replaced_by msgt__pos(X) - 1
     if [X >=blank, X <> blank].
setvalue_rules(181): msgt__pos(X) >= 0 may_be_deduced_from
     [blank <= X, X <= doorunlocked].
setvalue_rules(182): msgt__pos(X) <= 7 may_be_deduced_from
     [blank <= X, X <= doorunlocked].
setvalue_rules(183): msgt__val(X) >= blank may_be_deduced_from
     [0 <= X, X <= 7].
setvalue_rules(184): msgt__val(X) <= doorunlocked may_be_deduced_from
     [0 <= X, X <= 7].
setvalue_rules(185): succ(msgt__val(X)) may_be_replaced_by msgt__val(X+1)
     if [0 <= X, X < 7].
setvalue_rules(186): pred(msgt__val(X)) may_be_replaced_by msgt__val(X-1)
     if [0 < X, X <= 7].
setvalue_rules(187): msgt__pos(msgt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 7].
setvalue_rules(188): msgt__val(msgt__pos(X)) may_be_replaced_by X
     if [blank <= X, X <= doorunlocked].
setvalue_rules(189): msgt__pos(X) <= msgt__pos(Y) & X <= Y are_interchangeable 
     if [blank <= X, X <= doorunlocked, blank <= Y, Y <= 
     doorunlocked].
setvalue_rules(190): msgt__val(X) <= msgt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 7, 0 <= Y, Y <= 7].
setvalue_rules(191): msgtextcount__size >= 0 may_be_deduced.
setvalue_rules(192): msgtextcount__first may_be_replaced_by 0.
setvalue_rules(193): msgtextcount__last may_be_replaced_by 23.
setvalue_rules(194): msgtextcount__base__first may_be_replaced_by -2147483648.
setvalue_rules(195): msgtextcount__base__last may_be_replaced_by 2147483647.
setvalue_rules(196): msglinet__size >= 0 may_be_deduced.
setvalue_rules(197): A = B may_be_deduced_from
     [goal(checktype(A,msglinet)),
      goal(checktype(B,msglinet)),
      fld_text(A) = fld_text(B),
      fld_len(A) = fld_len(B)].
setvalue_rules(198): msgstrt__size >= 0 may_be_deduced.
setvalue_rules(199): A = B may_be_deduced_from
     [goal(checktype(A,msgstrt)),
      goal(checktype(B,msgstrt)),
      fld_top(A) = fld_top(B),
      fld_bottom(A) = fld_bottom(B)].
setvalue_rules(200): scrolltextcount__size >= 0 may_be_deduced.
setvalue_rules(201): scrolltextcount__first may_be_replaced_by 0.
setvalue_rules(202): scrolltextcount__last may_be_replaced_by 50.
setvalue_rules(203): scrolltextcount__base__first may_be_replaced_by -2147483648.
setvalue_rules(204): scrolltextcount__base__last may_be_replaced_by 2147483647.
setvalue_rules(205): scrolltexti__size >= 0 may_be_deduced.
setvalue_rules(206): scrolltexti__first may_be_replaced_by 1.
setvalue_rules(207): scrolltexti__last may_be_replaced_by 50.
setvalue_rules(208): scrolltexti__base__first may_be_replaced_by -2147483648.
setvalue_rules(209): scrolltexti__base__last may_be_replaced_by 2147483647.
setvalue_rules(210): scrollstrt__size >= 0 may_be_deduced.
setvalue_rules(211): A = B may_be_deduced_from
     [goal(checktype(A,scrollstrt)),
      goal(checktype(B,scrollstrt)),
      fld_text(A) = fld_text(B),
      fld_len(A) = fld_len(B)].
