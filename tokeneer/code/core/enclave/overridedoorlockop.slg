*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:26  SIMPLIFIED 05-SEP-2011, 15:40:38

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure Enclave.OverrideDoorLockOp






RRS  The following user defined rule files have been read:
&&&  d:/sparkdev/tis2011/code/core/enclave/enclave.rlu
SEM  No semantic checks are performed on the rules.


@@@@@@@@@@  VC: procedure_overridedoorlockop_1.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__information
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__overridelock
-S-  Applied substitution rule overridedoor_rules(124).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule overridedoor_rules(125).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule overridedoor_rules(17).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule overridedoor_rules(18).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_overridedoorlockop_2.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  audittypes__severityt__first <= audittypes__information
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  audittypes__elementt__first <= audittypes__overridelock
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  screen__msgtextt__first <= screen__requestadminop
-S-  Applied substitution rule overridedoor_rules(291).
     This was achieved by replacing all occurrences of screen__msgtextt__first 
          by:
          screen__clear.
<S>  New C1:  true
-S-  Applied substitution rule overridedoor_rules(292).
     This was achieved by replacing all occurrences of screen__msgtextt__last 
          by:
          screen__insertconfigdata.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_overridedoorlockop_3.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  audittypes__severityt__first <= audittypes__information
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  audittypes__elementt__first <= audittypes__overridelock
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  screen__msgtextt__first <= screen__requestadminop
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  display__msgt__first <= display__doorunlocked
-S-  Applied substitution rule overridedoor_rules(256).
     This was achieved by replacing all occurrences of display__msgt__first by:
          display__blank.
<S>  New C1:  true
-S-  Applied substitution rule overridedoor_rules(257).
     This was achieved by replacing all occurrences of display__msgt__last by:
          display__doorunlocked.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_overridedoorlockop_4.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  audittypes__severityt__first <= audittypes__information
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  audittypes__elementt__first <= audittypes__overridelock
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  screen__msgtextt__first <= screen__requestadminop
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  display__msgt__first <= display__doorunlocked
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  statust__first <= enclavequiescent
-S-  Applied substitution rule overridedoor_rules(340).
     This was achieved by replacing all occurrences of statust__first by:
          notenrolled.
<S>  New C1:  true
-S-  Applied substitution rule overridedoor_rules(341).
     This was achieved by replacing all occurrences of statust__last by:
          shutdown.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_overridedoorlockop_5.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  audittypes__severityt__first <= audittypes__information
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  audittypes__elementt__first <= audittypes__overridelock
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  screen__msgtextt__first <= screen__requestadminop
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  display__msgt__first <= display__doorunlocked
%%%  Simplified H16 on reading formula in, to give:
     %%%  H16:  statust__first <= enclavequiescent
+++  Using "A->B, A |- B" on hypotheses H4 & H3 yields a new hypothesis:
     +++  H20:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
+++  Using "A->B, A |- B" on hypotheses H6 & H3 yields a new hypothesis:
     +++  H21:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
-S-  Applied substitution rule overridedoor_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> 0 <= element(
          admintoken__extractuser(admintoken__state), [i___1]) and element(
          admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
-S-  Applied substitution rule overridedoor_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> 0 <= element(
          admintoken__extractuser(admintoken__state), [i___1]) and element(
          admintoken__extractuser(admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule overridedoor_rules(17).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H10:  true
-S-  Applied substitution rule overridedoor_rules(18).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H11:  true
-S-  Applied substitution rule overridedoor_rules(124).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H8:  true
-S-  Applied substitution rule overridedoor_rules(125).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H9:  true
-S-  Applied substitution rule overridedoor_rules(149).
     This was achieved by replacing all occurrences of 
          audittypes__usertexti__first by:
          1.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          audittypes__usertexti__last -> 0 <= element(admintoken__extractuser(
          admintoken__state), [i___1]) and element(admintoken__extractuser(
          admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule overridedoor_rules(150).
     This was achieved by replacing all occurrences of 
          audittypes__usertexti__last by:
          50.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 50 -> 0 <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule overridedoor_rules(256).
     This was achieved by replacing all occurrences of display__msgt__first by:
          display__blank.
<S>  New H14:  true
-S-  Applied substitution rule overridedoor_rules(257).
     This was achieved by replacing all occurrences of display__msgt__last by:
          display__doorunlocked.
<S>  New H15:  true
-S-  Applied substitution rule overridedoor_rules(291).
     This was achieved by replacing all occurrences of screen__msgtextt__first 
          by:
          screen__clear.
<S>  New H12:  true
-S-  Applied substitution rule overridedoor_rules(292).
     This was achieved by replacing all occurrences of screen__msgtextt__last 
          by:
          screen__insertconfigdata.
<S>  New H13:  true
-S-  Applied substitution rule overridedoor_rules(340).
     This was achieved by replacing all occurrences of statust__first by:
          notenrolled.
<S>  New H16:  true
-S-  Applied substitution rule overridedoor_rules(341).
     This was achieved by replacing all occurrences of statust__last by:
          shutdown.
<S>  New H17:  true
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H21 (true-disjunction).
>>>  Using "A->B, A |- B" on H4, given H3, we simplify the former to:
     >>>  H4:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
>>>  Using "A->B, A |- B" on H5, given H1 & H2, we simplify the former to:
     >>>  H5:  admin__prf_rolepresent(theadmin) = privtypes__guard
>>>  Using "A->B, A |- B" on H6, given H3, we simplify the former to:
     >>>  H6:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
>>>  Hypothesis H4 has now been split into two, giving:
     >>>  H22:  admintoken__prf_isgood(admintoken__state)
     >>>  H23:  admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard
---  Attempted addition of new hypothesis:
          admintoken__prf_isgood(admintoken__state)
     eliminated: this already exists (as H22).
---  Attempted addition of new hypothesis:
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard
     eliminated: this already exists (as H23).
>>>  Hypothesis H20 has now been split into two, giving:
     >>>  H22:  admintoken__prf_isgood(admintoken__state)
     >>>  H23:  admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard
>>>  Hypothesis H23 has now been split into two, giving:
     >>>  H24:  admintoken__prf_authcertvalid(admintoken__state)
     >>>  H25:  admintoken__theauthcertrole(admintoken__state) = 
          privtypes__guard
     +++  New H26:  integer__size >= 0
     +++  New H27:  character__size >= 0
     +++  New H28:  positive__size >= 0
     +++  New H29:  audittypes__elementt__size >= 0
     +++  New H30:  audittypes__severityt__size >= 0
     +++  New H31:  audittypes__usertexti__size >= 0
     +++  New H32:  alarmtypes__statust__size >= 0
     +++  New H33:  privtypes__privileget__size >= 0
     +++  New H34:  door__t__size >= 0
     +++  New H35:  admin__opandnullt__size >= 0
     +++  New H36:  display__msgt__size >= 0
     +++  New H37:  screen__msgtextt__size >= 0
     +++  New H38:  statust__size >= 0
***  Proved C1:  admin__ispresent(theadmin)
     This was achieved by applying the inference rule enclave_user(3)
     [from rulefile enclave.rlu] to infer this conclusion from its 
          side-conditions,
     which were established as follows:
     <<<  From H3, proved: admin__prf_rolepresent(theadmin) = privtypes__guard
     <<<  By simple reasoning, proved: privtypes__guard <> privtypes__useronly
***  PROVED VC.

VCN  5: Summary of user rule application.
FIL  enclave.rlu
RUL     enclave_user(3)
CON        1


@@@@@@@@@@  VC: procedure_overridedoorlockop_6.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  audittypes__severityt__first <= audittypes__information
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  audittypes__elementt__first <= audittypes__overridelock
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  screen__msgtextt__first <= screen__requestadminop
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  display__msgt__first <= display__doorunlocked
%%%  Simplified H16 on reading formula in, to give:
     %%%  H16:  statust__first <= enclavequiescent
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
***  Proved C1:  true
***  Proved C2:  latch__islocked(latch__state__4) and (door__thecurrentdoor(
          door__state__4) = door__open and clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), door__prf_alarmtimeout(
          door__state__4))) <-> door__thedooralarm(door__state__4) = 
          alarmtypes__alarming
     using hypothesis H18.
***  Proved C3:  admin__prf_rolepresent(theadmin__5) = admin__prf_rolepresent(
          theadmin)
     using hypothesis H22.
***  Proved C4:  not admin__isdoingop(theadmin__5)
     using hypothesis H21.
***  Proved C7:  admin__isdoingop(theadmin__5) and admin__thecurrentop(
          theadmin__5) = admin__overridelock -> admin__prf_rolepresent(
          theadmin__5) = privtypes__guard
     using hypotheses H3 & H22.
***  Proved C8:  admin__prf_rolepresent(theadmin__5) = privtypes__guard -> 
          admin__isdoingop(theadmin__5) and admin__thecurrentop(theadmin__5) = 
          admin__overridelock or not admin__isdoingop(theadmin__5)
     using hypothesis H21.
***  Proved C9:  not latch__islocked(latch__state__4) and latch__islocked(
          latch__state) -> admin__isdoingop(theadmin) and admin__thecurrentop(
          theadmin) = admin__overridelock
     using hypotheses H1 & H2.
+++  Using "A->B, A |- B" on hypotheses H4 & H3 yields a new hypothesis:
     +++  H24:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
+++  Using "A->B, A |- B" on hypotheses H6 & H3 yields a new hypothesis:
     +++  H25:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
-S-  Applied substitution rule overridedoor_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> 0 <= element(
          admintoken__extractuser(admintoken__state), [i___1]) and element(
          admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
-S-  Applied substitution rule overridedoor_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H7:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> 0 <= element(
          admintoken__extractuser(admintoken__state), [i___1]) and element(
          admintoken__extractuser(admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule overridedoor_rules(17).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H10:  true
-S-  Applied substitution rule overridedoor_rules(18).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H11:  true
-S-  Applied substitution rule overridedoor_rules(124).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H8:  true
-S-  Applied substitution rule overridedoor_rules(125).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H9:  true
-S-  Applied substitution rule overridedoor_rules(149).
     This was achieved by replacing all occurrences of 
          audittypes__usertexti__first by:
          1.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          audittypes__usertexti__last -> 0 <= element(admintoken__extractuser(
          admintoken__state), [i___1]) and element(admintoken__extractuser(
          admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule overridedoor_rules(150).
     This was achieved by replacing all occurrences of 
          audittypes__usertexti__last by:
          50.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 50 -> 0 <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule overridedoor_rules(256).
     This was achieved by replacing all occurrences of display__msgt__first by:
          display__blank.
<S>  New H14:  true
-S-  Applied substitution rule overridedoor_rules(257).
     This was achieved by replacing all occurrences of display__msgt__last by:
          display__doorunlocked.
<S>  New H15:  true
-S-  Applied substitution rule overridedoor_rules(291).
     This was achieved by replacing all occurrences of screen__msgtextt__first 
          by:
          screen__clear.
<S>  New H12:  true
-S-  Applied substitution rule overridedoor_rules(292).
     This was achieved by replacing all occurrences of screen__msgtextt__last 
          by:
          screen__insertconfigdata.
<S>  New H13:  true
-S-  Applied substitution rule overridedoor_rules(340).
     This was achieved by replacing all occurrences of statust__first by:
          notenrolled.
<S>  New H16:  true
-S-  Applied substitution rule overridedoor_rules(341).
     This was achieved by replacing all occurrences of statust__last by:
          shutdown.
<S>  New H17:  true
***  Proved C5:  admin__prf_rolepresent(theadmin__5) = privtypes__guard -> 
          admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
     using hypothesis H24.
***  Proved C6:  not latch__islocked(latch__state__4) and latch__islocked(
          latch__state) -> admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
     using hypothesis H24.
***  PROVED VC.


OVR  Overall summary of VCs using user rules.
FIL  enclave.rlu
RUL     enclave_user(3)
VCS        5

