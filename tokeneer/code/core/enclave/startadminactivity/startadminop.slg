*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:27  SIMPLIFIED 05-SEP-2011, 15:40:47

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure Enclave.StartAdminActivity.StartAdminOp






RRS  The following user defined rule files have been read:
&&&  
          d:/sparkdev/tis2011/code/core/enclave/startadminactivity/startadminactivity.rlu
SEM  No semantic checks are performed on the rules.


@@@@@@@@@@  VC: procedure_startadminop_1.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  basictypes__presencet__first <= keyeddatapresence__1
***  Proved C1:  basictypes__presencet__first <= keyeddatapresence__1
     using hypothesis H10.
***  Proved C2:  keyeddatapresence__1 <= basictypes__presencet__last
     using hypothesis H11.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_2.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
***  Proved C1:  admin__ispresent(theadmin)
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_3.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
***  Proved C1:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
     using hypothesis H24.
***  Proved C2:  admin__opisavailable(theadmin, keyeddata__1) <= 
          admin__opandnullt__last
     using hypothesis H25.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_4.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
***  Proved C1:  admin__opisavailable(theadmin, keyeddata__1) <> admin__nullop 
          -> (admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock <-> admin__prf_rolepresent(theadmin) = 
          privtypes__guard)
     using hypothesis H26.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_5.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  statust__first <= waitingstartadminop
***  Proved C1:  statust__first <= waitingstartadminop
     using hypotheses H2 & H8.
-S-  Applied substitution rule startadminop_rules(300).
     This was achieved by replacing all occurrences of statust__last by:
          shutdown.
<S>  New H9:  status <= shutdown
<S>  New C2:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_6.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  statust__first <= waitingstartadminop
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  screen__msgtextt__first <= screen__doingop
-S-  Applied substitution rule startadminop_rules(250).
     This was achieved by replacing all occurrences of screen__msgtextt__first 
          by:
          screen__clear.
<S>  New C1:  true
-S-  Applied substitution rule startadminop_rules(251).
     This was achieved by replacing all occurrences of screen__msgtextt__last 
          by:
          screen__insertconfigdata.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_7.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  statust__first <= waitingstartadminop
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  screen__msgtextt__first <= screen__doingop
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H38 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  admin__opt__first <= admin__opisavailable(theadmin, keyeddata__1)
***  Proved C3:  admin__ispresent(theadmin)
     using hypothesis H3.
-S-  Applied substitution rule startadminop_rules(245).
     This was achieved by replacing all occurrences of admin__opt__first by:
          admin__archivelog.
<S>  New C1:  admin__archivelog <= admin__opisavailable(theadmin, keyeddata__1)
-S-  Applied substitution rule startadminop_rules(246).
     This was achieved by replacing all occurrences of admin__opt__last by:
          admin__shutdownop.
<S>  New C2:  admin__opisavailable(theadmin, keyeddata__1) <= admin__shutdownop
+++  Using "A->B, A |- B" on hypotheses H26 & H32 yields a new hypothesis:
     +++  H39:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock <-> admin__prf_rolepresent(theadmin) = 
          privtypes__guard
-S-  Applied substitution rule startadminop_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> 0 <= element(fld_text(keyeddata__1)
          , [i___1]) and element(fld_text(keyeddata__1), [i___1]) <= 
          character__last)
-S-  Applied substitution rule startadminop_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> 0 <= element(fld_text(keyeddata__1)
          , [i___1]) and element(fld_text(keyeddata__1), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(17).
     This was achieved by replacing all occurrences of 
          basictypes__presencet__first by:
          basictypes__present.
<S>  New H10:  basictypes__present <= keyeddatapresence__1
-S-  Applied substitution rule startadminop_rules(18).
     This was achieved by replacing all occurrences of 
          basictypes__presencet__last by:
          basictypes__absent.
<S>  New H11:  keyeddatapresence__1 <= basictypes__absent
-S-  Applied substitution rule startadminop_rules(204).
     This was achieved by replacing all occurrences of 
          keyboard__datalengtht__first by:
          0.
<S>  New H13:  fld_length(keyeddata__1) >= 0
-S-  Applied substitution rule startadminop_rules(205).
     This was achieved by replacing all occurrences of 
          keyboard__datalengtht__last by:
          78.
<S>  New H14:  fld_length(keyeddata__1) <= 78
-S-  Applied substitution rule startadminop_rules(209).
     This was achieved by replacing all occurrences of keyboard__datai__first 
          by:
          1.
<S>  New H12:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          keyboard__datai__last -> 0 <= element(fld_text(keyeddata__1), [i___1])
           and element(fld_text(keyeddata__1), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(210).
     This was achieved by replacing all occurrences of keyboard__datai__last by:
          78.
<S>  New H12:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 78 -> 0 <= 
          element(fld_text(keyeddata__1), [i___1]) and element(fld_text(
          keyeddata__1), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(216).
     This was achieved by replacing all occurrences of admin__opandnullt__first 
          by:
          admin__nullop.
<S>  New H24:  admin__nullop <= admin__opisavailable(theadmin, keyeddata__1)
-S-  Applied substitution rule startadminop_rules(217).
     This was achieved by replacing all occurrences of admin__opandnullt__last 
          by:
          admin__shutdownop.
<S>  New H25:  admin__opisavailable(theadmin, keyeddata__1) <= admin__shutdownop
-S-  Applied substitution rule startadminop_rules(250).
     This was achieved by replacing all occurrences of screen__msgtextt__first 
          by:
          screen__clear.
<S>  New H35:  true
-S-  Applied substitution rule startadminop_rules(251).
     This was achieved by replacing all occurrences of screen__msgtextt__last 
          by:
          screen__insertconfigdata.
<S>  New H36:  true
-S-  Applied substitution rule startadminop_rules(299).
     This was achieved by replacing all occurrences of statust__first by:
          notenrolled.
<S>  New H8:  notenrolled <= status
<S>  New H33:  true
-S-  Applied substitution rule startadminop_rules(300).
     This was achieved by replacing all occurrences of statust__last by:
          shutdown.
<S>  New H9:  status <= shutdown
<S>  New H34:  true
%%%  Hypotheses H24 & H32 together imply that
          admin__nullop < admin__opisavailable(theadmin, keyeddata__1).
     H24 & H32 have therefore been deleted and a new H40 added to this effect.
***  Proved C1:  admin__archivelog <= admin__opisavailable(theadmin, 
          keyeddata__1)
     using hypothesis H40.
***  Proved C2:  admin__opisavailable(theadmin, keyeddata__1) <= 
          admin__shutdownop
     using hypothesis H25.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_8.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  statust__first <= waitingstartadminop
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  screen__msgtextt__first <= screen__doingop
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H38 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H39 on reading formula in, to give:
     %%%  H39:  admin__opt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H41 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H47 on reading formula in, to give:
     %%%  H47:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H14).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__information
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__operationstart
-S-  Applied substitution rule startadminop_rules(147).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule startadminop_rules(148).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule startadminop_rules(40).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule startadminop_rules(41).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_9.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  screen__msgtextt__first <= screen__invalidrequest
-S-  Applied substitution rule startadminop_rules(250).
     This was achieved by replacing all occurrences of screen__msgtextt__first 
          by:
          screen__clear.
<S>  New C1:  true
-S-  Applied substitution rule startadminop_rules(251).
     This was achieved by replacing all occurrences of screen__msgtextt__last 
          by:
          screen__insertconfigdata.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_10.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  screen__msgtextt__first <= screen__invalidrequest
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H38 has been replaced by "true".  (It is already present, as 
          H14).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__invalidoprequest
-S-  Applied substitution rule startadminop_rules(147).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule startadminop_rules(148).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule startadminop_rules(40).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule startadminop_rules(41).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_11.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  statust__first <= waitingstartadminop
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  screen__msgtextt__first <= screen__doingop
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H38 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H39 on reading formula in, to give:
     %%%  H39:  admin__opt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H41 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H47 on reading formula in, to give:
     %%%  H47:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
---  Hypothesis H48 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H49 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H14).
%%%  Simplified H51 on reading formula in, to give:
     %%%  H51:  audittypes__severityt__first <= audittypes__information
%%%  Simplified H53 on reading formula in, to give:
     %%%  H53:  audittypes__elementt__first <= audittypes__operationstart
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  true
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  admin__isdoingop(theadmin__3) and (admin__ispresent(theadmin__3) 
          and admin__prf_rolepresent(theadmin__3) = admin__prf_rolepresent(
          theadmin))
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  true
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  true
***  Proved C1:  true
***  Proved C5:  true
***  Proved C6:  admin__isdoingop(theadmin__3) and (admin__ispresent(
          theadmin__3) and admin__prf_rolepresent(theadmin__3) = 
          admin__prf_rolepresent(theadmin))
     using hypotheses H44, H45 & H46.
***  Proved C7:  true
***  Proved C8:  true
>>>  Conclusion C6 has now been split into two, giving:
     >>>  C6:  admin__isdoingop(theadmin__3)
     >>>  C9:  admin__ispresent(theadmin__3) and admin__prf_rolepresent(
          theadmin__3) = admin__prf_rolepresent(theadmin)
>>>  Conclusion C9 has now been split into two, giving:
     >>>  C9:  admin__ispresent(theadmin__3)
     >>>  C10:  admin__prf_rolepresent(theadmin__3) = admin__prf_rolepresent(
          theadmin)
+++  Using "A->B, A |- B" on hypotheses H26 & H32 yields a new hypothesis:
     +++  H55:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock <-> admin__prf_rolepresent(theadmin) = 
          privtypes__guard
+++  Using "A->B, A |- B" on hypotheses H42 & H55 yields a new hypothesis:
     +++  H56:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock <-> admin__prf_rolepresent(theadmin__3) = 
          privtypes__guard
-S-  Applied substitution rule startadminop_rules(7).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> 0 <= element(fld_text(keyeddata__1)
          , [i___1]) and element(fld_text(keyeddata__1), [i___1]) <= 
          character__last)
<S>  New H47:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> 0 <= element(
          admintoken__extractuser(admintoken__state), [i___1]) and element(
          admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
-S-  Applied substitution rule startadminop_rules(8).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> 0 <= element(fld_text(keyeddata__1)
          , [i___1]) and element(fld_text(keyeddata__1), [i___1]) <= 255)
<S>  New H47:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> 0 <= element(
          admintoken__extractuser(admintoken__state), [i___1]) and element(
          admintoken__extractuser(admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(17).
     This was achieved by replacing all occurrences of 
          basictypes__presencet__first by:
          basictypes__present.
<S>  New H10:  basictypes__present <= keyeddatapresence__1
-S-  Applied substitution rule startadminop_rules(18).
     This was achieved by replacing all occurrences of 
          basictypes__presencet__last by:
          basictypes__absent.
<S>  New H11:  keyeddatapresence__1 <= basictypes__absent
-S-  Applied substitution rule startadminop_rules(40).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H53:  true
-S-  Applied substitution rule startadminop_rules(41).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H54:  true
-S-  Applied substitution rule startadminop_rules(147).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H51:  true
-S-  Applied substitution rule startadminop_rules(148).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H52:  true
-S-  Applied substitution rule startadminop_rules(172).
     This was achieved by replacing all occurrences of 
          audittypes__usertexti__first by:
          1.
<S>  New H47:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          audittypes__usertexti__last -> 0 <= element(admintoken__extractuser(
          admintoken__state), [i___1]) and element(admintoken__extractuser(
          admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(173).
     This was achieved by replacing all occurrences of 
          audittypes__usertexti__last by:
          50.
<S>  New H47:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 50 -> 0 <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(204).
     This was achieved by replacing all occurrences of 
          keyboard__datalengtht__first by:
          0.
<S>  New H13:  fld_length(keyeddata__1) >= 0
-S-  Applied substitution rule startadminop_rules(205).
     This was achieved by replacing all occurrences of 
          keyboard__datalengtht__last by:
          78.
<S>  New H14:  fld_length(keyeddata__1) <= 78
-S-  Applied substitution rule startadminop_rules(209).
     This was achieved by replacing all occurrences of keyboard__datai__first 
          by:
          1.
<S>  New H12:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          keyboard__datai__last -> 0 <= element(fld_text(keyeddata__1), [i___1])
           and element(fld_text(keyeddata__1), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(210).
     This was achieved by replacing all occurrences of keyboard__datai__last by:
          78.
<S>  New H12:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 78 -> 0 <= 
          element(fld_text(keyeddata__1), [i___1]) and element(fld_text(
          keyeddata__1), [i___1]) <= 255)
-S-  Applied substitution rule startadminop_rules(216).
     This was achieved by replacing all occurrences of admin__opandnullt__first 
          by:
          admin__nullop.
<S>  New H24:  admin__nullop <= admin__opisavailable(theadmin, keyeddata__1)
-S-  Applied substitution rule startadminop_rules(217).
     This was achieved by replacing all occurrences of admin__opandnullt__last 
          by:
          admin__shutdownop.
<S>  New H25:  admin__opisavailable(theadmin, keyeddata__1) <= admin__shutdownop
-S-  Applied substitution rule startadminop_rules(245).
     This was achieved by replacing all occurrences of admin__opt__first by:
          admin__archivelog.
<S>  New H39:  admin__archivelog <= admin__opisavailable(theadmin, keyeddata__1)
-S-  Applied substitution rule startadminop_rules(246).
     This was achieved by replacing all occurrences of admin__opt__last by:
          admin__shutdownop.
<S>  New H40:  admin__opisavailable(theadmin, keyeddata__1) <= admin__shutdownop
-S-  Applied substitution rule startadminop_rules(250).
     This was achieved by replacing all occurrences of screen__msgtextt__first 
          by:
          screen__clear.
<S>  New H35:  true
-S-  Applied substitution rule startadminop_rules(251).
     This was achieved by replacing all occurrences of screen__msgtextt__last 
          by:
          screen__insertconfigdata.
<S>  New H36:  true
-S-  Applied substitution rule startadminop_rules(299).
     This was achieved by replacing all occurrences of statust__first by:
          notenrolled.
<S>  New H8:  notenrolled <= status
<S>  New H33:  true
-S-  Applied substitution rule startadminop_rules(300).
     This was achieved by replacing all occurrences of statust__last by:
          shutdown.
<S>  New H9:  status <= shutdown
<S>  New H34:  true
%%%  Hypotheses H24 & H32 together imply that
          admin__nullop < admin__opisavailable(theadmin, keyeddata__1).
     H24 & H32 have therefore been deleted and a new H57 added to this effect.
***  Proved C9:  admin__ispresent(theadmin__3)
     using hypothesis H46.
***  Proved C10:  admin__prf_rolepresent(theadmin__3) = admin__prf_rolepresent(
          theadmin)
     using hypothesis H45.
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H31 (true-hypothesis).
---  Eliminated hypothesis H37 (true-hypothesis).
---  Eliminated hypothesis H38 (true-hypothesis).
---  Eliminated hypothesis H41 (true-hypothesis).
---  Eliminated hypothesis H48 (true-hypothesis).
---  Eliminated hypothesis H49 (true-hypothesis).
---  Eliminated hypothesis H50 (true-hypothesis).
---  Eliminated hypothesis H53 (true-hypothesis).
---  Eliminated hypothesis H54 (true-hypothesis).
---  Eliminated hypothesis H51 (true-hypothesis).
---  Eliminated hypothesis H52 (true-hypothesis).
---  Eliminated hypothesis H35 (true-hypothesis).
---  Eliminated hypothesis H36 (true-hypothesis).
---  Eliminated hypothesis H33 (true-hypothesis).
---  Eliminated hypothesis H34 (true-hypothesis).
---  Eliminated hypothesis H40 (duplicate of H25).
>>>  Using "A->B, A |- B" on H26, given H57, we simplify the former to:
     >>>  H26:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock <-> admin__prf_rolepresent(theadmin) = 
          privtypes__guard
>>>  Using "A->B, A |- B" on H42, given H55, we simplify the former to:
     >>>  H42:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock <-> admin__prf_rolepresent(theadmin__3) = 
          privtypes__guard
-S-  Eliminated hypothesis H2.
     This was achieved by replacing all occurrences of status by:
          enclavequiescent.
<S>  New H1:  adminopcanstart(admintoken__state, enclavequiescent, theadmin)
<S>  New H8:  true
<S>  New H9:  true
-S-  Eliminated hypothesis H19.
     This was achieved by replacing all occurrences of keyeddatapresence__1 by:
          basictypes__present.
<S>  New H10:  true
<S>  New H11:  true
---  Eliminated hypothesis H8 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
     +++  New H58:  integer__size >= 0
     +++  New H59:  character__size >= 0
     +++  New H60:  positive__size >= 0
     +++  New H61:  basictypes__presencet__size >= 0
     +++  New H62:  audittypes__elementt__size >= 0
     +++  New H63:  audittypes__severityt__size >= 0
     +++  New H64:  audittypes__usertexti__size >= 0
     +++  New H65:  privtypes__privileget__size >= 0
     +++  New H66:  keyboard__datalengtht__size >= 0
     +++  New H67:  keyboard__datai__size >= 0
     +++  New H68:  keyboard__datat__size >= 0
     +++  New H69:  admin__opandnullt__size >= 0
     +++  New H70:  admin__opt__size >= 0
     +++  New H71:  screen__msgtextt__size >= 0
     +++  New H72:  statust__size >= 0
>>>  Conclusion C2 is an implication formula [P->Q].
     Attempting to prove this by proving Q while adding P to the hypotheses.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H73:  admin__prf_rolepresent(theadmin__3) = privtypes__guard
>>>  Using "A->B, A |- B" on H5, given H45 & H73, we simplify the former to:
     >>>  H5:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
>>>  Using "A->B, A |- B" on H7, given H45 & H73, we simplify the former to:
     >>>  H7:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
>>>  Using "A->B, A |- B" on H26, given H45 & H73, we simplify the former to:
     >>>  H26:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Using "A->B, A |- B" on H42, given H73, we simplify the former to:
     >>>  H42:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Using "A->B, A |- B" on H55, given H45 & H73, we simplify the former to:
     >>>  H55:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Using "A->B, A |- B" on H56, given H73, we simplify the former to:
     >>>  H56:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Hypothesis H5 has now been split into two, giving:
     >>>  H74:  admintoken__prf_isgood(admintoken__state)
     >>>  H75:  admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard
>>>  Hypothesis H75 has now been split into two, giving:
     >>>  H76:  admintoken__prf_authcertvalid(admintoken__state)
     >>>  H77:  admintoken__theauthcertrole(admintoken__state) = 
          privtypes__guard
+++  New subgoal C1:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  admintoken__prf_isgood(admintoken__state)
     >>>  C2:  admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard
>>>  Conclusion C2 has now been split into two, giving:
     >>>  C2:  admintoken__prf_authcertvalid(admintoken__state)
     >>>  C3:  admintoken__theauthcertrole(admintoken__state) = privtypes__guard
***  Proved subgoal C1
     using hypothesis H74.
***  Proved subgoal C2
     using hypothesis H76.
***  Proved subgoal C3
     using hypothesis H77.
***  Proved C2:  admin__prf_rolepresent(theadmin__3) = privtypes__guard -> 
          admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
     by implication.
>>>  Conclusion C3 is an implication formula [P->Q].
     Attempting to prove this by proving Q while adding P to the hypotheses.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H73:  admin__thecurrentop(theadmin__3) = admin__overridelock
>>>  Using "A->B, A |- B" on H26, given H43 & H73, we simplify the former to:
     >>>  H26:  admin__prf_rolepresent(theadmin) = privtypes__guard
>>>  Using "A->B, A |- B" on H42, given H43 & H73, we simplify the former to:
     >>>  H42:  admin__prf_rolepresent(theadmin__3) = privtypes__guard
>>>  Using "A->B, A |- B" on H55, given H43 & H73, we simplify the former to:
     >>>  H55:  admin__prf_rolepresent(theadmin) = privtypes__guard
>>>  Using "A->B, A |- B" on H56, given H43 & H73, we simplify the former to:
     >>>  H56:  admin__prf_rolepresent(theadmin__3) = privtypes__guard
+++  Using "A->B, A |- B" on hypotheses H5 & H26 yields a new hypothesis:
     +++  H74:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
---  Attempted addition of new hypothesis:
          admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
     eliminated: this already exists (as H74).
+++  Using "A->B, A |- B" on hypotheses H5 & H55 yields a new hypothesis:
     +++  H74:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
+++  Using "A->B, A |- B" on hypotheses H7 & H26 yields a new hypothesis:
     +++  H75:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
---  Attempted addition of new hypothesis:
          admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
     eliminated: this already exists (as H75).
+++  Using "A->B, A |- B" on hypotheses H7 & H55 yields a new hypothesis:
     +++  H75:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
+++  New subgoal C1:  admin__prf_rolepresent(theadmin__3) = privtypes__guard
>>>  Hypothesis H74 has now been split into two, giving:
     >>>  H76:  admintoken__prf_isgood(admintoken__state)
     >>>  H77:  admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard
>>>  Hypothesis H77 has now been split into two, giving:
     >>>  H78:  admintoken__prf_authcertvalid(admintoken__state)
     >>>  H79:  admintoken__theauthcertrole(admintoken__state) = 
          privtypes__guard
+++  Using "A->B, A |- B" on hypotheses H5 & H26 yields a new hypothesis:
     +++  H80:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
---  Attempted addition of new hypothesis:
          admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
     eliminated: this already exists (as H80).
+++  Using "A->B, A |- B" on hypotheses H5 & H55 yields a new hypothesis:
     +++  H80:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
---  Attempted addition of new hypothesis:
          admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
     eliminated: this already exists (as H75).
+++  Using "A->B, A |- B" on hypotheses H7 & H26 yields a new hypothesis:
     +++  H75:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
---  Attempted addition of new hypothesis:
          admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
     eliminated: this already exists (as H75).
+++  Using "A->B, A |- B" on hypotheses H7 & H55 yields a new hypothesis:
     +++  H75:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
***  Proved subgoal C1
     using hypothesis H42.
***  Proved C3:  admin__isdoingop(theadmin__3) and admin__thecurrentop(
          theadmin__3) = admin__overridelock -> admin__prf_rolepresent(
          theadmin__3) = privtypes__guard
     by implication.
>>>  Conclusion C4 is an implication formula [P->Q].
     Attempting to prove this by proving Q while adding P to the hypotheses.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H73:  admin__prf_rolepresent(theadmin__3) = privtypes__guard
>>>  Using "A->B, A |- B" on H5, given H45 & H73, we simplify the former to:
     >>>  H5:  admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
>>>  Using "A->B, A |- B" on H7, given H45 & H73, we simplify the former to:
     >>>  H7:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
>>>  Using "A->B, A |- B" on H26, given H45 & H73, we simplify the former to:
     >>>  H26:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Using "A->B, A |- B" on H42, given H73, we simplify the former to:
     >>>  H42:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Using "A->B, A |- B" on H55, given H45 & H73, we simplify the former to:
     >>>  H55:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Using "A->B, A |- B" on H56, given H73, we simplify the former to:
     >>>  H56:  admin__opisavailable(theadmin, keyeddata__1) = 
          admin__overridelock
>>>  Hypothesis H5 has now been split into two, giving:
     >>>  H74:  admintoken__prf_isgood(admintoken__state)
     >>>  H75:  admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard
>>>  Hypothesis H75 has now been split into two, giving:
     >>>  H76:  admintoken__prf_authcertvalid(admintoken__state)
     >>>  H77:  admintoken__theauthcertrole(admintoken__state) = 
          privtypes__guard
+++  New subgoal C1:  admin__isdoingop(theadmin__3) and admin__thecurrentop(
          theadmin__3) = admin__overridelock or not admin__isdoingop(
          theadmin__3)
***  Proved subgoal C1
     using hypotheses H26, H43 & H44.
***  Proved C4:  admin__prf_rolepresent(theadmin__3) = privtypes__guard -> 
          admin__isdoingop(theadmin__3) and admin__thecurrentop(theadmin__3) = 
          admin__overridelock or not admin__isdoingop(theadmin__3)
     by implication.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_12.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H14).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H3)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  admin__opandnullt__first <= admin__opisavailable(theadmin, 
          keyeddata__1)
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H26).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  screen__msgtextt__first <= screen__invalidrequest
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  for_all(i___1 : integer, audittypes__usertexti__first <= i___1 
          and i___1 <= audittypes__usertexti__last -> character__first <= 
          element(admintoken__extractuser(admintoken__state), [i___1]) and 
          element(admintoken__extractuser(admintoken__state), [i___1]) <= 
          character__last)
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H37 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H38 has been replaced by "true".  (It is already present, as 
          H14).
%%%  Simplified H39 on reading formula in, to give:
     %%%  H39:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  audittypes__elementt__first <= audittypes__invalidoprequest
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  status = waitingstartadminop or status = waitingfinishadminop -> 
          admin__isdoingop(theadmin) and admin__ispresent(theadmin)
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  status = enclavequiescent -> not admin__isdoingop(theadmin)
***  Proved C1:  status = enclavequiescent or status = waitingstartadminop
     using hypothesis H2.
***  Proved C2:  admin__prf_rolepresent(theadmin) = privtypes__guard -> 
          admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
     using hypothesis H5.
***  Proved C3:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock -> admin__prf_rolepresent(theadmin) = 
          privtypes__guard
     using hypothesis H6.
***  Proved C4:  admin__prf_rolepresent(theadmin) = privtypes__guard -> 
          admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
     using hypothesis H7.
***  Proved C5:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__shutdownop -> status = waitingstartadminop
     using hypothesis H4.
***  Proved C6:  status = waitingstartadminop or status = waitingfinishadminop 
          -> admin__isdoingop(theadmin) and admin__ispresent(theadmin)
     using hypothesis H2.
***  Proved C7:  status = enclavequiescent -> not admin__isdoingop(theadmin)
     using hypothesis H4.
***  Proved C8:  status = shutdown -> not admin__isdoingop(theadmin) and 
          admin__prf_rolepresent(theadmin) = privtypes__useronly
     using hypothesis H2.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_startadminop_13.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  statust__first <= status
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  basictypes__presencet__first <= keyeddatapresence__1
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(i___1 : integer, keyboard__datai__first <= i___1 and 
          i___1 <= keyboard__datai__last -> character__first <= element(
          fld_text(keyeddata__1), [i___1]) and element(fld_text(keyeddata__1), [
          i___1]) <= character__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H11).
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  status = waitingstartadminop or status = waitingfinishadminop -> 
          admin__isdoingop(theadmin) and admin__ispresent(theadmin)
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  status = enclavequiescent -> not admin__isdoingop(theadmin)
***  Proved C1:  status = enclavequiescent or status = waitingstartadminop
     using hypothesis H2.
***  Proved C2:  admin__prf_rolepresent(theadmin) = privtypes__guard -> 
          admintoken__prf_isgood(admintoken__state) and (
          admintoken__prf_authcertvalid(admintoken__state) and 
          admintoken__theauthcertrole(admintoken__state) = privtypes__guard)
     using hypothesis H5.
***  Proved C3:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock -> admin__prf_rolepresent(theadmin) = 
          privtypes__guard
     using hypothesis H6.
***  Proved C4:  admin__prf_rolepresent(theadmin) = privtypes__guard -> 
          admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__overridelock or not admin__isdoingop(theadmin)
     using hypothesis H7.
***  Proved C5:  admin__isdoingop(theadmin) and admin__thecurrentop(theadmin) = 
          admin__shutdownop -> status = waitingstartadminop
     using hypothesis H4.
***  Proved C6:  status = waitingstartadminop or status = waitingfinishadminop 
          -> admin__isdoingop(theadmin) and admin__ispresent(theadmin)
     using hypothesis H2.
***  Proved C7:  status = enclavequiescent -> not admin__isdoingop(theadmin)
     using hypothesis H4.
***  Proved C8:  status = shutdown -> not admin__isdoingop(theadmin) and 
          admin__prf_rolepresent(theadmin) = privtypes__useronly
     using hypothesis H2.
***  PROVED VC.

