           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:27.35

             procedure Enclave.StartAdminActivity.StartAdminOp




For path(s) from start to run-time check associated with statement of line 2323:

procedure_startadminop_1.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
        ->
C1:    keyeddatapresence__1 >= basictypes__presencet__first .
C2:    keyeddatapresence__1 <= basictypes__presencet__last .
 

For path(s) from start to precondition check associated with statement of line 2327:

procedure_startadminop_2.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
        ->
C1:    admin__ispresent(theadmin) .
 

For path(s) from start to run-time check associated with statement of line 2327:

procedure_startadminop_3.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
        ->
C1:    admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
C2:    admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
 

For path(s) from start to check associated with statement of line 2329:

procedure_startadminop_4.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
        ->
C1:    (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
 

For path(s) from start to run-time check associated with statement of line 2336:

procedure_startadminop_5.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop .
        ->
C1:    waitingstartadminop >= statust__first .
C2:    waitingstartadminop <= statust__last .
 

For path(s) from start to run-time check associated with statement of line 2338:

procedure_startadminop_6.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop .
H33:   waitingstartadminop >= statust__first .
H34:   waitingstartadminop <= statust__last .
        ->
C1:    screen__doingop >= screen__msgtextt__first .
C2:    screen__doingop <= screen__msgtextt__last .
 

For path(s) from start to precondition check associated with statement of line 2339:

procedure_startadminop_7.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop .
H33:   waitingstartadminop >= statust__first .
H34:   waitingstartadminop <= statust__last .
H35:   screen__doingop >= screen__msgtextt__first .
H36:   screen__doingop <= screen__msgtextt__last .
H37:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H38:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
        ->
C1:    admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opt__first .
C2:    admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opt__last .
C3:    admin__ispresent(theadmin) .
 

For path(s) from start to run-time check associated with statement of line 2342:

procedure_startadminop_8.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop .
H33:   waitingstartadminop >= statust__first .
H34:   waitingstartadminop <= statust__last .
H35:   screen__doingop >= screen__msgtextt__first .
H36:   screen__doingop <= screen__msgtextt__last .
H37:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H38:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H39:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opt__first .
H40:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opt__last .
H41:   admin__ispresent(theadmin) .
H42:   ((admin__opisavailable(theadmin, keyeddata__1) = 
           admin__overridelock) <-> (admin__prf_rolepresent(
           theadmin) = privtypes__guard)) -> ((
           admin__opisavailable(theadmin, keyeddata__1) = 
           admin__overridelock) <-> (admin__prf_rolepresent(theadmin__3) = 
           privtypes__guard)) .
H43:   admin__thecurrentop(theadmin__3) = 
           admin__opisavailable(theadmin, keyeddata__1) .
H44:   admin__isdoingop(theadmin__3) .
H45:   admin__prf_rolepresent(theadmin__3) = 
           admin__prf_rolepresent(theadmin) .
H46:   admin__ispresent(theadmin__3) .
H47:   for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(
           admintoken__extractuser(admintoken__state), [
           i___1]) >= character__first) and (element(
           admintoken__extractuser(admintoken__state), [
           i___1]) <= character__last))) .
H48:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H49:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H50:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
        ->
C1:    audittypes__information >= audittypes__severityt__first .
C2:    audittypes__information <= audittypes__severityt__last .
C3:    audittypes__operationstart >= audittypes__elementt__first .
C4:    audittypes__operationstart <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 2351:

procedure_startadminop_9.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   not (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) .
        ->
C1:    screen__invalidrequest >= screen__msgtextt__first .
C2:    screen__invalidrequest <= screen__msgtextt__last .
 

For path(s) from start to run-time check associated with statement of line 2353:

procedure_startadminop_10.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   not (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) .
H33:   screen__invalidrequest >= screen__msgtextt__first .
H34:   screen__invalidrequest <= screen__msgtextt__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(
           admintoken__extractuser(admintoken__state), [
           i___1]) >= character__first) and (element(
           admintoken__extractuser(admintoken__state), [
           i___1]) <= character__last))) .
H36:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H37:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H38:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__invalidoprequest >= audittypes__elementt__first .
C4:    audittypes__invalidoprequest <= audittypes__elementt__last .
 

For path(s) from start to finish:

procedure_startadminop_11.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop .
H33:   waitingstartadminop >= statust__first .
H34:   waitingstartadminop <= statust__last .
H35:   screen__doingop >= screen__msgtextt__first .
H36:   screen__doingop <= screen__msgtextt__last .
H37:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H38:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H39:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opt__first .
H40:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opt__last .
H41:   admin__ispresent(theadmin) .
H42:   ((admin__opisavailable(theadmin, keyeddata__1) = 
           admin__overridelock) <-> (admin__prf_rolepresent(
           theadmin) = privtypes__guard)) -> ((
           admin__opisavailable(theadmin, keyeddata__1) = 
           admin__overridelock) <-> (admin__prf_rolepresent(theadmin__3) = 
           privtypes__guard)) .
H43:   admin__thecurrentop(theadmin__3) = 
           admin__opisavailable(theadmin, keyeddata__1) .
H44:   admin__isdoingop(theadmin__3) .
H45:   admin__prf_rolepresent(theadmin__3) = 
           admin__prf_rolepresent(theadmin) .
H46:   admin__ispresent(theadmin__3) .
H47:   for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(
           admintoken__extractuser(admintoken__state), [
           i___1]) >= character__first) and (element(
           admintoken__extractuser(admintoken__state), [
           i___1]) <= character__last))) .
H48:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H49:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H50:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H51:   audittypes__information >= audittypes__severityt__first .
H52:   audittypes__information <= audittypes__severityt__last .
H53:   audittypes__operationstart >= audittypes__elementt__first .
H54:   audittypes__operationstart <= audittypes__elementt__last .
        ->
C1:    (waitingstartadminop = enclavequiescent) or (
           waitingstartadminop = waitingstartadminop) .
C2:    (admin__prf_rolepresent(theadmin__3) = 
           privtypes__guard) -> (admintoken__prf_isgood(
           admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
C3:    (admin__isdoingop(theadmin__3) and (
           admin__thecurrentop(theadmin__3) = 
           admin__overridelock)) -> (admin__prf_rolepresent(theadmin__3) = 
           privtypes__guard) .
C4:    (admin__prf_rolepresent(theadmin__3) = 
           privtypes__guard) -> ((admin__isdoingop(theadmin__3) and (
           admin__thecurrentop(theadmin__3) = 
           admin__overridelock)) or (not (admin__isdoingop(theadmin__3)))) .
C5:    (admin__isdoingop(theadmin__3) and (
           admin__thecurrentop(theadmin__3) = 
           admin__shutdownop)) -> (waitingstartadminop = 
           waitingstartadminop) .
C6:    ((waitingstartadminop = waitingstartadminop) or (
           waitingstartadminop = waitingfinishadminop)) -> (
           admin__isdoingop(theadmin__3) and (
           admin__ispresent(theadmin__3) and (
           admin__prf_rolepresent(theadmin__3) = 
           admin__prf_rolepresent(theadmin)))) .
C7:    (waitingstartadminop = enclavequiescent) -> ((not (
           admin__isdoingop(theadmin__3))) and (
           admin__prf_rolepresent(theadmin__3) = 
           admin__prf_rolepresent(theadmin))) .
C8:    (waitingstartadminop = shutdown) -> ((not (
           admin__isdoingop(theadmin__3))) and (
           admin__prf_rolepresent(theadmin__3) = 
           privtypes__useronly)) .
 

procedure_startadminop_12.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   keyeddatapresence__1 = basictypes__present .
H20:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H21:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H22:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H23:   admin__ispresent(theadmin) .
H24:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H25:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H26:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H27:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H28:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H29:   (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) -> ((admin__opisavailable(
           theadmin, keyeddata__1) = admin__overridelock) <-> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard)) .
H30:   admin__opisavailable(theadmin, keyeddata__1) >= 
           admin__opandnullt__first .
H31:   admin__opisavailable(theadmin, keyeddata__1) <= 
           admin__opandnullt__last .
H32:   not (admin__opisavailable(theadmin, keyeddata__1) <> 
           admin__nullop) .
H33:   screen__invalidrequest >= screen__msgtextt__first .
H34:   screen__invalidrequest <= screen__msgtextt__last .
H35:   for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(
           admintoken__extractuser(admintoken__state), [
           i___1]) >= character__first) and (element(
           admintoken__extractuser(admintoken__state), [
           i___1]) <= character__last))) .
H36:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H37:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H38:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H39:   audittypes__warning >= audittypes__severityt__first .
H40:   audittypes__warning <= audittypes__severityt__last .
H41:   audittypes__invalidoprequest >= audittypes__elementt__first .
H42:   audittypes__invalidoprequest <= audittypes__elementt__last .
        ->
C1:    (status = enclavequiescent) or (status = 
           waitingstartadminop) .
C2:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
C3:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
C4:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
C5:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__shutdownop)) -> (status = 
           waitingstartadminop) .
C6:    ((status = waitingstartadminop) or (status = 
           waitingfinishadminop)) -> (admin__isdoingop(
           theadmin) and (admin__ispresent(theadmin) and (
           admin__prf_rolepresent(theadmin) = 
           admin__prf_rolepresent(theadmin)))) .
C7:    (status = enclavequiescent) -> ((not (admin__isdoingop(
           theadmin))) and (admin__prf_rolepresent(theadmin) = 
           admin__prf_rolepresent(theadmin))) .
C8:    (status = shutdown) -> ((not (admin__isdoingop(
           theadmin))) and (admin__prf_rolepresent(theadmin) = 
           privtypes__useronly)) .
 

procedure_startadminop_13.
H1:    adminopcanstart(admintoken__state, status, theadmin) .
H2:    status = enclavequiescent .
H3:    admin__ispresent(theadmin) .
H4:    not (admin__isdoingop(theadmin)) .
H5:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
H6:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
H7:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
H8:    status >= statust__first .
H9:    status <= statust__last .
H10:   keyeddatapresence__1 >= basictypes__presencet__first .
H11:   keyeddatapresence__1 <= basictypes__presencet__last .
H12:   for_all(i___1: integer, ((i___1 >= keyboard__datai__first) and (
           i___1 <= keyboard__datai__last)) -> ((element(fld_text(
           keyeddata__1), [i___1]) >= character__first) and (element(
           fld_text(keyeddata__1), [i___1]) <= character__last))) .
H13:   fld_length(keyeddata__1) >= keyboard__datalengtht__first .
H14:   fld_length(keyeddata__1) <= keyboard__datalengtht__last .
H15:   keyeddatapresence__1 >= basictypes__presencet__first .
H16:   keyeddatapresence__1 <= basictypes__presencet__last .
H17:   keyeddatapresence__1 >= basictypes__presencet__first .
H18:   keyeddatapresence__1 <= basictypes__presencet__last .
H19:   not (keyeddatapresence__1 = basictypes__present) .
        ->
C1:    (status = enclavequiescent) or (status = 
           waitingstartadminop) .
C2:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> (
           admintoken__prf_isgood(admintoken__state) and (
           admintoken__prf_authcertvalid(admintoken__state) and (
           admintoken__theauthcertrole(admintoken__state) = 
           privtypes__guard))) .
C3:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__overridelock)) -> (
           admin__prf_rolepresent(theadmin) = 
           privtypes__guard) .
C4:    (admin__prf_rolepresent(theadmin) = privtypes__guard) -> ((
           admin__isdoingop(theadmin) and (
           admin__thecurrentop(theadmin) = 
           admin__overridelock)) or (not (admin__isdoingop(
           theadmin)))) .
C5:    (admin__isdoingop(theadmin) and (admin__thecurrentop(
           theadmin) = admin__shutdownop)) -> (status = 
           waitingstartadminop) .
C6:    ((status = waitingstartadminop) or (status = 
           waitingfinishadminop)) -> (admin__isdoingop(
           theadmin) and (admin__ispresent(theadmin) and (
           admin__prf_rolepresent(theadmin) = 
           admin__prf_rolepresent(theadmin)))) .
C7:    (status = enclavequiescent) -> ((not (admin__isdoingop(
           theadmin))) and (admin__prf_rolepresent(theadmin) = 
           admin__prf_rolepresent(theadmin))) .
C8:    (status = shutdown) -> ((not (admin__isdoingop(
           theadmin))) and (admin__prf_rolepresent(theadmin) = 
           privtypes__useronly)) .
 

