           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:25.97*/

                    /*procedure Enclave.ValidateAdminToken*/


rule_family validateadmi_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

validateadmi_rules(1): integer__size >= 0 may_be_deduced.
validateadmi_rules(2): integer__first may_be_replaced_by -2147483648.
validateadmi_rules(3): integer__last may_be_replaced_by 2147483647.
validateadmi_rules(4): integer__base__first may_be_replaced_by -2147483648.
validateadmi_rules(5): integer__base__last may_be_replaced_by 2147483647.
validateadmi_rules(6): character__size >= 0 may_be_deduced.
validateadmi_rules(7): character__first may_be_replaced_by 0.
validateadmi_rules(8): character__last may_be_replaced_by 255.
validateadmi_rules(9): character__base__first may_be_replaced_by 0.
validateadmi_rules(10): character__base__last may_be_replaced_by 255.
validateadmi_rules(11): positive__size >= 0 may_be_deduced.
validateadmi_rules(12): positive__first may_be_replaced_by 1.
validateadmi_rules(13): positive__last may_be_replaced_by 2147483647.
validateadmi_rules(14): positive__base__first may_be_replaced_by -2147483648.
validateadmi_rules(15): positive__base__last may_be_replaced_by 2147483647.
validateadmi_rules(16): audittypes__elementt__size >= 0 may_be_deduced.
validateadmi_rules(17): audittypes__elementt__first may_be_replaced_by audittypes__startunenrolledtis.
validateadmi_rules(18): audittypes__elementt__last may_be_replaced_by audittypes__systemfault.
validateadmi_rules(19): audittypes__elementt__base__first may_be_replaced_by audittypes__startunenrolledtis.
validateadmi_rules(20): audittypes__elementt__base__last may_be_replaced_by audittypes__systemfault.
validateadmi_rules(21): audittypes__elementt__pos(
     audittypes__elementt__first) may_be_replaced_by 0.
validateadmi_rules(22): audittypes__elementt__pos(
     audittypes__startunenrolledtis) may_be_replaced_by 0.
validateadmi_rules(23): audittypes__elementt__val(0) may_be_replaced_by 
     audittypes__startunenrolledtis.
validateadmi_rules(24): audittypes__elementt__pos(
     audittypes__startenrolledtis) may_be_replaced_by 1.
validateadmi_rules(25): audittypes__elementt__val(1) may_be_replaced_by 
     audittypes__startenrolledtis.
validateadmi_rules(26): audittypes__elementt__pos(
     audittypes__enrolmentcomplete) may_be_replaced_by 2.
validateadmi_rules(27): audittypes__elementt__val(2) may_be_replaced_by 
     audittypes__enrolmentcomplete.
validateadmi_rules(28): audittypes__elementt__pos(
     audittypes__enrolmentfailed) may_be_replaced_by 3.
validateadmi_rules(29): audittypes__elementt__val(3) may_be_replaced_by 
     audittypes__enrolmentfailed.
validateadmi_rules(30): audittypes__elementt__pos(
     audittypes__displaychanged) may_be_replaced_by 4.
validateadmi_rules(31): audittypes__elementt__val(4) may_be_replaced_by 
     audittypes__displaychanged.
validateadmi_rules(32): audittypes__elementt__pos(
     audittypes__screenchanged) may_be_replaced_by 5.
validateadmi_rules(33): audittypes__elementt__val(5) may_be_replaced_by 
     audittypes__screenchanged.
validateadmi_rules(34): audittypes__elementt__pos(
     audittypes__doorclosed) may_be_replaced_by 6.
validateadmi_rules(35): audittypes__elementt__val(6) may_be_replaced_by 
     audittypes__doorclosed.
validateadmi_rules(36): audittypes__elementt__pos(
     audittypes__dooropened) may_be_replaced_by 7.
validateadmi_rules(37): audittypes__elementt__val(7) may_be_replaced_by 
     audittypes__dooropened.
validateadmi_rules(38): audittypes__elementt__pos(
     audittypes__latchlocked) may_be_replaced_by 8.
validateadmi_rules(39): audittypes__elementt__val(8) may_be_replaced_by 
     audittypes__latchlocked.
validateadmi_rules(40): audittypes__elementt__pos(
     audittypes__latchunlocked) may_be_replaced_by 9.
validateadmi_rules(41): audittypes__elementt__val(9) may_be_replaced_by 
     audittypes__latchunlocked.
validateadmi_rules(42): audittypes__elementt__pos(
     audittypes__alarmraised) may_be_replaced_by 10.
validateadmi_rules(43): audittypes__elementt__val(10) may_be_replaced_by 
     audittypes__alarmraised.
validateadmi_rules(44): audittypes__elementt__pos(
     audittypes__alarmsilenced) may_be_replaced_by 11.
validateadmi_rules(45): audittypes__elementt__val(11) may_be_replaced_by 
     audittypes__alarmsilenced.
validateadmi_rules(46): audittypes__elementt__pos(
     audittypes__truncatelog) may_be_replaced_by 12.
validateadmi_rules(47): audittypes__elementt__val(12) may_be_replaced_by 
     audittypes__truncatelog.
validateadmi_rules(48): audittypes__elementt__pos(
     audittypes__auditalarmraised) may_be_replaced_by 13.
validateadmi_rules(49): audittypes__elementt__val(13) may_be_replaced_by 
     audittypes__auditalarmraised.
validateadmi_rules(50): audittypes__elementt__pos(
     audittypes__auditalarmsilenced) may_be_replaced_by 14.
validateadmi_rules(51): audittypes__elementt__val(14) may_be_replaced_by 
     audittypes__auditalarmsilenced.
validateadmi_rules(52): audittypes__elementt__pos(
     audittypes__usertokenremoved) may_be_replaced_by 15.
validateadmi_rules(53): audittypes__elementt__val(15) may_be_replaced_by 
     audittypes__usertokenremoved.
validateadmi_rules(54): audittypes__elementt__pos(
     audittypes__usertokenpresent) may_be_replaced_by 16.
validateadmi_rules(55): audittypes__elementt__val(16) may_be_replaced_by 
     audittypes__usertokenpresent.
validateadmi_rules(56): audittypes__elementt__pos(
     audittypes__usertokeninvalid) may_be_replaced_by 17.
validateadmi_rules(57): audittypes__elementt__val(17) may_be_replaced_by 
     audittypes__usertokeninvalid.
validateadmi_rules(58): audittypes__elementt__pos(
     audittypes__authcertvalid) may_be_replaced_by 18.
validateadmi_rules(59): audittypes__elementt__val(18) may_be_replaced_by 
     audittypes__authcertvalid.
validateadmi_rules(60): audittypes__elementt__pos(
     audittypes__authcertinvalid) may_be_replaced_by 19.
validateadmi_rules(61): audittypes__elementt__val(19) may_be_replaced_by 
     audittypes__authcertinvalid.
validateadmi_rules(62): audittypes__elementt__pos(
     audittypes__fingerdetected) may_be_replaced_by 20.
validateadmi_rules(63): audittypes__elementt__val(20) may_be_replaced_by 
     audittypes__fingerdetected.
validateadmi_rules(64): audittypes__elementt__pos(
     audittypes__fingertimeout) may_be_replaced_by 21.
validateadmi_rules(65): audittypes__elementt__val(21) may_be_replaced_by 
     audittypes__fingertimeout.
validateadmi_rules(66): audittypes__elementt__pos(
     audittypes__fingermatched) may_be_replaced_by 22.
validateadmi_rules(67): audittypes__elementt__val(22) may_be_replaced_by 
     audittypes__fingermatched.
validateadmi_rules(68): audittypes__elementt__pos(
     audittypes__fingernotmatched) may_be_replaced_by 23.
validateadmi_rules(69): audittypes__elementt__val(23) may_be_replaced_by 
     audittypes__fingernotmatched.
validateadmi_rules(70): audittypes__elementt__pos(
     audittypes__authcertwritten) may_be_replaced_by 24.
validateadmi_rules(71): audittypes__elementt__val(24) may_be_replaced_by 
     audittypes__authcertwritten.
validateadmi_rules(72): audittypes__elementt__pos(
     audittypes__authcertwritefailed) may_be_replaced_by 25.
validateadmi_rules(73): audittypes__elementt__val(25) may_be_replaced_by 
     audittypes__authcertwritefailed.
validateadmi_rules(74): audittypes__elementt__pos(
     audittypes__entrypermitted) may_be_replaced_by 26.
validateadmi_rules(75): audittypes__elementt__val(26) may_be_replaced_by 
     audittypes__entrypermitted.
validateadmi_rules(76): audittypes__elementt__pos(
     audittypes__entrytimeout) may_be_replaced_by 27.
validateadmi_rules(77): audittypes__elementt__val(27) may_be_replaced_by 
     audittypes__entrytimeout.
validateadmi_rules(78): audittypes__elementt__pos(
     audittypes__entrydenied) may_be_replaced_by 28.
validateadmi_rules(79): audittypes__elementt__val(28) may_be_replaced_by 
     audittypes__entrydenied.
validateadmi_rules(80): audittypes__elementt__pos(
     audittypes__admintokenpresent) may_be_replaced_by 29.
validateadmi_rules(81): audittypes__elementt__val(29) may_be_replaced_by 
     audittypes__admintokenpresent.
validateadmi_rules(82): audittypes__elementt__pos(
     audittypes__admintokenvalid) may_be_replaced_by 30.
validateadmi_rules(83): audittypes__elementt__val(30) may_be_replaced_by 
     audittypes__admintokenvalid.
validateadmi_rules(84): audittypes__elementt__pos(
     audittypes__admintokeninvalid) may_be_replaced_by 31.
validateadmi_rules(85): audittypes__elementt__val(31) may_be_replaced_by 
     audittypes__admintokeninvalid.
validateadmi_rules(86): audittypes__elementt__pos(
     audittypes__admintokenexpired) may_be_replaced_by 32.
validateadmi_rules(87): audittypes__elementt__val(32) may_be_replaced_by 
     audittypes__admintokenexpired.
validateadmi_rules(88): audittypes__elementt__pos(
     audittypes__admintokenremoved) may_be_replaced_by 33.
validateadmi_rules(89): audittypes__elementt__val(33) may_be_replaced_by 
     audittypes__admintokenremoved.
validateadmi_rules(90): audittypes__elementt__pos(
     audittypes__invalidoprequest) may_be_replaced_by 34.
validateadmi_rules(91): audittypes__elementt__val(34) may_be_replaced_by 
     audittypes__invalidoprequest.
validateadmi_rules(92): audittypes__elementt__pos(
     audittypes__operationstart) may_be_replaced_by 35.
validateadmi_rules(93): audittypes__elementt__val(35) may_be_replaced_by 
     audittypes__operationstart.
validateadmi_rules(94): audittypes__elementt__pos(
     audittypes__archivelog) may_be_replaced_by 36.
validateadmi_rules(95): audittypes__elementt__val(36) may_be_replaced_by 
     audittypes__archivelog.
validateadmi_rules(96): audittypes__elementt__pos(
     audittypes__archivecomplete) may_be_replaced_by 37.
validateadmi_rules(97): audittypes__elementt__val(37) may_be_replaced_by 
     audittypes__archivecomplete.
validateadmi_rules(98): audittypes__elementt__pos(
     audittypes__archivecheckfailed) may_be_replaced_by 38.
validateadmi_rules(99): audittypes__elementt__val(38) may_be_replaced_by 
     audittypes__archivecheckfailed.
validateadmi_rules(100): audittypes__elementt__pos(
     audittypes__updatedconfigdata) may_be_replaced_by 39.
validateadmi_rules(101): audittypes__elementt__val(39) may_be_replaced_by 
     audittypes__updatedconfigdata.
validateadmi_rules(102): audittypes__elementt__pos(
     audittypes__invalidconfigdata) may_be_replaced_by 40.
validateadmi_rules(103): audittypes__elementt__val(40) may_be_replaced_by 
     audittypes__invalidconfigdata.
validateadmi_rules(104): audittypes__elementt__pos(
     audittypes__shutdown) may_be_replaced_by 41.
validateadmi_rules(105): audittypes__elementt__val(41) may_be_replaced_by 
     audittypes__shutdown.
validateadmi_rules(106): audittypes__elementt__pos(
     audittypes__overridelock) may_be_replaced_by 42.
validateadmi_rules(107): audittypes__elementt__val(42) may_be_replaced_by 
     audittypes__overridelock.
validateadmi_rules(108): audittypes__elementt__pos(
     audittypes__systemfault) may_be_replaced_by 43.
validateadmi_rules(109): audittypes__elementt__val(43) may_be_replaced_by 
     audittypes__systemfault.
validateadmi_rules(110): audittypes__elementt__pos(
     audittypes__elementt__last) may_be_replaced_by 43.
validateadmi_rules(111): audittypes__elementt__pos(succ(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) + 1
     if [X <=audittypes__systemfault, X <> 
     audittypes__systemfault].
validateadmi_rules(112): audittypes__elementt__pos(pred(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) - 1
     if [X >=audittypes__startunenrolledtis, X <> 
     audittypes__startunenrolledtis].
validateadmi_rules(113): audittypes__elementt__pos(X) >= 0 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
validateadmi_rules(114): audittypes__elementt__pos(X) <= 43 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
validateadmi_rules(115): audittypes__elementt__val(X) >= 
     audittypes__startunenrolledtis may_be_deduced_from
     [0 <= X, X <= 43].
validateadmi_rules(116): audittypes__elementt__val(X) <= 
     audittypes__systemfault may_be_deduced_from
     [0 <= X, X <= 43].
validateadmi_rules(117): succ(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X+1)
     if [0 <= X, X < 43].
validateadmi_rules(118): pred(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X-1)
     if [0 < X, X <= 43].
validateadmi_rules(119): audittypes__elementt__pos(
     audittypes__elementt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 43].
validateadmi_rules(120): audittypes__elementt__val(
     audittypes__elementt__pos(X)) may_be_replaced_by X
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
validateadmi_rules(121): audittypes__elementt__pos(X) <= 
     audittypes__elementt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault, audittypes__startunenrolledtis <= Y, Y <= 
     audittypes__systemfault].
validateadmi_rules(122): audittypes__elementt__val(X) <= 
     audittypes__elementt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 43, 0 <= Y, Y <= 43].
validateadmi_rules(123): audittypes__severityt__size >= 0 may_be_deduced.
validateadmi_rules(124): audittypes__severityt__first may_be_replaced_by audittypes__information.
validateadmi_rules(125): audittypes__severityt__last may_be_replaced_by audittypes__critical.
validateadmi_rules(126): audittypes__severityt__base__first may_be_replaced_by audittypes__information.
validateadmi_rules(127): audittypes__severityt__base__last may_be_replaced_by audittypes__critical.
validateadmi_rules(128): audittypes__severityt__pos(
     audittypes__severityt__first) may_be_replaced_by 0.
validateadmi_rules(129): audittypes__severityt__pos(
     audittypes__information) may_be_replaced_by 0.
validateadmi_rules(130): audittypes__severityt__val(0) may_be_replaced_by 
     audittypes__information.
validateadmi_rules(131): audittypes__severityt__pos(
     audittypes__warning) may_be_replaced_by 1.
validateadmi_rules(132): audittypes__severityt__val(1) may_be_replaced_by 
     audittypes__warning.
validateadmi_rules(133): audittypes__severityt__pos(
     audittypes__critical) may_be_replaced_by 2.
validateadmi_rules(134): audittypes__severityt__val(2) may_be_replaced_by 
     audittypes__critical.
validateadmi_rules(135): audittypes__severityt__pos(
     audittypes__severityt__last) may_be_replaced_by 2.
validateadmi_rules(136): audittypes__severityt__pos(succ(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) + 1
     if [X <=audittypes__critical, X <> audittypes__critical].
validateadmi_rules(137): audittypes__severityt__pos(pred(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) - 1
     if [X >=audittypes__information, X <> 
     audittypes__information].
validateadmi_rules(138): audittypes__severityt__pos(X) >= 0 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
validateadmi_rules(139): audittypes__severityt__pos(X) <= 2 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
validateadmi_rules(140): audittypes__severityt__val(X) >= 
     audittypes__information may_be_deduced_from
     [0 <= X, X <= 2].
validateadmi_rules(141): audittypes__severityt__val(X) <= 
     audittypes__critical may_be_deduced_from
     [0 <= X, X <= 2].
validateadmi_rules(142): succ(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X+1)
     if [0 <= X, X < 2].
validateadmi_rules(143): pred(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X-1)
     if [0 < X, X <= 2].
validateadmi_rules(144): audittypes__severityt__pos(
     audittypes__severityt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 2].
validateadmi_rules(145): audittypes__severityt__val(
     audittypes__severityt__pos(X)) may_be_replaced_by X
     if [audittypes__information <= X, X <= audittypes__critical].
validateadmi_rules(146): audittypes__severityt__pos(X) <= 
     audittypes__severityt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__information <= X, X <= audittypes__critical, 
     audittypes__information <= Y, Y <= audittypes__critical].
validateadmi_rules(147): audittypes__severityt__val(X) <= 
     audittypes__severityt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 2, 0 <= Y, Y <= 2].
validateadmi_rules(148): audittypes__descriptioni__size >= 0 may_be_deduced.
validateadmi_rules(149): audittypes__descriptioni__first may_be_replaced_by 1.
validateadmi_rules(150): audittypes__descriptioni__last may_be_replaced_by 150.
validateadmi_rules(151): audittypes__descriptioni__base__first may_be_replaced_by -2147483648.
validateadmi_rules(152): audittypes__descriptioni__base__last may_be_replaced_by 2147483647.
validateadmi_rules(153): audittypes__usertexti__size >= 0 may_be_deduced.
validateadmi_rules(154): audittypes__usertexti__first may_be_replaced_by 1.
validateadmi_rules(155): audittypes__usertexti__last may_be_replaced_by 50.
validateadmi_rules(156): audittypes__usertexti__base__first may_be_replaced_by -2147483648.
validateadmi_rules(157): audittypes__usertexti__base__last may_be_replaced_by 2147483647.
validateadmi_rules(158): privtypes__privileget__size >= 0 may_be_deduced.
validateadmi_rules(159): privtypes__privileget__first may_be_replaced_by privtypes__useronly.
validateadmi_rules(160): privtypes__privileget__last may_be_replaced_by privtypes__securityofficer.
validateadmi_rules(161): privtypes__privileget__base__first may_be_replaced_by privtypes__useronly.
validateadmi_rules(162): privtypes__privileget__base__last may_be_replaced_by privtypes__securityofficer.
validateadmi_rules(163): privtypes__privileget__pos(
     privtypes__privileget__first) may_be_replaced_by 0.
validateadmi_rules(164): privtypes__privileget__pos(
     privtypes__useronly) may_be_replaced_by 0.
validateadmi_rules(165): privtypes__privileget__val(0) may_be_replaced_by 
     privtypes__useronly.
validateadmi_rules(166): privtypes__privileget__pos(
     privtypes__guard) may_be_replaced_by 1.
validateadmi_rules(167): privtypes__privileget__val(1) may_be_replaced_by 
     privtypes__guard.
validateadmi_rules(168): privtypes__privileget__pos(
     privtypes__auditmanager) may_be_replaced_by 2.
validateadmi_rules(169): privtypes__privileget__val(2) may_be_replaced_by 
     privtypes__auditmanager.
validateadmi_rules(170): privtypes__privileget__pos(
     privtypes__securityofficer) may_be_replaced_by 3.
validateadmi_rules(171): privtypes__privileget__val(3) may_be_replaced_by 
     privtypes__securityofficer.
validateadmi_rules(172): privtypes__privileget__pos(
     privtypes__privileget__last) may_be_replaced_by 3.
validateadmi_rules(173): privtypes__privileget__pos(succ(X)) may_be_replaced_by 
     privtypes__privileget__pos(X) + 1
     if [X <=privtypes__securityofficer, X <> 
     privtypes__securityofficer].
validateadmi_rules(174): privtypes__privileget__pos(pred(X)) may_be_replaced_by 
     privtypes__privileget__pos(X) - 1
     if [X >=privtypes__useronly, X <> privtypes__useronly].
validateadmi_rules(175): privtypes__privileget__pos(X) >= 0 may_be_deduced_from
     [privtypes__useronly <= X, X <= privtypes__securityofficer].
validateadmi_rules(176): privtypes__privileget__pos(X) <= 3 may_be_deduced_from
     [privtypes__useronly <= X, X <= privtypes__securityofficer].
validateadmi_rules(177): privtypes__privileget__val(X) >= 
     privtypes__useronly may_be_deduced_from
     [0 <= X, X <= 3].
validateadmi_rules(178): privtypes__privileget__val(X) <= 
     privtypes__securityofficer may_be_deduced_from
     [0 <= X, X <= 3].
validateadmi_rules(179): succ(privtypes__privileget__val(X)) may_be_replaced_by 
     privtypes__privileget__val(X+1)
     if [0 <= X, X < 3].
validateadmi_rules(180): pred(privtypes__privileget__val(X)) may_be_replaced_by 
     privtypes__privileget__val(X-1)
     if [0 < X, X <= 3].
validateadmi_rules(181): privtypes__privileget__pos(
     privtypes__privileget__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 3].
validateadmi_rules(182): privtypes__privileget__val(
     privtypes__privileget__pos(X)) may_be_replaced_by X
     if [privtypes__useronly <= X, X <= 
     privtypes__securityofficer].
validateadmi_rules(183): privtypes__privileget__pos(X) <= 
     privtypes__privileget__pos(Y) & X <= Y are_interchangeable 
     if [privtypes__useronly <= X, X <= 
     privtypes__securityofficer, privtypes__useronly <= Y, Y <= 
     privtypes__securityofficer].
validateadmi_rules(184): privtypes__privileget__val(X) <= 
     privtypes__privileget__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 3, 0 <= Y, Y <= 3].
validateadmi_rules(185): privtypes__adminprivileget__size >= 0 may_be_deduced.
validateadmi_rules(186): privtypes__adminprivileget__first may_be_replaced_by privtypes__guard.
validateadmi_rules(187): privtypes__adminprivileget__last may_be_replaced_by privtypes__securityofficer.
validateadmi_rules(188): privtypes__adminprivileget__base__first may_be_replaced_by privtypes__useronly.
validateadmi_rules(189): privtypes__adminprivileget__base__last may_be_replaced_by privtypes__securityofficer.
validateadmi_rules(190): admin__opandnullt__size >= 0 may_be_deduced.
validateadmi_rules(191): admin__opandnullt__first may_be_replaced_by admin__nullop.
validateadmi_rules(192): admin__opandnullt__last may_be_replaced_by admin__shutdownop.
validateadmi_rules(193): admin__opandnullt__base__first may_be_replaced_by admin__nullop.
validateadmi_rules(194): admin__opandnullt__base__last may_be_replaced_by admin__shutdownop.
validateadmi_rules(195): admin__opandnullt__pos(admin__opandnullt__first) may_be_replaced_by 0.
validateadmi_rules(196): admin__opandnullt__pos(admin__nullop) may_be_replaced_by 0.
validateadmi_rules(197): admin__opandnullt__val(0) may_be_replaced_by 
     admin__nullop.
validateadmi_rules(198): admin__opandnullt__pos(admin__archivelog) may_be_replaced_by 1.
validateadmi_rules(199): admin__opandnullt__val(1) may_be_replaced_by 
     admin__archivelog.
validateadmi_rules(200): admin__opandnullt__pos(
     admin__updateconfigdata) may_be_replaced_by 2.
validateadmi_rules(201): admin__opandnullt__val(2) may_be_replaced_by 
     admin__updateconfigdata.
validateadmi_rules(202): admin__opandnullt__pos(
     admin__overridelock) may_be_replaced_by 3.
validateadmi_rules(203): admin__opandnullt__val(3) may_be_replaced_by 
     admin__overridelock.
validateadmi_rules(204): admin__opandnullt__pos(admin__shutdownop) may_be_replaced_by 4.
validateadmi_rules(205): admin__opandnullt__val(4) may_be_replaced_by 
     admin__shutdownop.
validateadmi_rules(206): admin__opandnullt__pos(admin__opandnullt__last) may_be_replaced_by 4.
validateadmi_rules(207): admin__opandnullt__pos(succ(X)) may_be_replaced_by 
     admin__opandnullt__pos(X) + 1
     if [X <=admin__shutdownop, X <> admin__shutdownop].
validateadmi_rules(208): admin__opandnullt__pos(pred(X)) may_be_replaced_by 
     admin__opandnullt__pos(X) - 1
     if [X >=admin__nullop, X <> admin__nullop].
validateadmi_rules(209): admin__opandnullt__pos(X) >= 0 may_be_deduced_from
     [admin__nullop <= X, X <= admin__shutdownop].
validateadmi_rules(210): admin__opandnullt__pos(X) <= 4 may_be_deduced_from
     [admin__nullop <= X, X <= admin__shutdownop].
validateadmi_rules(211): admin__opandnullt__val(X) >= 
     admin__nullop may_be_deduced_from
     [0 <= X, X <= 4].
validateadmi_rules(212): admin__opandnullt__val(X) <= 
     admin__shutdownop may_be_deduced_from
     [0 <= X, X <= 4].
validateadmi_rules(213): succ(admin__opandnullt__val(X)) may_be_replaced_by 
     admin__opandnullt__val(X+1)
     if [0 <= X, X < 4].
validateadmi_rules(214): pred(admin__opandnullt__val(X)) may_be_replaced_by 
     admin__opandnullt__val(X-1)
     if [0 < X, X <= 4].
validateadmi_rules(215): admin__opandnullt__pos(admin__opandnullt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 4].
validateadmi_rules(216): admin__opandnullt__val(admin__opandnullt__pos(X)) may_be_replaced_by X
     if [admin__nullop <= X, X <= admin__shutdownop].
validateadmi_rules(217): admin__opandnullt__pos(X) <= 
     admin__opandnullt__pos(Y) & X <= Y are_interchangeable 
     if [admin__nullop <= X, X <= admin__shutdownop, 
     admin__nullop <= Y, Y <= admin__shutdownop].
validateadmi_rules(218): admin__opandnullt__val(X) <= 
     admin__opandnullt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 4, 0 <= Y, Y <= 4].
validateadmi_rules(219): screen__msgtextt__size >= 0 may_be_deduced.
validateadmi_rules(220): screen__msgtextt__first may_be_replaced_by screen__clear.
validateadmi_rules(221): screen__msgtextt__last may_be_replaced_by screen__insertconfigdata.
validateadmi_rules(222): screen__msgtextt__base__first may_be_replaced_by screen__clear.
validateadmi_rules(223): screen__msgtextt__base__last may_be_replaced_by screen__insertconfigdata.
validateadmi_rules(224): screen__msgtextt__pos(screen__msgtextt__first) may_be_replaced_by 0.
validateadmi_rules(225): screen__msgtextt__pos(screen__clear) may_be_replaced_by 0.
validateadmi_rules(226): screen__msgtextt__val(0) may_be_replaced_by 
     screen__clear.
validateadmi_rules(227): screen__msgtextt__pos(
     screen__welcomeadmin) may_be_replaced_by 1.
validateadmi_rules(228): screen__msgtextt__val(1) may_be_replaced_by 
     screen__welcomeadmin.
validateadmi_rules(229): screen__msgtextt__pos(screen__busy) may_be_replaced_by 2.
validateadmi_rules(230): screen__msgtextt__val(2) may_be_replaced_by 
     screen__busy.
validateadmi_rules(231): screen__msgtextt__pos(
     screen__removeadmintoken) may_be_replaced_by 3.
validateadmi_rules(232): screen__msgtextt__val(3) may_be_replaced_by 
     screen__removeadmintoken.
validateadmi_rules(233): screen__msgtextt__pos(screen__closedoor) may_be_replaced_by 4.
validateadmi_rules(234): screen__msgtextt__val(4) may_be_replaced_by 
     screen__closedoor.
validateadmi_rules(235): screen__msgtextt__pos(
     screen__requestadminop) may_be_replaced_by 5.
validateadmi_rules(236): screen__msgtextt__val(5) may_be_replaced_by 
     screen__requestadminop.
validateadmi_rules(237): screen__msgtextt__pos(screen__doingop) may_be_replaced_by 6.
validateadmi_rules(238): screen__msgtextt__val(6) may_be_replaced_by 
     screen__doingop.
validateadmi_rules(239): screen__msgtextt__pos(
     screen__invalidrequest) may_be_replaced_by 7.
validateadmi_rules(240): screen__msgtextt__val(7) may_be_replaced_by 
     screen__invalidrequest.
validateadmi_rules(241): screen__msgtextt__pos(
     screen__invaliddata) may_be_replaced_by 8.
validateadmi_rules(242): screen__msgtextt__val(8) may_be_replaced_by 
     screen__invaliddata.
validateadmi_rules(243): screen__msgtextt__pos(
     screen__archivefailed) may_be_replaced_by 9.
validateadmi_rules(244): screen__msgtextt__val(9) may_be_replaced_by 
     screen__archivefailed.
validateadmi_rules(245): screen__msgtextt__pos(
     screen__insertenrolmentdata) may_be_replaced_by 10.
validateadmi_rules(246): screen__msgtextt__val(10) may_be_replaced_by 
     screen__insertenrolmentdata.
validateadmi_rules(247): screen__msgtextt__pos(
     screen__validatingenrolmentdata) may_be_replaced_by 11.
validateadmi_rules(248): screen__msgtextt__val(11) may_be_replaced_by 
     screen__validatingenrolmentdata.
validateadmi_rules(249): screen__msgtextt__pos(
     screen__enrolmentfailed) may_be_replaced_by 12.
validateadmi_rules(250): screen__msgtextt__val(12) may_be_replaced_by 
     screen__enrolmentfailed.
validateadmi_rules(251): screen__msgtextt__pos(
     screen__insertblankfloppy) may_be_replaced_by 13.
validateadmi_rules(252): screen__msgtextt__val(13) may_be_replaced_by 
     screen__insertblankfloppy.
validateadmi_rules(253): screen__msgtextt__pos(
     screen__insertconfigdata) may_be_replaced_by 14.
validateadmi_rules(254): screen__msgtextt__val(14) may_be_replaced_by 
     screen__insertconfigdata.
validateadmi_rules(255): screen__msgtextt__pos(screen__msgtextt__last) may_be_replaced_by 14.
validateadmi_rules(256): screen__msgtextt__pos(succ(X)) may_be_replaced_by 
     screen__msgtextt__pos(X) + 1
     if [X <=screen__insertconfigdata, X <> 
     screen__insertconfigdata].
validateadmi_rules(257): screen__msgtextt__pos(pred(X)) may_be_replaced_by 
     screen__msgtextt__pos(X) - 1
     if [X >=screen__clear, X <> screen__clear].
validateadmi_rules(258): screen__msgtextt__pos(X) >= 0 may_be_deduced_from
     [screen__clear <= X, X <= screen__insertconfigdata].
validateadmi_rules(259): screen__msgtextt__pos(X) <= 14 may_be_deduced_from
     [screen__clear <= X, X <= screen__insertconfigdata].
validateadmi_rules(260): screen__msgtextt__val(X) >= 
     screen__clear may_be_deduced_from
     [0 <= X, X <= 14].
validateadmi_rules(261): screen__msgtextt__val(X) <= 
     screen__insertconfigdata may_be_deduced_from
     [0 <= X, X <= 14].
validateadmi_rules(262): succ(screen__msgtextt__val(X)) may_be_replaced_by 
     screen__msgtextt__val(X+1)
     if [0 <= X, X < 14].
validateadmi_rules(263): pred(screen__msgtextt__val(X)) may_be_replaced_by 
     screen__msgtextt__val(X-1)
     if [0 < X, X <= 14].
validateadmi_rules(264): screen__msgtextt__pos(screen__msgtextt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 14].
validateadmi_rules(265): screen__msgtextt__val(screen__msgtextt__pos(X)) may_be_replaced_by X
     if [screen__clear <= X, X <= screen__insertconfigdata].
validateadmi_rules(266): screen__msgtextt__pos(X) <= 
     screen__msgtextt__pos(Y) & X <= Y are_interchangeable 
     if [screen__clear <= X, X <= screen__insertconfigdata, 
     screen__clear <= Y, Y <= screen__insertconfigdata].
validateadmi_rules(267): screen__msgtextt__val(X) <= 
     screen__msgtextt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 14, 0 <= Y, Y <= 14].
validateadmi_rules(268): statust__size >= 0 may_be_deduced.
validateadmi_rules(269): statust__first may_be_replaced_by notenrolled.
validateadmi_rules(270): statust__last may_be_replaced_by shutdown.
validateadmi_rules(271): statust__base__first may_be_replaced_by notenrolled.
validateadmi_rules(272): statust__base__last may_be_replaced_by shutdown.
validateadmi_rules(273): statust__pos(statust__first) may_be_replaced_by 0.
validateadmi_rules(274): statust__pos(notenrolled) may_be_replaced_by 0.
validateadmi_rules(275): statust__val(0) may_be_replaced_by 
     notenrolled.
validateadmi_rules(276): statust__pos(waitingenrol) may_be_replaced_by 1.
validateadmi_rules(277): statust__val(1) may_be_replaced_by 
     waitingenrol.
validateadmi_rules(278): statust__pos(waitingendenrol) may_be_replaced_by 2.
validateadmi_rules(279): statust__val(2) may_be_replaced_by 
     waitingendenrol.
validateadmi_rules(280): statust__pos(enclavequiescent) may_be_replaced_by 3.
validateadmi_rules(281): statust__val(3) may_be_replaced_by 
     enclavequiescent.
validateadmi_rules(282): statust__pos(waitingremoveadmintokenfail) may_be_replaced_by 4.
validateadmi_rules(283): statust__val(4) may_be_replaced_by 
     waitingremoveadmintokenfail.
validateadmi_rules(284): statust__pos(gotadmintoken) may_be_replaced_by 5.
validateadmi_rules(285): statust__val(5) may_be_replaced_by 
     gotadmintoken.
validateadmi_rules(286): statust__pos(waitingstartadminop) may_be_replaced_by 6.
validateadmi_rules(287): statust__val(6) may_be_replaced_by 
     waitingstartadminop.
validateadmi_rules(288): statust__pos(waitingfinishadminop) may_be_replaced_by 7.
validateadmi_rules(289): statust__val(7) may_be_replaced_by 
     waitingfinishadminop.
validateadmi_rules(290): statust__pos(shutdown) may_be_replaced_by 8.
validateadmi_rules(291): statust__val(8) may_be_replaced_by 
     shutdown.
validateadmi_rules(292): statust__pos(statust__last) may_be_replaced_by 8.
validateadmi_rules(293): statust__pos(succ(X)) may_be_replaced_by 
     statust__pos(X) + 1
     if [X <=shutdown, X <> shutdown].
validateadmi_rules(294): statust__pos(pred(X)) may_be_replaced_by 
     statust__pos(X) - 1
     if [X >=notenrolled, X <> notenrolled].
validateadmi_rules(295): statust__pos(X) >= 0 may_be_deduced_from
     [notenrolled <= X, X <= shutdown].
validateadmi_rules(296): statust__pos(X) <= 8 may_be_deduced_from
     [notenrolled <= X, X <= shutdown].
validateadmi_rules(297): statust__val(X) >= notenrolled may_be_deduced_from
     [0 <= X, X <= 8].
validateadmi_rules(298): statust__val(X) <= shutdown may_be_deduced_from
     [0 <= X, X <= 8].
validateadmi_rules(299): succ(statust__val(X)) may_be_replaced_by 
     statust__val(X+1)
     if [0 <= X, X < 8].
validateadmi_rules(300): pred(statust__val(X)) may_be_replaced_by 
     statust__val(X-1)
     if [0 < X, X <= 8].
validateadmi_rules(301): statust__pos(statust__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 8].
validateadmi_rules(302): statust__val(statust__pos(X)) may_be_replaced_by X
     if [notenrolled <= X, X <= shutdown].
validateadmi_rules(303): statust__pos(X) <= statust__pos(Y) & X <= Y are_interchangeable 
     if [notenrolled <= X, X <= shutdown, notenrolled <= Y, Y <= 
     shutdown].
validateadmi_rules(304): statust__val(X) <= statust__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 8, 0 <= Y, Y <= 8].
