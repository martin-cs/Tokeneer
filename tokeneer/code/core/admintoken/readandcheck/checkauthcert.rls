           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:21.25*/

              /*procedure AdminToken.ReadAndCheck.CheckAuthCert*/


rule_family checkauthcer_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

checkauthcer_rules(1): integer__size >= 0 may_be_deduced.
checkauthcer_rules(2): integer__first may_be_replaced_by -2147483648.
checkauthcer_rules(3): integer__last may_be_replaced_by 2147483647.
checkauthcer_rules(4): integer__base__first may_be_replaced_by -2147483648.
checkauthcer_rules(5): integer__base__last may_be_replaced_by 2147483647.
checkauthcer_rules(6): character__size >= 0 may_be_deduced.
checkauthcer_rules(7): character__first may_be_replaced_by 0.
checkauthcer_rules(8): character__last may_be_replaced_by 255.
checkauthcer_rules(9): character__base__first may_be_replaced_by 0.
checkauthcer_rules(10): character__base__last may_be_replaced_by 255.
checkauthcer_rules(11): positive__size >= 0 may_be_deduced.
checkauthcer_rules(12): positive__first may_be_replaced_by 1.
checkauthcer_rules(13): positive__last may_be_replaced_by 2147483647.
checkauthcer_rules(14): positive__base__first may_be_replaced_by -2147483648.
checkauthcer_rules(15): positive__base__last may_be_replaced_by 2147483647.
checkauthcer_rules(16): audittypes__descriptioni__size >= 0 may_be_deduced.
checkauthcer_rules(17): audittypes__descriptioni__first may_be_replaced_by 1.
checkauthcer_rules(18): audittypes__descriptioni__last may_be_replaced_by 150.
checkauthcer_rules(19): audittypes__descriptioni__base__first may_be_replaced_by -2147483648.
checkauthcer_rules(20): audittypes__descriptioni__base__last may_be_replaced_by 2147483647.
checkauthcer_rules(21): certtypes__certificatet__size >= 0 may_be_deduced.
checkauthcer_rules(22): certtypes__certificatet__first may_be_replaced_by certtypes__idcert.
checkauthcer_rules(23): certtypes__certificatet__last may_be_replaced_by certtypes__iandacert.
checkauthcer_rules(24): certtypes__certificatet__base__first may_be_replaced_by certtypes__idcert.
checkauthcer_rules(25): certtypes__certificatet__base__last may_be_replaced_by certtypes__iandacert.
checkauthcer_rules(26): certtypes__certificatet__pos(
     certtypes__certificatet__first) may_be_replaced_by 0.
checkauthcer_rules(27): certtypes__certificatet__pos(
     certtypes__idcert) may_be_replaced_by 0.
checkauthcer_rules(28): certtypes__certificatet__val(0) may_be_replaced_by 
     certtypes__idcert.
checkauthcer_rules(29): certtypes__certificatet__pos(
     certtypes__authcert) may_be_replaced_by 1.
checkauthcer_rules(30): certtypes__certificatet__val(1) may_be_replaced_by 
     certtypes__authcert.
checkauthcer_rules(31): certtypes__certificatet__pos(
     certtypes__privcert) may_be_replaced_by 2.
checkauthcer_rules(32): certtypes__certificatet__val(2) may_be_replaced_by 
     certtypes__privcert.
checkauthcer_rules(33): certtypes__certificatet__pos(
     certtypes__iandacert) may_be_replaced_by 3.
checkauthcer_rules(34): certtypes__certificatet__val(3) may_be_replaced_by 
     certtypes__iandacert.
checkauthcer_rules(35): certtypes__certificatet__pos(
     certtypes__certificatet__last) may_be_replaced_by 3.
checkauthcer_rules(36): certtypes__certificatet__pos(succ(X)) may_be_replaced_by 
     certtypes__certificatet__pos(X) + 1
     if [X <=certtypes__iandacert, X <> certtypes__iandacert].
checkauthcer_rules(37): certtypes__certificatet__pos(pred(X)) may_be_replaced_by 
     certtypes__certificatet__pos(X) - 1
     if [X >=certtypes__idcert, X <> certtypes__idcert].
checkauthcer_rules(38): certtypes__certificatet__pos(X) >= 0 may_be_deduced_from
     [certtypes__idcert <= X, X <= certtypes__iandacert].
checkauthcer_rules(39): certtypes__certificatet__pos(X) <= 3 may_be_deduced_from
     [certtypes__idcert <= X, X <= certtypes__iandacert].
checkauthcer_rules(40): certtypes__certificatet__val(X) >= 
     certtypes__idcert may_be_deduced_from
     [0 <= X, X <= 3].
checkauthcer_rules(41): certtypes__certificatet__val(X) <= 
     certtypes__iandacert may_be_deduced_from
     [0 <= X, X <= 3].
checkauthcer_rules(42): succ(certtypes__certificatet__val(X)) may_be_replaced_by 
     certtypes__certificatet__val(X+1)
     if [0 <= X, X < 3].
checkauthcer_rules(43): pred(certtypes__certificatet__val(X)) may_be_replaced_by 
     certtypes__certificatet__val(X-1)
     if [0 < X, X <= 3].
checkauthcer_rules(44): certtypes__certificatet__pos(
     certtypes__certificatet__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 3].
checkauthcer_rules(45): certtypes__certificatet__val(
     certtypes__certificatet__pos(X)) may_be_replaced_by X
     if [certtypes__idcert <= X, X <= certtypes__iandacert].
checkauthcer_rules(46): certtypes__certificatet__pos(X) <= 
     certtypes__certificatet__pos(Y) & X <= Y are_interchangeable 
     if [certtypes__idcert <= X, X <= certtypes__iandacert, 
     certtypes__idcert <= Y, Y <= certtypes__iandacert].
checkauthcer_rules(47): certtypes__certificatet__val(X) <= 
     certtypes__certificatet__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 3, 0 <= Y, Y <= 3].
