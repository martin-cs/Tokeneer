*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:07  SIMPLIFIED 05-SEP-2011, 15:39:22

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure Clock.ConstructTime






@@@@@@@@@@  VC: procedure_constructtime_1.  @@@@@@@@@@
-S-  Applied substitution rule constructtim_rules(36).
     This was achieved by replacing all occurrences of minutest__last by:
          59.
<S>  New C1:  59 >= basictypes__unsigned32t__first
<S>  New C2:  59 <= basictypes__unsigned32t__last
-S-  Applied substitution rule constructtim_rules(5).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H2:  year >= 0
<S>  New H4:  month >= 0
<S>  New H6:  day >= 0
<S>  New H8:  hour >= 0
<S>  New H10:  min >= 0
<S>  New C3:  minutest__first >= 0
<S>  New C5:  hourst__last >= 0
<S>  New C7:  hourst__first >= 0
<S>  New C9:  dayst__last >= 0
<S>  New C11:  dayst__first >= 0
<S>  New C13:  monthst__last >= 0
<S>  New C15:  monthst__first >= 0
<S>  New C17:  yearst__last >= 0
<S>  New C19:  yearst__first >= 0
<S>  New C1:  true
-S-  Applied substitution rule constructtim_rules(6).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H3:  year <= 4294967295
<S>  New H5:  month <= 4294967295
<S>  New H7:  day <= 4294967295
<S>  New H9:  hour <= 4294967295
<S>  New H11:  min <= 4294967295
<S>  New C4:  minutest__first <= 4294967295
<S>  New C6:  hourst__last <= 4294967295
<S>  New C8:  hourst__first <= 4294967295
<S>  New C10:  dayst__last <= 4294967295
<S>  New C12:  dayst__first <= 4294967295
<S>  New C14:  monthst__last <= 4294967295
<S>  New C16:  monthst__first <= 4294967295
<S>  New C18:  yearst__last <= 4294967295
<S>  New C20:  yearst__first <= 4294967295
<S>  New C2:  true
-S-  Applied substitution rule constructtim_rules(35).
     This was achieved by replacing all occurrences of minutest__first by:
          0.
<S>  New C3:  true
<S>  New C4:  true
-S-  Applied substitution rule constructtim_rules(30).
     This was achieved by replacing all occurrences of hourst__last by:
          23.
<S>  New C5:  true
<S>  New C6:  true
-S-  Applied substitution rule constructtim_rules(29).
     This was achieved by replacing all occurrences of hourst__first by:
          0.
<S>  New C7:  true
<S>  New C8:  true
-S-  Applied substitution rule constructtim_rules(24).
     This was achieved by replacing all occurrences of dayst__last by:
          31.
<S>  New C9:  true
<S>  New C10:  true
-S-  Applied substitution rule constructtim_rules(23).
     This was achieved by replacing all occurrences of dayst__first by:
          1.
<S>  New C11:  true
<S>  New C12:  true
-S-  Applied substitution rule constructtim_rules(18).
     This was achieved by replacing all occurrences of monthst__last by:
          12.
<S>  New C13:  true
<S>  New C14:  true
-S-  Applied substitution rule constructtim_rules(17).
     This was achieved by replacing all occurrences of monthst__first by:
          1.
<S>  New C15:  true
<S>  New C16:  true
-S-  Applied substitution rule constructtim_rules(12).
     This was achieved by replacing all occurrences of yearst__last by:
          2099.
<S>  New C17:  true
<S>  New C18:  true
-S-  Applied substitution rule constructtim_rules(11).
     This was achieved by replacing all occurrences of yearst__first by:
          1901.
<S>  New C19:  true
<S>  New C20:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  Proved C5:  true
***  Proved C6:  true
***  Proved C7:  true
***  Proved C8:  true
***  Proved C9:  true
***  Proved C10:  true
***  Proved C11:  true
***  Proved C12:  true
***  Proved C13:  true
***  Proved C14:  true
***  Proved C15:  true
***  Proved C16:  true
***  Proved C17:  true
***  Proved C18:  true
***  Proved C19:  true
***  Proved C20:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_constructtime_2.  @@@@@@@@@@
***  Proved C13:  day >= dayst__first
     using hypothesis H36.
***  Proved C14:  day <= dayst__last
     using hypothesis H37.
***  Proved C15:  day >= dayst__first
     using hypothesis H36.
***  Proved C16:  day <= dayst__last
     using hypothesis H37.
***  Proved C17:  month >= monthst__first
     using hypothesis H34.
***  Proved C18:  month <= monthst__last
     using hypothesis H35.
***  Proved C19:  month >= monthst__first
     using hypothesis H34.
***  Proved C20:  month <= monthst__last
     using hypothesis H35.
***  Proved C21:  year >= yearst__first
     using hypothesis H32.
***  Proved C22:  year <= yearst__last
     using hypothesis H33.
***  Proved C23:  year >= yearst__first
     using hypothesis H32.
***  Proved C24:  year <= yearst__last
     using hypothesis H33.
-S-  Applied substitution rule constructtim_rules(41).
     This was achieved by replacing all occurrences of millisecst__first by:
          0.
<S>  New C1:  hour * millisecsinhr + min * millisecsinmin >= 0
<S>  New C7:  min >= 0
<S>  New C11:  hour >= 0
-S-  Applied substitution rule constructtim_rules(42).
     This was achieved by replacing all occurrences of millisecst__last by:
          86399999.
<S>  New C2:  hour * millisecsinhr + min * millisecsinmin <= 86399999
<S>  New C8:  min <= 86399999
<S>  New C12:  hour <= 86399999
-S-  Applied substitution rule constructtim_rules(1).
     This was achieved by replacing all occurrences of millisecsinmin by:
          60000.
<S>  New C3:  hour * millisecsinhr + min * 60000 >= millisecst__base__first
<S>  New C4:  hour * millisecsinhr + min * 60000 <= millisecst__base__last
<S>  New C5:  min * 60000 >= millisecst__base__first
<S>  New C6:  min * 60000 <= millisecst__base__last
<S>  New C1:  hour * millisecsinhr + min * 60000 >= 0
<S>  New C2:  hour * millisecsinhr + min * 60000 <= 86399999
-S-  Applied substitution rule constructtim_rules(2).
     This was achieved by replacing all occurrences of millisecsinhr by:
          3600000.
<S>  New C9:  hour * 3600000 >= millisecst__base__first
<S>  New C10:  hour * 3600000 <= millisecst__base__last
<S>  New C3:  hour * 3600000 + min * 60000 >= millisecst__base__first
<S>  New C4:  hour * 3600000 + min * 60000 <= millisecst__base__last
<S>  New C1:  hour * 3600000 + min * 60000 >= 0
<S>  New C2:  hour * 3600000 + min * 60000 <= 86399999
-S-  Applied substitution rule constructtim_rules(5).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H2:  year >= 0
<S>  New H4:  month >= 0
<S>  New H6:  day >= 0
<S>  New H8:  hour >= 0
<S>  New H10:  min >= 0
<S>  New H12:  minutest__last >= 0
<S>  New H14:  minutest__first >= 0
<S>  New H16:  hourst__last >= 0
<S>  New H18:  hourst__first >= 0
<S>  New H20:  dayst__last >= 0
<S>  New H22:  dayst__first >= 0
<S>  New H24:  monthst__last >= 0
<S>  New H26:  monthst__first >= 0
<S>  New H28:  yearst__last >= 0
<S>  New H30:  yearst__first >= 0
-S-  Applied substitution rule constructtim_rules(6).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H3:  year <= 4294967295
<S>  New H5:  month <= 4294967295
<S>  New H7:  day <= 4294967295
<S>  New H9:  hour <= 4294967295
<S>  New H11:  min <= 4294967295
<S>  New H13:  minutest__last <= 4294967295
<S>  New H15:  minutest__first <= 4294967295
<S>  New H17:  hourst__last <= 4294967295
<S>  New H19:  hourst__first <= 4294967295
<S>  New H21:  dayst__last <= 4294967295
<S>  New H23:  dayst__first <= 4294967295
<S>  New H25:  monthst__last <= 4294967295
<S>  New H27:  monthst__first <= 4294967295
<S>  New H29:  yearst__last <= 4294967295
<S>  New H31:  yearst__first <= 4294967295
-S-  Applied substitution rule constructtim_rules(11).
     This was achieved by replacing all occurrences of yearst__first by:
          1901.
<S>  New H32:  1901 <= year
<S>  New H30:  true
<S>  New H31:  true
-S-  Applied substitution rule constructtim_rules(12).
     This was achieved by replacing all occurrences of yearst__last by:
          2099.
<S>  New H33:  year <= 2099
<S>  New H28:  true
<S>  New H29:  true
-S-  Applied substitution rule constructtim_rules(17).
     This was achieved by replacing all occurrences of monthst__first by:
          1.
<S>  New H34:  1 <= month
<S>  New H26:  true
<S>  New H27:  true
-S-  Applied substitution rule constructtim_rules(18).
     This was achieved by replacing all occurrences of monthst__last by:
          12.
<S>  New H35:  month <= 12
<S>  New H24:  true
<S>  New H25:  true
-S-  Applied substitution rule constructtim_rules(23).
     This was achieved by replacing all occurrences of dayst__first by:
          1.
<S>  New H36:  1 <= day
<S>  New H22:  true
<S>  New H23:  true
-S-  Applied substitution rule constructtim_rules(24).
     This was achieved by replacing all occurrences of dayst__last by:
          31.
<S>  New H37:  day <= 31
<S>  New H20:  true
<S>  New H21:  true
-S-  Applied substitution rule constructtim_rules(29).
     This was achieved by replacing all occurrences of hourst__first by:
          0.
<S>  New H38:  0 <= hour
<S>  New H18:  true
<S>  New H19:  true
-S-  Applied substitution rule constructtim_rules(30).
     This was achieved by replacing all occurrences of hourst__last by:
          23.
<S>  New H39:  hour <= 23
<S>  New H16:  true
<S>  New H17:  true
-S-  Applied substitution rule constructtim_rules(35).
     This was achieved by replacing all occurrences of minutest__first by:
          0.
<S>  New H40:  0 <= min
<S>  New H14:  true
<S>  New H15:  true
-S-  Applied substitution rule constructtim_rules(36).
     This was achieved by replacing all occurrences of minutest__last by:
          59.
<S>  New H41:  min <= 59
<S>  New H12:  true
<S>  New H13:  true
***  Proved C7:  min >= 0
     using hypothesis H10.
***  Proved C11:  hour >= 0
     using hypothesis H8.
***  Proved C8:  min <= 86399999
     using hypothesis H41.
***  Proved C12:  hour <= 86399999
     using hypothesis H39.
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H31 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H26 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H24 (true-hypothesis).
---  Eliminated hypothesis H25 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H38 (duplicate of H8).
---  Eliminated hypothesis H40 (duplicate of H10).
---  Eliminated hypothesis H2 (redundant, given H32).
---  Eliminated hypothesis H3 (redundant, given H33).
---  Eliminated hypothesis H4 (redundant, given H34).
---  Eliminated hypothesis H5 (redundant, given H35).
---  Eliminated hypothesis H6 (redundant, given H36).
---  Eliminated hypothesis H7 (redundant, given H37).
---  Eliminated hypothesis H9 (redundant, given H39).
---  Eliminated hypothesis H11 (redundant, given H41).
***  Proved C1:  hour * 3600000 + min * 60000 >= 0
     using hypotheses H8 & H10.
***  Proved C2:  hour * 3600000 + min * 60000 <= 86399999
     using hypotheses H39 & H41.
     +++  New H42:  basictypes__unsigned32t__base__first <= 
          basictypes__unsigned32t__base__last
     +++  New H43:  yearst__size >= 0
     +++  New H44:  yearst__base__first <= yearst__base__last
     +++  New H45:  monthst__size >= 0
     +++  New H46:  monthst__base__first <= monthst__base__last
     +++  New H47:  dayst__size >= 0
     +++  New H48:  dayst__base__first <= dayst__base__last
     +++  New H49:  hourst__size >= 0
     +++  New H50:  hourst__base__first <= hourst__base__last
     +++  New H51:  minutest__size >= 0
     +++  New H52:  minutest__base__first <= minutest__base__last
     +++  New H53:  millisecst__size >= 0
     +++  New H54:  millisecst__base__first <= millisecst__base__last
     +++  New H55:  basictypes__unsigned32t__base__first <= 0
     +++  New H56:  basictypes__unsigned32t__base__last >= 4294967295
     +++  New H57:  yearst__base__first <= 1901
     +++  New H58:  yearst__base__last >= 2099
     +++  New H59:  monthst__base__first <= 1
     +++  New H60:  monthst__base__last >= 12
     +++  New H61:  dayst__base__first <= 1
     +++  New H62:  dayst__base__last >= 31
     +++  New H63:  hourst__base__first <= 0
     +++  New H64:  hourst__base__last >= 23
     +++  New H65:  minutest__base__first <= 0
     +++  New H66:  minutest__base__last >= 59
     +++  New H67:  millisecst__base__first <= 0
     +++  New H68:  millisecst__base__last >= 86399999
***  Proved C5:  min * 60000 >= millisecst__base__first
     using hypotheses H10 & H67.
***  Proved C6:  min * 60000 <= millisecst__base__last
     using hypotheses H41 & H68.
***  Proved C9:  hour * 3600000 >= millisecst__base__first
     using hypotheses H8 & H67.
***  Proved C10:  hour * 3600000 <= millisecst__base__last
     using hypotheses H39 & H68.
***  Proved C3:  hour * 3600000 + min * 60000 >= millisecst__base__first
     via its standard form, which is:
     Std.Fm C3:  3600000 * hour - millisecst__base__first + 60000 * min > - 1
     using hypotheses H8, H10 & H67.
***  Proved C4:  hour * 3600000 + min * 60000 <= millisecst__base__last
     via its standard form, which is:
     Std.Fm C4:  - (3600000 * hour) + millisecst__base__last - 60000 * min > - 1
     using hypotheses H39, H41 & H68.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_constructtime_3.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_constructtime_4.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_constructtime_5.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.

