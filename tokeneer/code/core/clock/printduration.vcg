           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:07.70

                        function Clock.PrintDuration




For path(s) from start to precondition check associated with statement of line 323:

function_printduration_1.
H1:    true .
H2:    theduration >= durationt__first .
H3:    theduration <= durationt__last .
H4:    for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(mk__string( 
           [1] := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) >= character__first) and (element(mk__string( [1]
            := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) <= character__last))) .
        ->
C1:    lasthourindex >= positive__first .
C2:    lasthourindex <= positive__last .
C3:    firsthourindex >= positive__first .
C4:    firsthourindex <= positive__last .
C5:    theduration div tenthsecsinhr >= natural__first .
C6:    theduration div tenthsecsinhr <= natural__last .
C7:    durationtexti__last >= lasthourindex .
C8:    durationtexti__first <= firsthourindex .
C9:    theduration div tenthsecsinhr >= natural__first .
C10:   theduration div tenthsecsinhr <= natural__last .
C11:   theduration div tenthsecsinhr >= durationt__base__first .
C12:   theduration div tenthsecsinhr <= durationt__base__last .
C13:   tenthsecsinhr <> 0 .
 

For path(s) from start to precondition check associated with statement of line 328:

function_printduration_2.
H1:    true .
H2:    theduration >= durationt__first .
H3:    theduration <= durationt__last .
H4:    for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(mk__string( 
           [1] := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) >= character__first) and (element(mk__string( [1]
            := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) <= character__last))) .
H5:    lasthourindex >= positive__first .
H6:    lasthourindex <= positive__last .
H7:    firsthourindex >= positive__first .
H8:    firsthourindex <= positive__last .
H9:    theduration div tenthsecsinhr >= natural__first .
H10:   theduration div tenthsecsinhr <= natural__last .
H11:   durationtexti__last >= lasthourindex .
H12:   durationtexti__first <= firsthourindex .
H13:   theduration div tenthsecsinhr >= natural__first .
H14:   theduration div tenthsecsinhr <= natural__last .
H15:   theduration div tenthsecsinhr >= durationt__base__first .
H16:   theduration div tenthsecsinhr <= durationt__base__last .
H17:   tenthsecsinhr <> 0 .
H18:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__1, [
           i___1]) >= character__first) and (element(localtext__1, [
           i___1]) <= character__last))) .
H19:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__1, [
           i___1]) >= character__first) and (element(localtext__1, [
           i___1]) <= character__last))) .
        ->
C1:    lastminindex >= positive__first .
C2:    lastminindex <= positive__last .
C3:    firstminindex >= positive__first .
C4:    firstminindex <= positive__last .
C5:    theduration mod tenthsecsinhr div tenthsecsinmin >= 
           natural__first .
C6:    theduration mod tenthsecsinhr div tenthsecsinmin <= 
           natural__last .
C7:    durationtexti__last >= lastminindex .
C8:    durationtexti__first <= firstminindex .
C9:    theduration mod tenthsecsinhr div tenthsecsinmin >= 
           natural__first .
C10:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           natural__last .
C11:   theduration mod tenthsecsinhr div tenthsecsinmin >= 
           durationt__base__first .
C12:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           durationt__base__last .
C13:   tenthsecsinmin <> 0 .
C14:   theduration mod tenthsecsinhr >= durationt__base__first .
C15:   theduration mod tenthsecsinhr <= durationt__base__last .
C16:   tenthsecsinhr <> 0 .
 

For path(s) from start to precondition check associated with statement of line 334:

function_printduration_3.
H1:    true .
H2:    theduration >= durationt__first .
H3:    theduration <= durationt__last .
H4:    for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(mk__string( 
           [1] := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) >= character__first) and (element(mk__string( [1]
            := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) <= character__last))) .
H5:    lasthourindex >= positive__first .
H6:    lasthourindex <= positive__last .
H7:    firsthourindex >= positive__first .
H8:    firsthourindex <= positive__last .
H9:    theduration div tenthsecsinhr >= natural__first .
H10:   theduration div tenthsecsinhr <= natural__last .
H11:   durationtexti__last >= lasthourindex .
H12:   durationtexti__first <= firsthourindex .
H13:   theduration div tenthsecsinhr >= natural__first .
H14:   theduration div tenthsecsinhr <= natural__last .
H15:   theduration div tenthsecsinhr >= durationt__base__first .
H16:   theduration div tenthsecsinhr <= durationt__base__last .
H17:   tenthsecsinhr <> 0 .
H18:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__1, [
           i___1]) >= character__first) and (element(localtext__1, [
           i___1]) <= character__last))) .
H19:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__1, [
           i___1]) >= character__first) and (element(localtext__1, [
           i___1]) <= character__last))) .
H20:   lastminindex >= positive__first .
H21:   lastminindex <= positive__last .
H22:   firstminindex >= positive__first .
H23:   firstminindex <= positive__last .
H24:   theduration mod tenthsecsinhr div tenthsecsinmin >= 
           natural__first .
H25:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           natural__last .
H26:   durationtexti__last >= lastminindex .
H27:   durationtexti__first <= firstminindex .
H28:   theduration mod tenthsecsinhr div tenthsecsinmin >= 
           natural__first .
H29:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           natural__last .
H30:   theduration mod tenthsecsinhr div tenthsecsinmin >= 
           durationt__base__first .
H31:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           durationt__base__last .
H32:   tenthsecsinmin <> 0 .
H33:   theduration mod tenthsecsinhr >= durationt__base__first .
H34:   theduration mod tenthsecsinhr <= durationt__base__last .
H35:   tenthsecsinhr <> 0 .
H36:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__2, [
           i___1]) >= character__first) and (element(localtext__2, [
           i___1]) <= character__last))) .
H37:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__2, [
           i___1]) >= character__first) and (element(localtext__2, [
           i___1]) <= character__last))) .
        ->
C1:    lastsecindex >= positive__first .
C2:    lastsecindex <= positive__last .
C3:    firstsecindex >= positive__first .
C4:    firstsecindex <= positive__last .
C5:    theduration mod tenthsecsinmin div tenthsecsinsec >= 
           natural__first .
C6:    theduration mod tenthsecsinmin div tenthsecsinsec <= 
           natural__last .
C7:    durationtexti__last >= lastsecindex .
C8:    durationtexti__first <= firstsecindex .
C9:    theduration mod tenthsecsinmin div tenthsecsinsec >= 
           natural__first .
C10:   theduration mod tenthsecsinmin div tenthsecsinsec <= 
           natural__last .
C11:   theduration mod tenthsecsinmin div tenthsecsinsec >= 
           durationt__base__first .
C12:   theduration mod tenthsecsinmin div tenthsecsinsec <= 
           durationt__base__last .
C13:   tenthsecsinsec <> 0 .
C14:   theduration mod tenthsecsinmin >= durationt__base__first .
C15:   theduration mod tenthsecsinmin <= durationt__base__last .
C16:   tenthsecsinmin <> 0 .
 

For path(s) from start to precondition check associated with statement of line 340:

function_printduration_4.
H1:    true .
H2:    theduration >= durationt__first .
H3:    theduration <= durationt__last .
H4:    for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(mk__string( 
           [1] := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) >= character__first) and (element(mk__string( [1]
            := 104, [2] := 104, [3] := 58, [4] := 109, [5] := 109, 
           [6] := 58, [7] := 115, [8] := 115, [9] := 46, [10] := 115), [
           i___1]) <= character__last))) .
H5:    lasthourindex >= positive__first .
H6:    lasthourindex <= positive__last .
H7:    firsthourindex >= positive__first .
H8:    firsthourindex <= positive__last .
H9:    theduration div tenthsecsinhr >= natural__first .
H10:   theduration div tenthsecsinhr <= natural__last .
H11:   durationtexti__last >= lasthourindex .
H12:   durationtexti__first <= firsthourindex .
H13:   theduration div tenthsecsinhr >= natural__first .
H14:   theduration div tenthsecsinhr <= natural__last .
H15:   theduration div tenthsecsinhr >= durationt__base__first .
H16:   theduration div tenthsecsinhr <= durationt__base__last .
H17:   tenthsecsinhr <> 0 .
H18:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__1, [
           i___1]) >= character__first) and (element(localtext__1, [
           i___1]) <= character__last))) .
H19:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__1, [
           i___1]) >= character__first) and (element(localtext__1, [
           i___1]) <= character__last))) .
H20:   lastminindex >= positive__first .
H21:   lastminindex <= positive__last .
H22:   firstminindex >= positive__first .
H23:   firstminindex <= positive__last .
H24:   theduration mod tenthsecsinhr div tenthsecsinmin >= 
           natural__first .
H25:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           natural__last .
H26:   durationtexti__last >= lastminindex .
H27:   durationtexti__first <= firstminindex .
H28:   theduration mod tenthsecsinhr div tenthsecsinmin >= 
           natural__first .
H29:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           natural__last .
H30:   theduration mod tenthsecsinhr div tenthsecsinmin >= 
           durationt__base__first .
H31:   theduration mod tenthsecsinhr div tenthsecsinmin <= 
           durationt__base__last .
H32:   tenthsecsinmin <> 0 .
H33:   theduration mod tenthsecsinhr >= durationt__base__first .
H34:   theduration mod tenthsecsinhr <= durationt__base__last .
H35:   tenthsecsinhr <> 0 .
H36:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__2, [
           i___1]) >= character__first) and (element(localtext__2, [
           i___1]) <= character__last))) .
H37:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__2, [
           i___1]) >= character__first) and (element(localtext__2, [
           i___1]) <= character__last))) .
H38:   lastsecindex >= positive__first .
H39:   lastsecindex <= positive__last .
H40:   firstsecindex >= positive__first .
H41:   firstsecindex <= positive__last .
H42:   theduration mod tenthsecsinmin div tenthsecsinsec >= 
           natural__first .
H43:   theduration mod tenthsecsinmin div tenthsecsinsec <= 
           natural__last .
H44:   durationtexti__last >= lastsecindex .
H45:   durationtexti__first <= firstsecindex .
H46:   theduration mod tenthsecsinmin div tenthsecsinsec >= 
           natural__first .
H47:   theduration mod tenthsecsinmin div tenthsecsinsec <= 
           natural__last .
H48:   theduration mod tenthsecsinmin div tenthsecsinsec >= 
           durationt__base__first .
H49:   theduration mod tenthsecsinmin div tenthsecsinsec <= 
           durationt__base__last .
H50:   tenthsecsinsec <> 0 .
H51:   theduration mod tenthsecsinmin >= durationt__base__first .
H52:   theduration mod tenthsecsinmin <= durationt__base__last .
H53:   tenthsecsinmin <> 0 .
H54:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__3, [
           i___1]) >= character__first) and (element(localtext__3, [
           i___1]) <= character__last))) .
H55:   for_all(i___1: integer, ((i___1 >= durationtexti__first) and (
           i___1 <= durationtexti__last)) -> ((element(localtext__3, [
           i___1]) >= character__first) and (element(localtext__3, [
           i___1]) <= character__last))) .
        ->
C1:    tenthsecindex >= positive__first .
C2:    tenthsecindex <= positive__last .
C3:    tenthsecindex >= positive__first .
C4:    tenthsecindex <= positive__last .
C5:    theduration mod tenthsecsinsec >= natural__first .
C6:    theduration mod tenthsecsinsec <= natural__last .
C7:    durationtexti__last >= tenthsecindex .
C8:    durationtexti__first <= tenthsecindex .
C9:    theduration mod tenthsecsinsec >= natural__first .
C10:   theduration mod tenthsecsinsec <= natural__last .
C11:   theduration mod tenthsecsinsec >= durationt__base__first .
C12:   theduration mod tenthsecsinsec <= durationt__base__last .
C13:   tenthsecsinsec <> 0 .
 

For path(s) from start to finish:

function_printduration_5.
*** true .          /* trivially true VC removed by Examiner */


