           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:07.41

                      procedure Clock.SetStringSegment




For path(s) from start to run-time check associated with statement of line 71:

procedure_setstringsegment_1.
H1:    s__index__subtype__1__last >= send .
H2:    s__index__subtype__1__first <= sstart .
H3:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
H4:    value >= natural__first .
H5:    value <= natural__last .
H6:    sstart >= positive__first .
H7:    sstart <= positive__last .
H8:    send >= positive__first .
H9:    send <= positive__last .
        ->
C1:    value >= natural__first .
C2:    value <= natural__last .
 

For path(s) from start to run-time check associated with statement of line 73:

procedure_setstringsegment_2.
H1:    s__index__subtype__1__last >= send .
H2:    s__index__subtype__1__first <= sstart .
H3:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
H4:    value >= natural__first .
H5:    value <= natural__last .
H6:    sstart >= positive__first .
H7:    sstart <= positive__last .
H8:    send >= positive__first .
H9:    send <= positive__last .
H10:   value >= natural__first .
H11:   value <= natural__last .
        ->
C1:    send >= integer__first .
C2:    send <= integer__last .
C3:    sstart >= integer__first .
C4:    sstart <= integer__last .
 

For path(s) from start to run-time check associated with statement of line 73:

procedure_setstringsegment_3.
H1:    s__index__subtype__1__last >= send .
H2:    s__index__subtype__1__first <= sstart .
H3:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
H4:    value >= natural__first .
H5:    value <= natural__last .
H6:    sstart >= positive__first .
H7:    sstart <= positive__last .
H8:    send >= positive__first .
H9:    send <= positive__last .
H10:   value >= natural__first .
H11:   value <= natural__last .
H12:   send >= integer__first .
H13:   send <= integer__last .
H14:   sstart >= integer__first .
H15:   sstart <= integer__last .
        ->
C1:    (sstart <= send) -> ((send >= positive__first) and (
           send <= positive__last)) .
C2:    (sstart <= send) -> ((sstart >= positive__first) and (
           sstart <= positive__last)) .
 

For path(s) from start to assertion of line 74:

procedure_setstringsegment_4.
H1:    s__index__subtype__1__last >= send .
H2:    s__index__subtype__1__first <= sstart .
H3:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
H4:    value >= natural__first .
H5:    value <= natural__last .
H6:    sstart >= positive__first .
H7:    sstart <= positive__last .
H8:    send >= positive__first .
H9:    send <= positive__last .
H10:   value >= natural__first .
H11:   value <= natural__last .
H12:   send >= integer__first .
H13:   send <= integer__last .
H14:   sstart >= integer__first .
H15:   sstart <= integer__last .
H16:   (sstart <= send) -> ((send >= positive__first) and (
           send <= positive__last)) .
H17:   (sstart <= send) -> ((sstart >= positive__first) and (
           sstart <= positive__last)) .
H18:   sstart <= send .
        ->
C1:    send <= send .
C2:    send >= sstart .
C3:    send <= s__index__subtype__1__last .
C4:    send >= s__index__subtype__1__first .
C5:    value >= natural__first .
C6:    value <= natural__last .
C7:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
C8:    value >= natural__first .
C9:    value <= natural__last .
C10:   sstart >= positive__first .
C11:   sstart <= positive__last .
C12:   send >= positive__first .
C13:   send <= positive__last .
C14:   s__index__subtype__1__last >= send .
C15:   s__index__subtype__1__first <= sstart .
C16:   send >= positive__first .
C17:   send <= positive__last .
C18:   send <= send .
C19:   send >= sstart .
 

For path(s) from assertion of line 74 to assertion of line 74:

procedure_setstringsegment_5.
H1:    loop__1__i <= send .
H2:    loop__1__i >= sstart .
H3:    loop__1__i <= s__index__subtype__1__last .
H4:    loop__1__i >= s__index__subtype__1__first .
H5:    v >= natural__first .
H6:    v <= natural__last .
H7:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
H8:    value >= natural__first .
H9:    value <= natural__last .
H10:   sstart >= positive__first .
H11:   sstart <= positive__last .
H12:   send >= positive__first .
H13:   send <= positive__last .
H14:   s__index__subtype__1__last >= send .
H15:   s__index__subtype__1__first <= sstart .
H16:   loop__1__i >= positive__first .
H17:   loop__1__i <= positive__last .
H18:   loop__1__i <= send .
H19:   loop__1__i >= sstart .
H20:   v >= natural__first .
H21:   v <= natural__last .
H22:   48 + v mod 10 >= character__first .
H23:   48 + v mod 10 <= character__last .
H24:   48 + v mod 10 >= character__first .
H25:   48 + v mod 10 <= character__last .
H26:   48 + v mod 10 >= integer__base__first .
H27:   48 + v mod 10 <= integer__base__last .
H28:   v mod 10 >= integer__base__first .
H29:   v mod 10 <= integer__base__last .
H30:   10 <> 0 .
H31:   loop__1__i >= s__index__subtype__1__first .
H32:   loop__1__i <= s__index__subtype__1__last .
H33:   v >= natural__first .
H34:   v <= natural__last .
H35:   v div 10 >= natural__first .
H36:   v div 10 <= natural__last .
H37:   10 <> 0 .
H38:   not (loop__1__i = sstart) .
        ->
C1:    loop__1__i - 1 <= send .
C2:    loop__1__i - 1 >= sstart .
C3:    loop__1__i - 1 <= s__index__subtype__1__last .
C4:    loop__1__i - 1 >= s__index__subtype__1__first .
C5:    v div 10 >= natural__first .
C6:    v div 10 <= natural__last .
C7:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(update(
           s, [loop__1__i], 48 + v mod 10), [i___1]) >= 
           character__first) and (element(update(s, [
           loop__1__i], 48 + v mod 10), [i___1]) <= 
           character__last))) .
C8:    value >= natural__first .
C9:    value <= natural__last .
C10:   sstart >= positive__first .
C11:   sstart <= positive__last .
C12:   send >= positive__first .
C13:   send <= positive__last .
C14:   s__index__subtype__1__last >= send .
C15:   s__index__subtype__1__first <= sstart .
C16:   loop__1__i - 1 >= positive__first .
C17:   loop__1__i - 1 <= positive__last .
C18:   loop__1__i - 1 <= send .
C19:   loop__1__i - 1 >= sstart .
 

For path(s) from assertion of line 74 to run-time check associated with statement of line 77:

procedure_setstringsegment_6.
H1:    loop__1__i <= send .
H2:    loop__1__i >= sstart .
H3:    loop__1__i <= s__index__subtype__1__last .
H4:    loop__1__i >= s__index__subtype__1__first .
H5:    v >= natural__first .
H6:    v <= natural__last .
H7:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
H8:    value >= natural__first .
H9:    value <= natural__last .
H10:   sstart >= positive__first .
H11:   sstart <= positive__last .
H12:   send >= positive__first .
H13:   send <= positive__last .
H14:   s__index__subtype__1__last >= send .
H15:   s__index__subtype__1__first <= sstart .
H16:   loop__1__i >= positive__first .
H17:   loop__1__i <= positive__last .
H18:   loop__1__i <= send .
H19:   loop__1__i >= sstart .
H20:   v >= natural__first .
H21:   v <= natural__last .
        ->
C1:    48 + v mod 10 >= character__first .
C2:    48 + v mod 10 <= character__last .
C3:    48 + v mod 10 >= character__first .
C4:    48 + v mod 10 <= character__last .
C5:    48 + v mod 10 >= integer__base__first .
C6:    48 + v mod 10 <= integer__base__last .
C7:    v mod 10 >= integer__base__first .
C8:    v mod 10 <= integer__base__last .
C9:    10 <> 0 .
C10:   loop__1__i >= s__index__subtype__1__first .
C11:   loop__1__i <= s__index__subtype__1__last .
 

For path(s) from assertion of line 74 to run-time check associated with statement of line 78:

procedure_setstringsegment_7.
H1:    loop__1__i <= send .
H2:    loop__1__i >= sstart .
H3:    loop__1__i <= s__index__subtype__1__last .
H4:    loop__1__i >= s__index__subtype__1__first .
H5:    v >= natural__first .
H6:    v <= natural__last .
H7:    for_all(i___1: integer, ((i___1 >= 
           s__index__subtype__1__first) and (i___1 <= 
           s__index__subtype__1__last)) -> ((element(s, [
           i___1]) >= character__first) and (element(s, [
           i___1]) <= character__last))) .
H8:    value >= natural__first .
H9:    value <= natural__last .
H10:   sstart >= positive__first .
H11:   sstart <= positive__last .
H12:   send >= positive__first .
H13:   send <= positive__last .
H14:   s__index__subtype__1__last >= send .
H15:   s__index__subtype__1__first <= sstart .
H16:   loop__1__i >= positive__first .
H17:   loop__1__i <= positive__last .
H18:   loop__1__i <= send .
H19:   loop__1__i >= sstart .
H20:   v >= natural__first .
H21:   v <= natural__last .
H22:   48 + v mod 10 >= character__first .
H23:   48 + v mod 10 <= character__last .
H24:   48 + v mod 10 >= character__first .
H25:   48 + v mod 10 <= character__last .
H26:   48 + v mod 10 >= integer__base__first .
H27:   48 + v mod 10 <= integer__base__last .
H28:   v mod 10 >= integer__base__first .
H29:   v mod 10 <= integer__base__last .
H30:   10 <> 0 .
H31:   loop__1__i >= s__index__subtype__1__first .
H32:   loop__1__i <= s__index__subtype__1__last .
H33:   v >= natural__first .
H34:   v <= natural__last .
        ->
C1:    v div 10 >= natural__first .
C2:    v div 10 <= natural__last .
C3:    10 <> 0 .
 

For path(s) from start to finish:

procedure_setstringsegment_8.
*** true .          /* trivially true VC removed by Examiner */


For path(s) from assertion of line 74 to finish:

procedure_setstringsegment_9.
*** true .          /* trivially true VC removed by Examiner */


