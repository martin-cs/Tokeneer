           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:12.37}

                {procedure KeyStore.KeyMatchingIssuerPresent}


title procedure keymatchingissuerpresent;

  function round__(real) : integer;
  type character = integer;
  type basictypes__unsigned32t = integer;
  type cryptotypes__issueridt = integer;
  type keystore__interface__store__type = pending;
  type string = array [integer] of character;
  const null__string : string = pending;
  type prf_storet = record
        keystore__interface__store : 
     keystore__interface__store__type
     end;
  type cryptotypes__issuert = record
        id : integer;
        namelength : integer;
        name : string
     end;
  const cryptotypes__issueridt__base__first : integer = pending; 
  const cryptotypes__issueridt__base__last : integer = pending; 
  const cryptotypes__namei__base__first : integer = pending; 
  const cryptotypes__namei__base__last : integer = pending; 
  const cryptotypes__namecountt__base__first : integer = pending; 
  const cryptotypes__namecountt__base__last : integer = pending; 
  const basictypes__unsigned32t__base__first : integer = pending; 
  const basictypes__unsigned32t__base__last : integer = pending; 
  const positive__base__first : integer = pending; 
  const positive__base__last : integer = pending; 
  const character__base__first : character = pending; 
  const character__base__last : character = pending; 
  const integer__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const cryptotypes__issuert__size : integer = pending; 
  const cryptotypes__issueridt__first : integer = pending; 
  const cryptotypes__issueridt__last : integer = pending; 
  const cryptotypes__issueridt__size : integer = pending; 
  const cryptotypes__namei__first : integer = pending; 
  const cryptotypes__namei__last : integer = pending; 
  const cryptotypes__namei__size : integer = pending; 
  const cryptotypes__namecountt__first : integer = pending; 
  const cryptotypes__namecountt__last : integer = pending; 
  const cryptotypes__namecountt__size : integer = pending; 
  const basictypes__unsigned32t__first : integer = pending; 
  const basictypes__unsigned32t__last : integer = pending; 
  const basictypes__unsigned32t__size : integer = pending; 
  const positive__first : integer = pending; 
  const positive__last : integer = pending; 
  const positive__size : integer = pending; 
  const character__first : character = pending; 
  const character__last : character = pending; 
  const character__size : integer = pending; 
  const integer__first : integer = pending; 
  const integer__last : integer = pending; 
  const integer__size : integer = pending; 
  var store : prf_storet;
  var issuer : cryptotypes__issuert;
  var ispresent : boolean;
  var keystore__interface__store : 
     keystore__interface__store__type;
  var theissuerkey : integer;
  function prf_issuerkeynotnull(cryptotypes__issuert, prf_storet) : boolean;
  var theissuerkey__1 : integer;

end;
