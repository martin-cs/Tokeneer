           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:12.68

                         procedure KeyStore.AddKey




For path(s) from start to run-time check associated with statement of line 864:

procedure_addkey_1.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
        ->
C1:    fld_keylength(thekey) >= basictypes__unsigned32t__first .
C2:    fld_keylength(thekey) <= basictypes__unsigned32t__last .
C3:    fld_keylength(thekey) >= basictypes__unsigned32t__first .
C4:    fld_keylength(thekey) <= basictypes__unsigned32t__last .
C5:    fld_keyid(thekey) >= basictypes__unsigned32t__first .
C6:    fld_keyid(thekey) <= basictypes__unsigned32t__last .
C7:    fld_keyid(thekey) >= basictypes__unsigned32t__first .
C8:    fld_keyid(thekey) <= basictypes__unsigned32t__last .
C9:    keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
C10:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
 

For path(s) from start to run-time check associated with statement of line 871:

procedure_addkey_2.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
        ->
C1:    retval__1 >= keystore__interface__returnvaluet__first .
C2:    retval__1 <= keystore__interface__returnvaluet__last .
 

For path(s) from start to run-time check associated with statement of line 885:

procedure_addkey_3.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   retval__1 = keystore__interface__ok .
H50:   not ispublic .
H51:   retval__1 >= keystore__interface__returnvaluet__first .
H52:   retval__1 <= keystore__interface__returnvaluet__last .
        ->
C1:    retval__1 >= keystore__interface__returnvaluet__first .
C2:    retval__1 <= keystore__interface__returnvaluet__last .
 

procedure_addkey_4.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   not ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) .
H50:   retval__1 >= keystore__interface__returnvaluet__first .
H51:   retval__1 <= keystore__interface__returnvaluet__last .
        ->
C1:    retval__1 >= keystore__interface__returnvaluet__first .
C2:    retval__1 <= keystore__interface__returnvaluet__last .
 

For path(s) from start to run-time check associated with statement of line 886:

procedure_addkey_5.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   retval__1 = keystore__interface__ok .
H50:   not ispublic .
H51:   retval__1 >= keystore__interface__returnvaluet__first .
H52:   retval__1 <= keystore__interface__returnvaluet__last .
H53:   retval__1 >= keystore__interface__returnvaluet__first .
H54:   retval__1 <= keystore__interface__returnvaluet__last .
H55:   element(issystem, [retval__1]) .
H56:   retval__1 >= keystore__interface__returnvaluet__first .
H57:   retval__1 <= keystore__interface__returnvaluet__last .
        ->
C1:    retval__1 >= keystore__interface__returnvaluet__first .
C2:    retval__1 <= keystore__interface__returnvaluet__last .
 

procedure_addkey_6.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   not ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) .
H50:   retval__1 >= keystore__interface__returnvaluet__first .
H51:   retval__1 <= keystore__interface__returnvaluet__last .
H52:   retval__1 >= keystore__interface__returnvaluet__first .
H53:   retval__1 <= keystore__interface__returnvaluet__last .
H54:   element(issystem, [retval__1]) .
H55:   retval__1 >= keystore__interface__returnvaluet__first .
H56:   retval__1 <= keystore__interface__returnvaluet__last .
        ->
C1:    retval__1 >= keystore__interface__returnvaluet__first .
C2:    retval__1 <= keystore__interface__returnvaluet__last .
 

For path(s) from start to run-time check associated with statement of line 886:

procedure_addkey_7.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   retval__1 = keystore__interface__ok .
H50:   not ispublic .
H51:   retval__1 >= keystore__interface__returnvaluet__first .
H52:   retval__1 <= keystore__interface__returnvaluet__last .
H53:   retval__1 >= keystore__interface__returnvaluet__first .
H54:   retval__1 <= keystore__interface__returnvaluet__last .
H55:   element(issystem, [retval__1]) .
H56:   retval__1 >= keystore__interface__returnvaluet__first .
H57:   retval__1 <= keystore__interface__returnvaluet__last .
H58:   retval__1 >= keystore__interface__returnvaluet__first .
H59:   retval__1 <= keystore__interface__returnvaluet__last .
H60:   for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) >= character__first) and (element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) <= character__last))) .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

procedure_addkey_8.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   not ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) .
H50:   retval__1 >= keystore__interface__returnvaluet__first .
H51:   retval__1 <= keystore__interface__returnvaluet__last .
H52:   retval__1 >= keystore__interface__returnvaluet__first .
H53:   retval__1 <= keystore__interface__returnvaluet__last .
H54:   element(issystem, [retval__1]) .
H55:   retval__1 >= keystore__interface__returnvaluet__first .
H56:   retval__1 <= keystore__interface__returnvaluet__last .
H57:   retval__1 >= keystore__interface__returnvaluet__first .
H58:   retval__1 <= keystore__interface__returnvaluet__last .
H59:   for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) >= character__first) and (element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) <= character__last))) .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

For path(s) from start to finish:

procedure_addkey_9.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   retval__1 = keystore__interface__ok .
H50:   not ispublic .
H51:   retval__1 >= keystore__interface__returnvaluet__first .
H52:   retval__1 <= keystore__interface__returnvaluet__last .
H53:   retval__1 >= keystore__interface__returnvaluet__first .
H54:   retval__1 <= keystore__interface__returnvaluet__last .
H55:   element(issystem, [retval__1]) .
H56:   retval__1 >= keystore__interface__returnvaluet__first .
H57:   retval__1 <= keystore__interface__returnvaluet__last .
H58:   retval__1 >= keystore__interface__returnvaluet__first .
H59:   retval__1 <= keystore__interface__returnvaluet__last .
H60:   for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) >= character__first) and (element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) <= character__last))) .
H61:   audittypes__warning >= audittypes__severityt__first .
H62:   audittypes__warning <= audittypes__severityt__last .
H63:   audittypes__systemfault >= audittypes__elementt__first .
H64:   audittypes__systemfault <= audittypes__elementt__last .
        ->
C1:    ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) -> privatekeypresent(
           mk__optionalprivatekeyt(ispresent := true, owner := 
           theowner)) .
C2:    (not ((retval__1 = keystore__interface__ok) and (not 
           ispublic))) -> (privatekeypresent(
           mk__optionalprivatekeyt(ispresent := true, owner := 
           theowner)) = privatekeypresent(thistisinfo)) .
 

procedure_addkey_10.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   not ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) .
H50:   retval__1 >= keystore__interface__returnvaluet__first .
H51:   retval__1 <= keystore__interface__returnvaluet__last .
H52:   retval__1 >= keystore__interface__returnvaluet__first .
H53:   retval__1 <= keystore__interface__returnvaluet__last .
H54:   element(issystem, [retval__1]) .
H55:   retval__1 >= keystore__interface__returnvaluet__first .
H56:   retval__1 <= keystore__interface__returnvaluet__last .
H57:   retval__1 >= keystore__interface__returnvaluet__first .
H58:   retval__1 <= keystore__interface__returnvaluet__last .
H59:   for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) >= character__first) and (element(
           convertretvaltotext(retval__1, mk__string( [1] := 65, [2]
            := 100, [3] := 100, [4] := 75, [5] := 101, [6] := 121)), [
           i___1]) <= character__last))) .
H60:   audittypes__warning >= audittypes__severityt__first .
H61:   audittypes__warning <= audittypes__severityt__last .
H62:   audittypes__systemfault >= audittypes__elementt__first .
H63:   audittypes__systemfault <= audittypes__elementt__last .
        ->
C1:    ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) -> privatekeypresent(thistisinfo) .
C2:    (not ((retval__1 = keystore__interface__ok) and (not 
           ispublic))) -> (privatekeypresent(thistisinfo) = 
           privatekeypresent(thistisinfo)) .
 

procedure_addkey_11.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   retval__1 = keystore__interface__ok .
H50:   not ispublic .
H51:   retval__1 >= keystore__interface__returnvaluet__first .
H52:   retval__1 <= keystore__interface__returnvaluet__last .
H53:   retval__1 >= keystore__interface__returnvaluet__first .
H54:   retval__1 <= keystore__interface__returnvaluet__last .
H55:   not (element(issystem, [retval__1])) .
        ->
C1:    ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) -> privatekeypresent(
           mk__optionalprivatekeyt(ispresent := true, owner := 
           theowner)) .
C2:    (not ((retval__1 = keystore__interface__ok) and (not 
           ispublic))) -> (privatekeypresent(
           mk__optionalprivatekeyt(ispresent := true, owner := 
           theowner)) = privatekeypresent(thistisinfo)) .
 

procedure_addkey_12.
H1:    true .
H2:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H3:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H4:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H5:    fld_id(theowner) >= cryptotypes__issueridt__first .
H6:    fld_id(theowner) <= cryptotypes__issueridt__last .
H7:    fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H8:    fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H9:    fld_keyid(thekey) >= cryptotypes__keyidt__first .
H10:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H11:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H12:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H13:   true .
H14:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H15:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H16:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H17:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H18:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H19:   true .
H20:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H21:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H22:   fld_keylength(thekey) >= basictypes__unsigned32t__first .
H23:   fld_keylength(thekey) <= basictypes__unsigned32t__last .
H24:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H25:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H26:   fld_keyid(thekey) >= basictypes__unsigned32t__first .
H27:   fld_keyid(thekey) <= basictypes__unsigned32t__last .
H28:   keystore__interface__fullkeymask >= 
           keystore__interface__maskt__first .
H29:   keystore__interface__fullkeymask <= 
           keystore__interface__maskt__last .
H30:   true .
H31:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H32:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H33:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= basictypes__unsigned32t__first .
H34:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= basictypes__unsigned32t__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__fullkeymask, owner := 
           theowner, keyid := fld_keyid(thekey), keylength := 
           fld_keylength(thekey), ispublic := ispublic))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) >= cryptotypes__issueridt__first .
H39:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic))) <= cryptotypes__issueridt__last .
H40:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) >= keystore__interface__maskt__first .
H41:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__fullkeymask, 
           owner := theowner, keyid := fld_keyid(thekey), 
           keylength := fld_keylength(thekey), ispublic := 
           ispublic)) <= keystore__interface__maskt__last .
H42:   retval__1 >= keystore__interface__returnvaluet__first .
H43:   retval__1 <= keystore__interface__returnvaluet__last .
H44:   retval__1 >= keystore__interface__returnvaluet__first .
H45:   retval__1 <= keystore__interface__returnvaluet__last .
H46:   retval__1 >= keystore__interface__returnvaluet__first .
H47:   retval__1 <= keystore__interface__returnvaluet__last .
H48:   true .
H49:   not ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) .
H50:   retval__1 >= keystore__interface__returnvaluet__first .
H51:   retval__1 <= keystore__interface__returnvaluet__last .
H52:   retval__1 >= keystore__interface__returnvaluet__first .
H53:   retval__1 <= keystore__interface__returnvaluet__last .
H54:   not (element(issystem, [retval__1])) .
        ->
C1:    ((retval__1 = keystore__interface__ok) and (not 
           ispublic)) -> privatekeypresent(thistisinfo) .
C2:    (not ((retval__1 = keystore__interface__ok) and (not 
           ispublic))) -> (privatekeypresent(thistisinfo) = 
           privatekeypresent(thistisinfo)) .
 

For checks of refinement integrity: 

procedure_addkey_13.
*** true .          /* trivially true VC removed by Examiner */


procedure_addkey_14.
H1:    true .
H2:    true .
H3:    keystore__interface__store~ = fld_keystore__interface__store(
           store~) .
H4:    keystore__interface__store = fld_keystore__interface__store(
           store) .
H5:    thistisinfo~ = fld_thistisinfo(state~) .
H6:    thistisinfo = fld_thistisinfo(state) .
H7:    for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           theowner), [i___1]) >= character__first) and (element(
           fld_name(theowner), [i___1]) <= character__last))) .
H8:    fld_namelength(theowner) >= cryptotypes__namecountt__first .
H9:    fld_namelength(theowner) <= cryptotypes__namecountt__last .
H10:   fld_id(theowner) >= cryptotypes__issueridt__first .
H11:   fld_id(theowner) <= cryptotypes__issueridt__last .
H12:   fld_keylength(thekey) >= cryptotypes__keylengtht__first .
H13:   fld_keylength(thekey) <= cryptotypes__keylengtht__last .
H14:   fld_keyid(thekey) >= cryptotypes__keyidt__first .
H15:   fld_keyid(thekey) <= cryptotypes__keyidt__last .
H16:   fld_algorithmid(thekey) >= cryptotypes__algorithmt__first .
H17:   fld_algorithmid(thekey) <= cryptotypes__algorithmt__last .
H18:   true .
H19:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo~)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo~)), [i___1]) <= 
           character__last))) .
H20:   fld_namelength(fld_owner(thistisinfo~)) >= 
           cryptotypes__namecountt__first .
H21:   fld_namelength(fld_owner(thistisinfo~)) <= 
           cryptotypes__namecountt__last .
H22:   fld_id(fld_owner(thistisinfo~)) >= 
           cryptotypes__issueridt__first .
H23:   fld_id(fld_owner(thistisinfo~)) <= 
           cryptotypes__issueridt__last .
H24:   true .
H25:   true .
H26:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(thistisinfo)), [i___1]) >= character__first) and (element(
           fld_name(fld_owner(thistisinfo)), [i___1]) <= 
           character__last))) .
H27:   fld_namelength(fld_owner(thistisinfo)) >= 
           cryptotypes__namecountt__first .
H28:   fld_namelength(fld_owner(thistisinfo)) <= 
           cryptotypes__namecountt__last .
H29:   fld_id(fld_owner(thistisinfo)) >= 
           cryptotypes__issueridt__first .
H30:   fld_id(fld_owner(thistisinfo)) <= 
           cryptotypes__issueridt__last .
H31:   true .
H32:   (added and (not ispublic)) -> privatekeypresent(
           thistisinfo) .
H33:   (not (added and (not ispublic))) -> (
           privatekeypresent(thistisinfo) = 
           privatekeypresent(thistisinfo~)) .
        ->
C1:    (added and (not ispublic)) -> 
           keystore__privatekeypresent(state) .
C2:    (not (added and (not ispublic))) -> (
           keystore__privatekeypresent(state) = 
           keystore__privatekeypresent(state~)) .
 

