           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:12.18

                       procedure KeyStore.PrivateKey




For path(s) from start to run-time check associated with statement of line 492:

procedure_privatekey_1.
H1:    true .
        ->
C1:    0 >= basictypes__unsigned32t__first .
C2:    0 <= basictypes__unsigned32t__last .
C3:    0 >= basictypes__unsigned32t__first .
C4:    0 <= basictypes__unsigned32t__last .
C5:    keystore__interface__ispublicmask >= 
           keystore__interface__maskt__first .
C6:    keystore__interface__ispublicmask <= 
           keystore__interface__maskt__last .
 

For path(s) from start to run-time check associated with statement of line 499:

procedure_privatekey_2.
H1:    true .
H2:    0 >= basictypes__unsigned32t__first .
H3:    0 <= basictypes__unsigned32t__last .
H4:    0 >= basictypes__unsigned32t__first .
H5:    0 <= basictypes__unsigned32t__last .
H6:    keystore__interface__ispublicmask >= 
           keystore__interface__maskt__first .
H7:    keystore__interface__ispublicmask <= 
           keystore__interface__maskt__last .
H8:    true .
H9:    fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H10:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H11:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H12:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H13:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))), [i___1]) >= 
           character__first) and (element(fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))), [i___1]) <= character__last))) .
H14:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) >= cryptotypes__namecountt__first .
H15:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) <= cryptotypes__namecountt__last .
H16:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) >= 
           cryptotypes__issueridt__first .
H17:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) <= 
           cryptotypes__issueridt__last .
H18:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           keystore__interface__maskt__first .
H19:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           keystore__interface__maskt__last .
H20:   expectedcount >= basictypes__unsigned32t__first .
H21:   expectedcount <= basictypes__unsigned32t__last .
        ->
C1:    expectedcount >= basictypes__unsigned32t__first .
C2:    expectedcount <= basictypes__unsigned32t__last .
 

For path(s) from start to run-time check associated with statement of line 499:

procedure_privatekey_3.
H1:    true .
H2:    0 >= basictypes__unsigned32t__first .
H3:    0 <= basictypes__unsigned32t__last .
H4:    0 >= basictypes__unsigned32t__first .
H5:    0 <= basictypes__unsigned32t__last .
H6:    keystore__interface__ispublicmask >= 
           keystore__interface__maskt__first .
H7:    keystore__interface__ispublicmask <= 
           keystore__interface__maskt__last .
H8:    true .
H9:    fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H10:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H11:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H12:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H13:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))), [i___1]) >= 
           character__first) and (element(fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))), [i___1]) <= character__last))) .
H14:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) >= cryptotypes__namecountt__first .
H15:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) <= cryptotypes__namecountt__last .
H16:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) >= 
           cryptotypes__issueridt__first .
H17:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) <= 
           cryptotypes__issueridt__last .
H18:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           keystore__interface__maskt__first .
H19:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           keystore__interface__maskt__last .
H20:   expectedcount >= basictypes__unsigned32t__first .
H21:   expectedcount <= basictypes__unsigned32t__last .
H22:   expectedcount >= basictypes__unsigned32t__first .
H23:   expectedcount <= basictypes__unsigned32t__last .
H24:   actualcount__1 >= basictypes__unsigned32t__first .
H25:   actualcount__1 <= basictypes__unsigned32t__last .
H26:   for_all(i___1: keystore__interface__handlecountt, ((
           i___1 >= keystore__interface__handlearrayi__first) and (
           i___1 <= keystore__interface__handlearrayi__last)) -> ((element(
           handles__1, [i___1]) >= basictypes__unsigned32t__first) and (element(
           handles__1, [i___1]) <= basictypes__unsigned32t__last))) .
        ->
C1:    actualcount__1 >= basictypes__unsigned32t__first .
C2:    actualcount__1 <= basictypes__unsigned32t__last .
 

For path(s) from start to run-time check associated with statement of line 506:

procedure_privatekey_4.
H1:    true .
H2:    0 >= basictypes__unsigned32t__first .
H3:    0 <= basictypes__unsigned32t__last .
H4:    0 >= basictypes__unsigned32t__first .
H5:    0 <= basictypes__unsigned32t__last .
H6:    keystore__interface__ispublicmask >= 
           keystore__interface__maskt__first .
H7:    keystore__interface__ispublicmask <= 
           keystore__interface__maskt__last .
H8:    true .
H9:    fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H10:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H11:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H12:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H13:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))), [i___1]) >= 
           character__first) and (element(fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))), [i___1]) <= character__last))) .
H14:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) >= cryptotypes__namecountt__first .
H15:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) <= cryptotypes__namecountt__last .
H16:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) >= 
           cryptotypes__issueridt__first .
H17:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) <= 
           cryptotypes__issueridt__last .
H18:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           keystore__interface__maskt__first .
H19:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           keystore__interface__maskt__last .
H20:   expectedcount >= basictypes__unsigned32t__first .
H21:   expectedcount <= basictypes__unsigned32t__last .
H22:   expectedcount >= basictypes__unsigned32t__first .
H23:   expectedcount <= basictypes__unsigned32t__last .
H24:   actualcount__1 >= basictypes__unsigned32t__first .
H25:   actualcount__1 <= basictypes__unsigned32t__last .
H26:   for_all(i___1: keystore__interface__handlecountt, ((
           i___1 >= keystore__interface__handlearrayi__first) and (
           i___1 <= keystore__interface__handlearrayi__last)) -> ((element(
           handles__1, [i___1]) >= basictypes__unsigned32t__first) and (element(
           handles__1, [i___1]) <= basictypes__unsigned32t__last))) .
H27:   actualcount__1 >= basictypes__unsigned32t__first .
H28:   actualcount__1 <= basictypes__unsigned32t__last .
H29:   actualcount__1 >= basictypes__unsigned32t__first .
H30:   actualcount__1 <= basictypes__unsigned32t__last .
H31:   actualcount__1 > expectedcount .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 515:

procedure_privatekey_5.
H1:    true .
H2:    0 >= basictypes__unsigned32t__first .
H3:    0 <= basictypes__unsigned32t__last .
H4:    0 >= basictypes__unsigned32t__first .
H5:    0 <= basictypes__unsigned32t__last .
H6:    keystore__interface__ispublicmask >= 
           keystore__interface__maskt__first .
H7:    keystore__interface__ispublicmask <= 
           keystore__interface__maskt__last .
H8:    true .
H9:    fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H10:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H11:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H12:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H13:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))), [i___1]) >= 
           character__first) and (element(fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))), [i___1]) <= character__last))) .
H14:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) >= cryptotypes__namecountt__first .
H15:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) <= cryptotypes__namecountt__last .
H16:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) >= 
           cryptotypes__issueridt__first .
H17:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) <= 
           cryptotypes__issueridt__last .
H18:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           keystore__interface__maskt__first .
H19:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           keystore__interface__maskt__last .
H20:   expectedcount >= basictypes__unsigned32t__first .
H21:   expectedcount <= basictypes__unsigned32t__last .
H22:   expectedcount >= basictypes__unsigned32t__first .
H23:   expectedcount <= basictypes__unsigned32t__last .
H24:   actualcount__1 >= basictypes__unsigned32t__first .
H25:   actualcount__1 <= basictypes__unsigned32t__last .
H26:   for_all(i___1: keystore__interface__handlecountt, ((
           i___1 >= keystore__interface__handlearrayi__first) and (
           i___1 <= keystore__interface__handlearrayi__last)) -> ((element(
           handles__1, [i___1]) >= basictypes__unsigned32t__first) and (element(
           handles__1, [i___1]) <= basictypes__unsigned32t__last))) .
H27:   actualcount__1 >= basictypes__unsigned32t__first .
H28:   actualcount__1 <= basictypes__unsigned32t__last .
H29:   actualcount__1 >= basictypes__unsigned32t__first .
H30:   actualcount__1 <= basictypes__unsigned32t__last .
H31:   actualcount__1 > expectedcount .
H32:   audittypes__warning >= audittypes__severityt__first .
H33:   audittypes__warning <= audittypes__severityt__last .
H34:   audittypes__systemfault >= audittypes__elementt__first .
H35:   audittypes__systemfault <= audittypes__elementt__last .
H36:   for_all(i___1: keystore__interface__handlecountt, ((
           i___1 >= keystore__interface__handlearrayi__first) and (
           i___1 <= keystore__interface__handlearrayi__last)) -> ((element(
           handles__1, [i___1]) >= basictypes__unsigned32t__first) and (element(
           handles__1, [i___1]) <= basictypes__unsigned32t__last))) .
        ->
C1:    element(handles__1, [1]) >= basictypes__unsigned32t__first .
C2:    element(handles__1, [1]) <= basictypes__unsigned32t__last .
C3:    1 >= keystore__interface__handlearrayi__first .
C4:    1 <= keystore__interface__handlearrayi__last .
 

procedure_privatekey_6.
H1:    true .
H2:    0 >= basictypes__unsigned32t__first .
H3:    0 <= basictypes__unsigned32t__last .
H4:    0 >= basictypes__unsigned32t__first .
H5:    0 <= basictypes__unsigned32t__last .
H6:    keystore__interface__ispublicmask >= 
           keystore__interface__maskt__first .
H7:    keystore__interface__ispublicmask <= 
           keystore__interface__maskt__last .
H8:    true .
H9:    fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H10:   fld_keylength(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H11:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           basictypes__unsigned32t__first .
H12:   fld_keyid(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           basictypes__unsigned32t__last .
H13:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))), [i___1]) >= 
           character__first) and (element(fld_name(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))), [i___1]) <= character__last))) .
H14:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) >= cryptotypes__namecountt__first .
H15:   fld_namelength(fld_owner(
           mk__keystore__interface__keytemplatet(attrmask := 
           keystore__interface__ispublicmask, owner := 
           cryptotypes__nullissuer, keyid := 0, keylength := 0, 
           ispublic := false))) <= cryptotypes__namecountt__last .
H16:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) >= 
           cryptotypes__issueridt__first .
H17:   fld_id(fld_owner(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false))) <= 
           cryptotypes__issueridt__last .
H18:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) >= 
           keystore__interface__maskt__first .
H19:   fld_attrmask(mk__keystore__interface__keytemplatet(
           attrmask := keystore__interface__ispublicmask, 
           owner := cryptotypes__nullissuer, keyid := 0, 
           keylength := 0, ispublic := false)) <= 
           keystore__interface__maskt__last .
H20:   expectedcount >= basictypes__unsigned32t__first .
H21:   expectedcount <= basictypes__unsigned32t__last .
H22:   expectedcount >= basictypes__unsigned32t__first .
H23:   expectedcount <= basictypes__unsigned32t__last .
H24:   actualcount__1 >= basictypes__unsigned32t__first .
H25:   actualcount__1 <= basictypes__unsigned32t__last .
H26:   for_all(i___1: keystore__interface__handlecountt, ((
           i___1 >= keystore__interface__handlearrayi__first) and (
           i___1 <= keystore__interface__handlearrayi__last)) -> ((element(
           handles__1, [i___1]) >= basictypes__unsigned32t__first) and (element(
           handles__1, [i___1]) <= basictypes__unsigned32t__last))) .
H27:   actualcount__1 >= basictypes__unsigned32t__first .
H28:   actualcount__1 <= basictypes__unsigned32t__last .
H29:   actualcount__1 >= basictypes__unsigned32t__first .
H30:   actualcount__1 <= basictypes__unsigned32t__last .
H31:   not (actualcount__1 > expectedcount) .
H32:   for_all(i___1: keystore__interface__handlecountt, ((
           i___1 >= keystore__interface__handlearrayi__first) and (
           i___1 <= keystore__interface__handlearrayi__last)) -> ((element(
           handles__1, [i___1]) >= basictypes__unsigned32t__first) and (element(
           handles__1, [i___1]) <= basictypes__unsigned32t__last))) .
        ->
C1:    element(handles__1, [1]) >= basictypes__unsigned32t__first .
C2:    element(handles__1, [1]) <= basictypes__unsigned32t__last .
C3:    1 >= keystore__interface__handlearrayi__first .
C4:    1 <= keystore__interface__handlearrayi__last .
 

For path(s) from start to finish:

procedure_privatekey_7.
*** true .          /* trivially true VC removed by Examiner */


procedure_privatekey_8.
*** true .          /* trivially true VC removed by Examiner */


