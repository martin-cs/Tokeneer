           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:16.24}

                          {procedure Keyboard.Read}


title procedure read;

  function round__(real) : integer;
  type character = integer;
  type basictypes__presencet = (basictypes__present, 
     basictypes__absent);
  type string = array [integer] of character;
  const null__string : string = pending;
  const datai__base__first : integer = pending; 
  const datai__base__last : integer = pending; 
  const datalengtht__base__first : integer = pending; 
  const datalengtht__base__last : integer = pending; 
  const basictypes__presencet__base__first : 
     basictypes__presencet = pending; 
  const basictypes__presencet__base__last : basictypes__presencet = pending; 
  const positive__base__first : integer = pending; 
  const positive__base__last : integer = pending; 
  const character__base__first : character = pending; 
  const character__base__last : character = pending; 
  const integer__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const datai__first : integer = pending; 
  const datai__last : integer = pending; 
  const datai__size : integer = pending; 
  const datalengtht__first : integer = pending; 
  const datalengtht__last : integer = pending; 
  const datalengtht__size : integer = pending; 
  const basictypes__presencet__first : basictypes__presencet = pending; 
  const basictypes__presencet__last : basictypes__presencet = pending; 
  const basictypes__presencet__size : integer = pending; 
  const positive__first : integer = pending; 
  const positive__last : integer = pending; 
  const positive__size : integer = pending; 
  const character__first : character = pending; 
  const character__last : character = pending; 
  const character__size : integer = pending; 
  const integer__first : integer = pending; 
  const integer__last : integer = pending; 
  const integer__size : integer = pending; 
  var datapresence : basictypes__presencet;
  var localdata : string;
  var locallength : integer;
  var locallength__1 : integer;
  var localdata__1 : string;
  var datapresence__1 : basictypes__presencet;

end;
