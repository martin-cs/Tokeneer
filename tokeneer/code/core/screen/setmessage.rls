           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:23.33*/

                        /*procedure Screen.SetMessage*/


rule_family setmessage_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

setmessage_rules(1): audittypes__elementt__size >= 0 may_be_deduced.
setmessage_rules(2): audittypes__elementt__first may_be_replaced_by audittypes__startunenrolledtis.
setmessage_rules(3): audittypes__elementt__last may_be_replaced_by audittypes__systemfault.
setmessage_rules(4): audittypes__elementt__base__first may_be_replaced_by audittypes__startunenrolledtis.
setmessage_rules(5): audittypes__elementt__base__last may_be_replaced_by audittypes__systemfault.
setmessage_rules(6): audittypes__elementt__pos(
     audittypes__elementt__first) may_be_replaced_by 0.
setmessage_rules(7): audittypes__elementt__pos(
     audittypes__startunenrolledtis) may_be_replaced_by 0.
setmessage_rules(8): audittypes__elementt__val(0) may_be_replaced_by 
     audittypes__startunenrolledtis.
setmessage_rules(9): audittypes__elementt__pos(
     audittypes__startenrolledtis) may_be_replaced_by 1.
setmessage_rules(10): audittypes__elementt__val(1) may_be_replaced_by 
     audittypes__startenrolledtis.
setmessage_rules(11): audittypes__elementt__pos(
     audittypes__enrolmentcomplete) may_be_replaced_by 2.
setmessage_rules(12): audittypes__elementt__val(2) may_be_replaced_by 
     audittypes__enrolmentcomplete.
setmessage_rules(13): audittypes__elementt__pos(
     audittypes__enrolmentfailed) may_be_replaced_by 3.
setmessage_rules(14): audittypes__elementt__val(3) may_be_replaced_by 
     audittypes__enrolmentfailed.
setmessage_rules(15): audittypes__elementt__pos(
     audittypes__displaychanged) may_be_replaced_by 4.
setmessage_rules(16): audittypes__elementt__val(4) may_be_replaced_by 
     audittypes__displaychanged.
setmessage_rules(17): audittypes__elementt__pos(
     audittypes__screenchanged) may_be_replaced_by 5.
setmessage_rules(18): audittypes__elementt__val(5) may_be_replaced_by 
     audittypes__screenchanged.
setmessage_rules(19): audittypes__elementt__pos(
     audittypes__doorclosed) may_be_replaced_by 6.
setmessage_rules(20): audittypes__elementt__val(6) may_be_replaced_by 
     audittypes__doorclosed.
setmessage_rules(21): audittypes__elementt__pos(
     audittypes__dooropened) may_be_replaced_by 7.
setmessage_rules(22): audittypes__elementt__val(7) may_be_replaced_by 
     audittypes__dooropened.
setmessage_rules(23): audittypes__elementt__pos(
     audittypes__latchlocked) may_be_replaced_by 8.
setmessage_rules(24): audittypes__elementt__val(8) may_be_replaced_by 
     audittypes__latchlocked.
setmessage_rules(25): audittypes__elementt__pos(
     audittypes__latchunlocked) may_be_replaced_by 9.
setmessage_rules(26): audittypes__elementt__val(9) may_be_replaced_by 
     audittypes__latchunlocked.
setmessage_rules(27): audittypes__elementt__pos(
     audittypes__alarmraised) may_be_replaced_by 10.
setmessage_rules(28): audittypes__elementt__val(10) may_be_replaced_by 
     audittypes__alarmraised.
setmessage_rules(29): audittypes__elementt__pos(
     audittypes__alarmsilenced) may_be_replaced_by 11.
setmessage_rules(30): audittypes__elementt__val(11) may_be_replaced_by 
     audittypes__alarmsilenced.
setmessage_rules(31): audittypes__elementt__pos(
     audittypes__truncatelog) may_be_replaced_by 12.
setmessage_rules(32): audittypes__elementt__val(12) may_be_replaced_by 
     audittypes__truncatelog.
setmessage_rules(33): audittypes__elementt__pos(
     audittypes__auditalarmraised) may_be_replaced_by 13.
setmessage_rules(34): audittypes__elementt__val(13) may_be_replaced_by 
     audittypes__auditalarmraised.
setmessage_rules(35): audittypes__elementt__pos(
     audittypes__auditalarmsilenced) may_be_replaced_by 14.
setmessage_rules(36): audittypes__elementt__val(14) may_be_replaced_by 
     audittypes__auditalarmsilenced.
setmessage_rules(37): audittypes__elementt__pos(
     audittypes__usertokenremoved) may_be_replaced_by 15.
setmessage_rules(38): audittypes__elementt__val(15) may_be_replaced_by 
     audittypes__usertokenremoved.
setmessage_rules(39): audittypes__elementt__pos(
     audittypes__usertokenpresent) may_be_replaced_by 16.
setmessage_rules(40): audittypes__elementt__val(16) may_be_replaced_by 
     audittypes__usertokenpresent.
setmessage_rules(41): audittypes__elementt__pos(
     audittypes__usertokeninvalid) may_be_replaced_by 17.
setmessage_rules(42): audittypes__elementt__val(17) may_be_replaced_by 
     audittypes__usertokeninvalid.
setmessage_rules(43): audittypes__elementt__pos(
     audittypes__authcertvalid) may_be_replaced_by 18.
setmessage_rules(44): audittypes__elementt__val(18) may_be_replaced_by 
     audittypes__authcertvalid.
setmessage_rules(45): audittypes__elementt__pos(
     audittypes__authcertinvalid) may_be_replaced_by 19.
setmessage_rules(46): audittypes__elementt__val(19) may_be_replaced_by 
     audittypes__authcertinvalid.
setmessage_rules(47): audittypes__elementt__pos(
     audittypes__fingerdetected) may_be_replaced_by 20.
setmessage_rules(48): audittypes__elementt__val(20) may_be_replaced_by 
     audittypes__fingerdetected.
setmessage_rules(49): audittypes__elementt__pos(
     audittypes__fingertimeout) may_be_replaced_by 21.
setmessage_rules(50): audittypes__elementt__val(21) may_be_replaced_by 
     audittypes__fingertimeout.
setmessage_rules(51): audittypes__elementt__pos(
     audittypes__fingermatched) may_be_replaced_by 22.
setmessage_rules(52): audittypes__elementt__val(22) may_be_replaced_by 
     audittypes__fingermatched.
setmessage_rules(53): audittypes__elementt__pos(
     audittypes__fingernotmatched) may_be_replaced_by 23.
setmessage_rules(54): audittypes__elementt__val(23) may_be_replaced_by 
     audittypes__fingernotmatched.
setmessage_rules(55): audittypes__elementt__pos(
     audittypes__authcertwritten) may_be_replaced_by 24.
setmessage_rules(56): audittypes__elementt__val(24) may_be_replaced_by 
     audittypes__authcertwritten.
setmessage_rules(57): audittypes__elementt__pos(
     audittypes__authcertwritefailed) may_be_replaced_by 25.
setmessage_rules(58): audittypes__elementt__val(25) may_be_replaced_by 
     audittypes__authcertwritefailed.
setmessage_rules(59): audittypes__elementt__pos(
     audittypes__entrypermitted) may_be_replaced_by 26.
setmessage_rules(60): audittypes__elementt__val(26) may_be_replaced_by 
     audittypes__entrypermitted.
setmessage_rules(61): audittypes__elementt__pos(
     audittypes__entrytimeout) may_be_replaced_by 27.
setmessage_rules(62): audittypes__elementt__val(27) may_be_replaced_by 
     audittypes__entrytimeout.
setmessage_rules(63): audittypes__elementt__pos(
     audittypes__entrydenied) may_be_replaced_by 28.
setmessage_rules(64): audittypes__elementt__val(28) may_be_replaced_by 
     audittypes__entrydenied.
setmessage_rules(65): audittypes__elementt__pos(
     audittypes__admintokenpresent) may_be_replaced_by 29.
setmessage_rules(66): audittypes__elementt__val(29) may_be_replaced_by 
     audittypes__admintokenpresent.
setmessage_rules(67): audittypes__elementt__pos(
     audittypes__admintokenvalid) may_be_replaced_by 30.
setmessage_rules(68): audittypes__elementt__val(30) may_be_replaced_by 
     audittypes__admintokenvalid.
setmessage_rules(69): audittypes__elementt__pos(
     audittypes__admintokeninvalid) may_be_replaced_by 31.
setmessage_rules(70): audittypes__elementt__val(31) may_be_replaced_by 
     audittypes__admintokeninvalid.
setmessage_rules(71): audittypes__elementt__pos(
     audittypes__admintokenexpired) may_be_replaced_by 32.
setmessage_rules(72): audittypes__elementt__val(32) may_be_replaced_by 
     audittypes__admintokenexpired.
setmessage_rules(73): audittypes__elementt__pos(
     audittypes__admintokenremoved) may_be_replaced_by 33.
setmessage_rules(74): audittypes__elementt__val(33) may_be_replaced_by 
     audittypes__admintokenremoved.
setmessage_rules(75): audittypes__elementt__pos(
     audittypes__invalidoprequest) may_be_replaced_by 34.
setmessage_rules(76): audittypes__elementt__val(34) may_be_replaced_by 
     audittypes__invalidoprequest.
setmessage_rules(77): audittypes__elementt__pos(
     audittypes__operationstart) may_be_replaced_by 35.
setmessage_rules(78): audittypes__elementt__val(35) may_be_replaced_by 
     audittypes__operationstart.
setmessage_rules(79): audittypes__elementt__pos(
     audittypes__archivelog) may_be_replaced_by 36.
setmessage_rules(80): audittypes__elementt__val(36) may_be_replaced_by 
     audittypes__archivelog.
setmessage_rules(81): audittypes__elementt__pos(
     audittypes__archivecomplete) may_be_replaced_by 37.
setmessage_rules(82): audittypes__elementt__val(37) may_be_replaced_by 
     audittypes__archivecomplete.
setmessage_rules(83): audittypes__elementt__pos(
     audittypes__archivecheckfailed) may_be_replaced_by 38.
setmessage_rules(84): audittypes__elementt__val(38) may_be_replaced_by 
     audittypes__archivecheckfailed.
setmessage_rules(85): audittypes__elementt__pos(
     audittypes__updatedconfigdata) may_be_replaced_by 39.
setmessage_rules(86): audittypes__elementt__val(39) may_be_replaced_by 
     audittypes__updatedconfigdata.
setmessage_rules(87): audittypes__elementt__pos(
     audittypes__invalidconfigdata) may_be_replaced_by 40.
setmessage_rules(88): audittypes__elementt__val(40) may_be_replaced_by 
     audittypes__invalidconfigdata.
setmessage_rules(89): audittypes__elementt__pos(
     audittypes__shutdown) may_be_replaced_by 41.
setmessage_rules(90): audittypes__elementt__val(41) may_be_replaced_by 
     audittypes__shutdown.
setmessage_rules(91): audittypes__elementt__pos(
     audittypes__overridelock) may_be_replaced_by 42.
setmessage_rules(92): audittypes__elementt__val(42) may_be_replaced_by 
     audittypes__overridelock.
setmessage_rules(93): audittypes__elementt__pos(
     audittypes__systemfault) may_be_replaced_by 43.
setmessage_rules(94): audittypes__elementt__val(43) may_be_replaced_by 
     audittypes__systemfault.
setmessage_rules(95): audittypes__elementt__pos(
     audittypes__elementt__last) may_be_replaced_by 43.
setmessage_rules(96): audittypes__elementt__pos(succ(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) + 1
     if [X <=audittypes__systemfault, X <> 
     audittypes__systemfault].
setmessage_rules(97): audittypes__elementt__pos(pred(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) - 1
     if [X >=audittypes__startunenrolledtis, X <> 
     audittypes__startunenrolledtis].
setmessage_rules(98): audittypes__elementt__pos(X) >= 0 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
setmessage_rules(99): audittypes__elementt__pos(X) <= 43 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
setmessage_rules(100): audittypes__elementt__val(X) >= 
     audittypes__startunenrolledtis may_be_deduced_from
     [0 <= X, X <= 43].
setmessage_rules(101): audittypes__elementt__val(X) <= 
     audittypes__systemfault may_be_deduced_from
     [0 <= X, X <= 43].
setmessage_rules(102): succ(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X+1)
     if [0 <= X, X < 43].
setmessage_rules(103): pred(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X-1)
     if [0 < X, X <= 43].
setmessage_rules(104): audittypes__elementt__pos(
     audittypes__elementt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 43].
setmessage_rules(105): audittypes__elementt__val(
     audittypes__elementt__pos(X)) may_be_replaced_by X
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
setmessage_rules(106): audittypes__elementt__pos(X) <= 
     audittypes__elementt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault, audittypes__startunenrolledtis <= Y, Y <= 
     audittypes__systemfault].
setmessage_rules(107): audittypes__elementt__val(X) <= 
     audittypes__elementt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 43, 0 <= Y, Y <= 43].
setmessage_rules(108): audittypes__severityt__size >= 0 may_be_deduced.
setmessage_rules(109): audittypes__severityt__first may_be_replaced_by audittypes__information.
setmessage_rules(110): audittypes__severityt__last may_be_replaced_by audittypes__critical.
setmessage_rules(111): audittypes__severityt__base__first may_be_replaced_by audittypes__information.
setmessage_rules(112): audittypes__severityt__base__last may_be_replaced_by audittypes__critical.
setmessage_rules(113): audittypes__severityt__pos(
     audittypes__severityt__first) may_be_replaced_by 0.
setmessage_rules(114): audittypes__severityt__pos(
     audittypes__information) may_be_replaced_by 0.
setmessage_rules(115): audittypes__severityt__val(0) may_be_replaced_by 
     audittypes__information.
setmessage_rules(116): audittypes__severityt__pos(
     audittypes__warning) may_be_replaced_by 1.
setmessage_rules(117): audittypes__severityt__val(1) may_be_replaced_by 
     audittypes__warning.
setmessage_rules(118): audittypes__severityt__pos(
     audittypes__critical) may_be_replaced_by 2.
setmessage_rules(119): audittypes__severityt__val(2) may_be_replaced_by 
     audittypes__critical.
setmessage_rules(120): audittypes__severityt__pos(
     audittypes__severityt__last) may_be_replaced_by 2.
setmessage_rules(121): audittypes__severityt__pos(succ(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) + 1
     if [X <=audittypes__critical, X <> audittypes__critical].
setmessage_rules(122): audittypes__severityt__pos(pred(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) - 1
     if [X >=audittypes__information, X <> 
     audittypes__information].
setmessage_rules(123): audittypes__severityt__pos(X) >= 0 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
setmessage_rules(124): audittypes__severityt__pos(X) <= 2 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
setmessage_rules(125): audittypes__severityt__val(X) >= 
     audittypes__information may_be_deduced_from
     [0 <= X, X <= 2].
setmessage_rules(126): audittypes__severityt__val(X) <= 
     audittypes__critical may_be_deduced_from
     [0 <= X, X <= 2].
setmessage_rules(127): succ(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X+1)
     if [0 <= X, X < 2].
setmessage_rules(128): pred(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X-1)
     if [0 < X, X <= 2].
setmessage_rules(129): audittypes__severityt__pos(
     audittypes__severityt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 2].
setmessage_rules(130): audittypes__severityt__val(
     audittypes__severityt__pos(X)) may_be_replaced_by X
     if [audittypes__information <= X, X <= audittypes__critical].
setmessage_rules(131): audittypes__severityt__pos(X) <= 
     audittypes__severityt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__information <= X, X <= audittypes__critical, 
     audittypes__information <= Y, Y <= audittypes__critical].
setmessage_rules(132): audittypes__severityt__val(X) <= 
     audittypes__severityt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 2, 0 <= Y, Y <= 2].
setmessage_rules(133): msgtextt__size >= 0 may_be_deduced.
setmessage_rules(134): msgtextt__first may_be_replaced_by clear.
setmessage_rules(135): msgtextt__last may_be_replaced_by insertconfigdata.
setmessage_rules(136): msgtextt__base__first may_be_replaced_by clear.
setmessage_rules(137): msgtextt__base__last may_be_replaced_by insertconfigdata.
setmessage_rules(138): msgtextt__pos(msgtextt__first) may_be_replaced_by 0.
setmessage_rules(139): msgtextt__pos(clear) may_be_replaced_by 0.
setmessage_rules(140): msgtextt__val(0) may_be_replaced_by clear.
setmessage_rules(141): msgtextt__pos(welcomeadmin) may_be_replaced_by 1.
setmessage_rules(142): msgtextt__val(1) may_be_replaced_by 
     welcomeadmin.
setmessage_rules(143): msgtextt__pos(busy) may_be_replaced_by 2.
setmessage_rules(144): msgtextt__val(2) may_be_replaced_by busy.
setmessage_rules(145): msgtextt__pos(removeadmintoken) may_be_replaced_by 3.
setmessage_rules(146): msgtextt__val(3) may_be_replaced_by 
     removeadmintoken.
setmessage_rules(147): msgtextt__pos(closedoor) may_be_replaced_by 4.
setmessage_rules(148): msgtextt__val(4) may_be_replaced_by 
     closedoor.
setmessage_rules(149): msgtextt__pos(requestadminop) may_be_replaced_by 5.
setmessage_rules(150): msgtextt__val(5) may_be_replaced_by 
     requestadminop.
setmessage_rules(151): msgtextt__pos(doingop) may_be_replaced_by 6.
setmessage_rules(152): msgtextt__val(6) may_be_replaced_by 
     doingop.
setmessage_rules(153): msgtextt__pos(invalidrequest) may_be_replaced_by 7.
setmessage_rules(154): msgtextt__val(7) may_be_replaced_by 
     invalidrequest.
setmessage_rules(155): msgtextt__pos(invaliddata) may_be_replaced_by 8.
setmessage_rules(156): msgtextt__val(8) may_be_replaced_by 
     invaliddata.
setmessage_rules(157): msgtextt__pos(archivefailed) may_be_replaced_by 9.
setmessage_rules(158): msgtextt__val(9) may_be_replaced_by 
     archivefailed.
setmessage_rules(159): msgtextt__pos(insertenrolmentdata) may_be_replaced_by 10.
setmessage_rules(160): msgtextt__val(10) may_be_replaced_by 
     insertenrolmentdata.
setmessage_rules(161): msgtextt__pos(validatingenrolmentdata) may_be_replaced_by 11.
setmessage_rules(162): msgtextt__val(11) may_be_replaced_by 
     validatingenrolmentdata.
setmessage_rules(163): msgtextt__pos(enrolmentfailed) may_be_replaced_by 12.
setmessage_rules(164): msgtextt__val(12) may_be_replaced_by 
     enrolmentfailed.
setmessage_rules(165): msgtextt__pos(insertblankfloppy) may_be_replaced_by 13.
setmessage_rules(166): msgtextt__val(13) may_be_replaced_by 
     insertblankfloppy.
setmessage_rules(167): msgtextt__pos(insertconfigdata) may_be_replaced_by 14.
setmessage_rules(168): msgtextt__val(14) may_be_replaced_by 
     insertconfigdata.
setmessage_rules(169): msgtextt__pos(msgtextt__last) may_be_replaced_by 14.
setmessage_rules(170): msgtextt__pos(succ(X)) may_be_replaced_by 
     msgtextt__pos(X) + 1
     if [X <=insertconfigdata, X <> insertconfigdata].
setmessage_rules(171): msgtextt__pos(pred(X)) may_be_replaced_by 
     msgtextt__pos(X) - 1
     if [X >=clear, X <> clear].
setmessage_rules(172): msgtextt__pos(X) >= 0 may_be_deduced_from
     [clear <= X, X <= insertconfigdata].
setmessage_rules(173): msgtextt__pos(X) <= 14 may_be_deduced_from
     [clear <= X, X <= insertconfigdata].
setmessage_rules(174): msgtextt__val(X) >= clear may_be_deduced_from
     [0 <= X, X <= 14].
setmessage_rules(175): msgtextt__val(X) <= insertconfigdata may_be_deduced_from
     [0 <= X, X <= 14].
setmessage_rules(176): succ(msgtextt__val(X)) may_be_replaced_by 
     msgtextt__val(X+1)
     if [0 <= X, X < 14].
setmessage_rules(177): pred(msgtextt__val(X)) may_be_replaced_by 
     msgtextt__val(X-1)
     if [0 < X, X <= 14].
setmessage_rules(178): msgtextt__pos(msgtextt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 14].
setmessage_rules(179): msgtextt__val(msgtextt__pos(X)) may_be_replaced_by X
     if [clear <= X, X <= insertconfigdata].
setmessage_rules(180): msgtextt__pos(X) <= msgtextt__pos(Y) & X <= Y are_interchangeable 
     if [clear <= X, X <= insertconfigdata, clear <= Y, Y <= 
     insertconfigdata].
setmessage_rules(181): msgtextt__val(X) <= msgtextt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 14, 0 <= Y, Y <= 14].
