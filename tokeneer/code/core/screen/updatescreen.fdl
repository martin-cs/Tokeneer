           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:23.40}

                       {procedure Screen.UpdateScreen}


title procedure updatescreen;

  function round__(real) : integer;
  type clock__durationt = integer;
  type audittypes__elementt = (audittypes__startunenrolledtis, 
     audittypes__startenrolledtis, audittypes__enrolmentcomplete, 
     audittypes__enrolmentfailed, audittypes__displaychanged, 
     audittypes__screenchanged, audittypes__doorclosed, 
     audittypes__dooropened, audittypes__latchlocked, 
     audittypes__latchunlocked, audittypes__alarmraised, 
     audittypes__alarmsilenced, audittypes__truncatelog, 
     audittypes__auditalarmraised, audittypes__auditalarmsilenced, 
     audittypes__usertokenremoved, audittypes__usertokenpresent, 
     audittypes__usertokeninvalid, audittypes__authcertvalid, 
     audittypes__authcertinvalid, audittypes__fingerdetected, 
     audittypes__fingertimeout, audittypes__fingermatched, 
     audittypes__fingernotmatched, audittypes__authcertwritten, 
     audittypes__authcertwritefailed, audittypes__entrypermitted, 
     audittypes__entrytimeout, audittypes__entrydenied, 
     audittypes__admintokenpresent, audittypes__admintokenvalid, 
     audittypes__admintokeninvalid, audittypes__admintokenexpired, 
     audittypes__admintokenremoved, audittypes__invalidoprequest, 
     audittypes__operationstart, audittypes__archivelog, 
     audittypes__archivecomplete, audittypes__archivecheckfailed, 
     audittypes__updatedconfigdata, audittypes__invalidconfigdata, 
     audittypes__shutdown, audittypes__overridelock, 
     audittypes__systemfault);
  type audittypes__severityt = (audittypes__information, 
     audittypes__warning, audittypes__critical);
  type audittypes__filesizet = integer;
  type alarmtypes__statust = (alarmtypes__alarming, 
     alarmtypes__silent);
  type privtypes__classt = (privtypes__unmarked, 
     privtypes__unclassified, privtypes__restricted, 
     privtypes__confidential, privtypes__secret, 
     privtypes__topsecret);
  type iandatypes__fart = integer;
  type configdata__accesspolicyt = (configdata__workinghours, 
     configdata__allhours);
  type auditlog__state__type = pending;
  type door__statetype = pending;
  type admin__t = pending;
  type stats__t = pending;
  type msgtextt = (clear, welcomeadmin, busy, removeadmintoken, 
     closedoor, requestadminop, doingop, invalidrequest, 
     invaliddata, archivefailed, insertenrolmentdata, 
     validatingenrolmentdata, enrolmentfailed, insertblankfloppy, 
     insertconfigdata);
  type screenstatst = record
        isdisplayed : boolean;
        data : stats__t
     end;
  type displayedconfigt = record
        latchunlock : integer;
        alarmsilent : integer;
        fingerwait : integer;
        tokenremove : integer;
        workstart : integer;
        workend : integer;
        authduration : integer;
        policy : configdata__accesspolicyt;
        minpreservedlog : integer;
        alarmthreshold : integer;
        minentry : privtypes__classt;
        clearance : privtypes__classt;
        maxfar : integer
     end;
  type screenconfigt = record
        isdisplayed : boolean;
        data : displayedconfigt
     end;
  const msgtextt__base__first : msgtextt = pending; 
  const msgtextt__base__last : msgtextt = pending; 
  const configdata__accesspolicyt__base__first : 
     configdata__accesspolicyt = pending; 
  const configdata__accesspolicyt__base__last : 
     configdata__accesspolicyt = pending; 
  const iandatypes__fart__base__first : integer = pending; 
  const iandatypes__fart__base__last : integer = pending; 
  const privtypes__classt__base__first : privtypes__classt = pending; 
  const privtypes__classt__base__last : privtypes__classt = pending; 
  const alarmtypes__statust__base__first : alarmtypes__statust = pending; 
  const alarmtypes__statust__base__last : alarmtypes__statust = pending; 
  const audittypes__filesizet__base__first : integer = pending; 
  const audittypes__filesizet__base__last : integer = pending; 
  const audittypes__severityt__base__first : 
     audittypes__severityt = pending; 
  const audittypes__severityt__base__last : audittypes__severityt = pending; 
  const audittypes__elementt__base__first : audittypes__elementt = pending; 
  const audittypes__elementt__base__last : audittypes__elementt = pending; 
  const clock__durationt__base__first : integer = pending; 
  const clock__durationt__base__last : integer = pending; 
  const screenconfigt__size : integer = pending; 
  const displayedconfigt__size : integer = pending; 
  const screenstatst__size : integer = pending; 
  const msgtextt__first : msgtextt = pending; 
  const msgtextt__last : msgtextt = pending; 
  const msgtextt__size : integer = pending; 
  const configdata__accesspolicyt__first : 
     configdata__accesspolicyt = pending; 
  const configdata__accesspolicyt__last : 
     configdata__accesspolicyt = pending; 
  const configdata__accesspolicyt__size : integer = pending; 
  const iandatypes__fart__first : integer = pending; 
  const iandatypes__fart__last : integer = pending; 
  const iandatypes__fart__size : integer = pending; 
  const privtypes__classt__first : privtypes__classt = pending; 
  const privtypes__classt__last : privtypes__classt = pending; 
  const privtypes__classt__size : integer = pending; 
  const alarmtypes__statust__first : alarmtypes__statust = pending; 
  const alarmtypes__statust__last : alarmtypes__statust = pending; 
  const alarmtypes__statust__size : integer = pending; 
  const audittypes__filesizet__first : integer = pending; 
  const audittypes__filesizet__last : integer = pending; 
  const audittypes__filesizet__size : integer = pending; 
  const audittypes__severityt__first : audittypes__severityt = pending; 
  const audittypes__severityt__last : audittypes__severityt = pending; 
  const audittypes__severityt__size : integer = pending; 
  const audittypes__elementt__first : audittypes__elementt = pending; 
  const audittypes__elementt__last : audittypes__elementt = pending; 
  const audittypes__elementt__size : integer = pending; 
  const clock__durationt__first : integer = pending; 
  const clock__durationt__last : integer = pending; 
  const clock__durationt__size : integer = pending; 
  var auditlog__state : auditlog__state__type;
  var door__state : door__statetype;
  var theadmin : admin__t;
  var themsg : msgtextt;
  var currentmsg : msgtextt;
  var currentstats : screenstatst;
  var currentconfig : screenconfigt;
  var currentdooralarm : alarmtypes__statust;
  var currentlogalarm : alarmtypes__statust;
  var screenok : boolean;
  var writeok : boolean;
  function auditlog__theauditalarm(auditlog__state__type) : 
     alarmtypes__statust;
  function door__thedooralarm(door__statetype) : 
     alarmtypes__statust;
  function admin__ispresent(admin__t) : boolean;
  function admin__securityofficerispresent(admin__t) : boolean;
  var writeok__9 : boolean;
  var writeok__6 : boolean;
  var screenok__1 : boolean;
  var writeok__2 : boolean;
  var writeok__3 : boolean;
  var writeok__4 : boolean;
  var writeok__5 : boolean;
  var writeok__7 : boolean;
  var writeok__8 : boolean;
  var currentconfig__8 : screenconfigt;
  var currentlogalarm__3 : alarmtypes__statust;
  var currentdooralarm__3 : alarmtypes__statust;
  var currentmsg__2 : msgtextt;

end;
