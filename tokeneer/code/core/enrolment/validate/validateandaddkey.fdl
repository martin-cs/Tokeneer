           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:25.18}

               {procedure Enrolment.Validate.ValidateAndAddKey}


title procedure validateandaddkey;

  function round__(real) : integer;
  type character = integer;
  type file__t = pending;
  type cryptotypes__issueridt = integer;
  type cryptotypes__algorithmt = (cryptotypes__rsa, 
     cryptotypes__md2, cryptotypes__md5, cryptotypes__sha_1, 
     cryptotypes__ripemd128, cryptotypes__ripemd160, 
     cryptotypes__md2_rsa, cryptotypes__md5_rsa, 
     cryptotypes__sha1_rsa, cryptotypes__ripemd128_rsa, 
     cryptotypes__ripemd160_rsa);
  type cryptotypes__keyidt = integer;
  type cryptotypes__keylengtht = integer;
  type keystore__state__type = pending;
  type cert__contentst = pending;
  type string = array [integer] of character;
  const null__string : string = pending;
  type cryptotypes__keypartt = record
        algorithmid : cryptotypes__algorithmt;
        keyid : integer;
        keylength : integer
     end;
  type cert__id__contentst = record
        inherit : cert__contentst
     end;
  type cryptotypes__issuert = record
        id : integer;
        namelength : integer;
        name : string
     end;
  const certtypes__nullrawcertificate : string = pending;
  const certtypes__rawcertificatei__base__first : integer = pending; 
  const certtypes__rawcertificatei__base__last : integer = pending; 
  const cryptotypes__keylengtht__base__first : integer = pending; 
  const cryptotypes__keylengtht__base__last : integer = pending; 
  const cryptotypes__keyidt__base__first : integer = pending; 
  const cryptotypes__keyidt__base__last : integer = pending; 
  const cryptotypes__algorithmt__base__first : 
     cryptotypes__algorithmt = pending; 
  const cryptotypes__algorithmt__base__last : 
     cryptotypes__algorithmt = pending; 
  const cryptotypes__issueridt__base__first : integer = pending; 
  const cryptotypes__issueridt__base__last : integer = pending; 
  const cryptotypes__namei__base__first : integer = pending; 
  const cryptotypes__namei__base__last : integer = pending; 
  const cryptotypes__namecountt__base__first : integer = pending; 
  const cryptotypes__namecountt__base__last : integer = pending; 
  const audittypes__descriptioni__base__first : integer = pending; 
  const audittypes__descriptioni__base__last : integer = pending; 
  const positive__base__first : integer = pending; 
  const positive__base__last : integer = pending; 
  const natural__base__first : integer = pending; 
  const natural__base__last : integer = pending; 
  const character__base__first : character = pending; 
  const character__base__last : character = pending; 
  const integer__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const certtypes__rawcertificatei__first : integer = pending; 
  const certtypes__rawcertificatei__last : integer = pending; 
  const certtypes__rawcertificatei__size : integer = pending; 
  const cryptotypes__keypartt__size : integer = pending; 
  const cryptotypes__keylengtht__first : integer = pending; 
  const cryptotypes__keylengtht__last : integer = pending; 
  const cryptotypes__keylengtht__size : integer = pending; 
  const cryptotypes__keyidt__first : integer = pending; 
  const cryptotypes__keyidt__last : integer = pending; 
  const cryptotypes__keyidt__size : integer = pending; 
  const cryptotypes__algorithmt__first : cryptotypes__algorithmt = pending; 
  const cryptotypes__algorithmt__last : cryptotypes__algorithmt = pending; 
  const cryptotypes__algorithmt__size : integer = pending; 
  const cryptotypes__issuert__size : integer = pending; 
  const cryptotypes__issueridt__first : integer = pending; 
  const cryptotypes__issueridt__last : integer = pending; 
  const cryptotypes__issueridt__size : integer = pending; 
  const cryptotypes__namei__first : integer = pending; 
  const cryptotypes__namei__last : integer = pending; 
  const cryptotypes__namei__size : integer = pending; 
  const cryptotypes__namecountt__first : integer = pending; 
  const cryptotypes__namecountt__last : integer = pending; 
  const cryptotypes__namecountt__size : integer = pending; 
  const audittypes__descriptioni__first : integer = pending; 
  const audittypes__descriptioni__last : integer = pending; 
  const audittypes__descriptioni__size : integer = pending; 
  const positive__first : integer = pending; 
  const positive__last : integer = pending; 
  const positive__size : integer = pending; 
  const natural__first : integer = pending; 
  const natural__last : integer = pending; 
  const natural__size : integer = pending; 
  const character__first : character = pending; 
  const character__last : character = pending; 
  const character__size : integer = pending; 
  const integer__first : integer = pending; 
  const integer__last : integer = pending; 
  const integer__size : integer = pending; 
  var keystore__state : keystore__state__type;
  var thefile : file__t;
  var certno : integer;
  var istis : boolean;
  var thecert : string;
  var thecontents : cert__id__contentst;
  var thesubject : cryptotypes__issuert;
  var theissuer : cryptotypes__issuert;
  var thepublickey : cryptotypes__keypartt;
  var extracted : boolean;
  var addedok : boolean;
  var verifiedok : boolean;
  var stop : integer;
  function file__endoffile(file__t) : boolean;
  function keystore__privatekeypresent(keystore__state__type) : boolean;
  function cert__theissuer(cert__contentst) : 
     cryptotypes__issuert;
  function cert__id__thesubject(cert__id__contentst) : 
     cryptotypes__issuert;
  function cert__id__thepublickey(cert__id__contentst) : 
     cryptotypes__keypartt;
  function makedescription(string, integer) : string;
  var keystore__state__6 : keystore__state__type;
  var addedok__6 : boolean;
  var keystore__state__5 : keystore__state__type;
  var addedok__5 : boolean;
  var verifiedok__4 : boolean;
  var keystore__state__3 : keystore__state__type;
  var addedok__3 : boolean;
  var extracted__2 : boolean;
  var thecontents__2 : cert__id__contentst;
  var thefile__1 : file__t;
  var stop__1 : integer;
  var thecert__1 : string;

end;
