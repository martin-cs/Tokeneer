           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:24.97*/

                     /*procedure Configuration.UpdateData*/


rule_family updatedata_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

updatedata_rules(1): integer__size >= 0 may_be_deduced.
updatedata_rules(2): integer__first may_be_replaced_by -2147483648.
updatedata_rules(3): integer__last may_be_replaced_by 2147483647.
updatedata_rules(4): integer__base__first may_be_replaced_by -2147483648.
updatedata_rules(5): integer__base__last may_be_replaced_by 2147483647.
updatedata_rules(6): character__size >= 0 may_be_deduced.
updatedata_rules(7): character__first may_be_replaced_by 0.
updatedata_rules(8): character__last may_be_replaced_by 255.
updatedata_rules(9): character__base__first may_be_replaced_by 0.
updatedata_rules(10): character__base__last may_be_replaced_by 255.
updatedata_rules(11): positive__size >= 0 may_be_deduced.
updatedata_rules(12): positive__first may_be_replaced_by 1.
updatedata_rules(13): positive__last may_be_replaced_by 2147483647.
updatedata_rules(14): positive__base__first may_be_replaced_by -2147483648.
updatedata_rules(15): positive__base__last may_be_replaced_by 2147483647.
updatedata_rules(16): clock__durationt__size >= 0 may_be_deduced.
updatedata_rules(17): clock__durationt__first may_be_replaced_by 0.
updatedata_rules(18): clock__durationt__last may_be_replaced_by 864000.
updatedata_rules(19): clock__durationt__base__first <= 
     clock__durationt__base__last may_be_deduced.
updatedata_rules(20): clock__durationt__base__first <= 
     clock__durationt__first may_be_deduced.
updatedata_rules(21): clock__durationt__base__last >= 
     clock__durationt__last may_be_deduced.
updatedata_rules(22): audittypes__elementt__size >= 0 may_be_deduced.
updatedata_rules(23): audittypes__elementt__first may_be_replaced_by audittypes__startunenrolledtis.
updatedata_rules(24): audittypes__elementt__last may_be_replaced_by audittypes__systemfault.
updatedata_rules(25): audittypes__elementt__base__first may_be_replaced_by audittypes__startunenrolledtis.
updatedata_rules(26): audittypes__elementt__base__last may_be_replaced_by audittypes__systemfault.
updatedata_rules(27): audittypes__elementt__pos(
     audittypes__elementt__first) may_be_replaced_by 0.
updatedata_rules(28): audittypes__elementt__pos(
     audittypes__startunenrolledtis) may_be_replaced_by 0.
updatedata_rules(29): audittypes__elementt__val(0) may_be_replaced_by 
     audittypes__startunenrolledtis.
updatedata_rules(30): audittypes__elementt__pos(
     audittypes__startenrolledtis) may_be_replaced_by 1.
updatedata_rules(31): audittypes__elementt__val(1) may_be_replaced_by 
     audittypes__startenrolledtis.
updatedata_rules(32): audittypes__elementt__pos(
     audittypes__enrolmentcomplete) may_be_replaced_by 2.
updatedata_rules(33): audittypes__elementt__val(2) may_be_replaced_by 
     audittypes__enrolmentcomplete.
updatedata_rules(34): audittypes__elementt__pos(
     audittypes__enrolmentfailed) may_be_replaced_by 3.
updatedata_rules(35): audittypes__elementt__val(3) may_be_replaced_by 
     audittypes__enrolmentfailed.
updatedata_rules(36): audittypes__elementt__pos(
     audittypes__displaychanged) may_be_replaced_by 4.
updatedata_rules(37): audittypes__elementt__val(4) may_be_replaced_by 
     audittypes__displaychanged.
updatedata_rules(38): audittypes__elementt__pos(
     audittypes__screenchanged) may_be_replaced_by 5.
updatedata_rules(39): audittypes__elementt__val(5) may_be_replaced_by 
     audittypes__screenchanged.
updatedata_rules(40): audittypes__elementt__pos(
     audittypes__doorclosed) may_be_replaced_by 6.
updatedata_rules(41): audittypes__elementt__val(6) may_be_replaced_by 
     audittypes__doorclosed.
updatedata_rules(42): audittypes__elementt__pos(
     audittypes__dooropened) may_be_replaced_by 7.
updatedata_rules(43): audittypes__elementt__val(7) may_be_replaced_by 
     audittypes__dooropened.
updatedata_rules(44): audittypes__elementt__pos(
     audittypes__latchlocked) may_be_replaced_by 8.
updatedata_rules(45): audittypes__elementt__val(8) may_be_replaced_by 
     audittypes__latchlocked.
updatedata_rules(46): audittypes__elementt__pos(
     audittypes__latchunlocked) may_be_replaced_by 9.
updatedata_rules(47): audittypes__elementt__val(9) may_be_replaced_by 
     audittypes__latchunlocked.
updatedata_rules(48): audittypes__elementt__pos(
     audittypes__alarmraised) may_be_replaced_by 10.
updatedata_rules(49): audittypes__elementt__val(10) may_be_replaced_by 
     audittypes__alarmraised.
updatedata_rules(50): audittypes__elementt__pos(
     audittypes__alarmsilenced) may_be_replaced_by 11.
updatedata_rules(51): audittypes__elementt__val(11) may_be_replaced_by 
     audittypes__alarmsilenced.
updatedata_rules(52): audittypes__elementt__pos(
     audittypes__truncatelog) may_be_replaced_by 12.
updatedata_rules(53): audittypes__elementt__val(12) may_be_replaced_by 
     audittypes__truncatelog.
updatedata_rules(54): audittypes__elementt__pos(
     audittypes__auditalarmraised) may_be_replaced_by 13.
updatedata_rules(55): audittypes__elementt__val(13) may_be_replaced_by 
     audittypes__auditalarmraised.
updatedata_rules(56): audittypes__elementt__pos(
     audittypes__auditalarmsilenced) may_be_replaced_by 14.
updatedata_rules(57): audittypes__elementt__val(14) may_be_replaced_by 
     audittypes__auditalarmsilenced.
updatedata_rules(58): audittypes__elementt__pos(
     audittypes__usertokenremoved) may_be_replaced_by 15.
updatedata_rules(59): audittypes__elementt__val(15) may_be_replaced_by 
     audittypes__usertokenremoved.
updatedata_rules(60): audittypes__elementt__pos(
     audittypes__usertokenpresent) may_be_replaced_by 16.
updatedata_rules(61): audittypes__elementt__val(16) may_be_replaced_by 
     audittypes__usertokenpresent.
updatedata_rules(62): audittypes__elementt__pos(
     audittypes__usertokeninvalid) may_be_replaced_by 17.
updatedata_rules(63): audittypes__elementt__val(17) may_be_replaced_by 
     audittypes__usertokeninvalid.
updatedata_rules(64): audittypes__elementt__pos(
     audittypes__authcertvalid) may_be_replaced_by 18.
updatedata_rules(65): audittypes__elementt__val(18) may_be_replaced_by 
     audittypes__authcertvalid.
updatedata_rules(66): audittypes__elementt__pos(
     audittypes__authcertinvalid) may_be_replaced_by 19.
updatedata_rules(67): audittypes__elementt__val(19) may_be_replaced_by 
     audittypes__authcertinvalid.
updatedata_rules(68): audittypes__elementt__pos(
     audittypes__fingerdetected) may_be_replaced_by 20.
updatedata_rules(69): audittypes__elementt__val(20) may_be_replaced_by 
     audittypes__fingerdetected.
updatedata_rules(70): audittypes__elementt__pos(
     audittypes__fingertimeout) may_be_replaced_by 21.
updatedata_rules(71): audittypes__elementt__val(21) may_be_replaced_by 
     audittypes__fingertimeout.
updatedata_rules(72): audittypes__elementt__pos(
     audittypes__fingermatched) may_be_replaced_by 22.
updatedata_rules(73): audittypes__elementt__val(22) may_be_replaced_by 
     audittypes__fingermatched.
updatedata_rules(74): audittypes__elementt__pos(
     audittypes__fingernotmatched) may_be_replaced_by 23.
updatedata_rules(75): audittypes__elementt__val(23) may_be_replaced_by 
     audittypes__fingernotmatched.
updatedata_rules(76): audittypes__elementt__pos(
     audittypes__authcertwritten) may_be_replaced_by 24.
updatedata_rules(77): audittypes__elementt__val(24) may_be_replaced_by 
     audittypes__authcertwritten.
updatedata_rules(78): audittypes__elementt__pos(
     audittypes__authcertwritefailed) may_be_replaced_by 25.
updatedata_rules(79): audittypes__elementt__val(25) may_be_replaced_by 
     audittypes__authcertwritefailed.
updatedata_rules(80): audittypes__elementt__pos(
     audittypes__entrypermitted) may_be_replaced_by 26.
updatedata_rules(81): audittypes__elementt__val(26) may_be_replaced_by 
     audittypes__entrypermitted.
updatedata_rules(82): audittypes__elementt__pos(
     audittypes__entrytimeout) may_be_replaced_by 27.
updatedata_rules(83): audittypes__elementt__val(27) may_be_replaced_by 
     audittypes__entrytimeout.
updatedata_rules(84): audittypes__elementt__pos(
     audittypes__entrydenied) may_be_replaced_by 28.
updatedata_rules(85): audittypes__elementt__val(28) may_be_replaced_by 
     audittypes__entrydenied.
updatedata_rules(86): audittypes__elementt__pos(
     audittypes__admintokenpresent) may_be_replaced_by 29.
updatedata_rules(87): audittypes__elementt__val(29) may_be_replaced_by 
     audittypes__admintokenpresent.
updatedata_rules(88): audittypes__elementt__pos(
     audittypes__admintokenvalid) may_be_replaced_by 30.
updatedata_rules(89): audittypes__elementt__val(30) may_be_replaced_by 
     audittypes__admintokenvalid.
updatedata_rules(90): audittypes__elementt__pos(
     audittypes__admintokeninvalid) may_be_replaced_by 31.
updatedata_rules(91): audittypes__elementt__val(31) may_be_replaced_by 
     audittypes__admintokeninvalid.
updatedata_rules(92): audittypes__elementt__pos(
     audittypes__admintokenexpired) may_be_replaced_by 32.
updatedata_rules(93): audittypes__elementt__val(32) may_be_replaced_by 
     audittypes__admintokenexpired.
updatedata_rules(94): audittypes__elementt__pos(
     audittypes__admintokenremoved) may_be_replaced_by 33.
updatedata_rules(95): audittypes__elementt__val(33) may_be_replaced_by 
     audittypes__admintokenremoved.
updatedata_rules(96): audittypes__elementt__pos(
     audittypes__invalidoprequest) may_be_replaced_by 34.
updatedata_rules(97): audittypes__elementt__val(34) may_be_replaced_by 
     audittypes__invalidoprequest.
updatedata_rules(98): audittypes__elementt__pos(
     audittypes__operationstart) may_be_replaced_by 35.
updatedata_rules(99): audittypes__elementt__val(35) may_be_replaced_by 
     audittypes__operationstart.
updatedata_rules(100): audittypes__elementt__pos(
     audittypes__archivelog) may_be_replaced_by 36.
updatedata_rules(101): audittypes__elementt__val(36) may_be_replaced_by 
     audittypes__archivelog.
updatedata_rules(102): audittypes__elementt__pos(
     audittypes__archivecomplete) may_be_replaced_by 37.
updatedata_rules(103): audittypes__elementt__val(37) may_be_replaced_by 
     audittypes__archivecomplete.
updatedata_rules(104): audittypes__elementt__pos(
     audittypes__archivecheckfailed) may_be_replaced_by 38.
updatedata_rules(105): audittypes__elementt__val(38) may_be_replaced_by 
     audittypes__archivecheckfailed.
updatedata_rules(106): audittypes__elementt__pos(
     audittypes__updatedconfigdata) may_be_replaced_by 39.
updatedata_rules(107): audittypes__elementt__val(39) may_be_replaced_by 
     audittypes__updatedconfigdata.
updatedata_rules(108): audittypes__elementt__pos(
     audittypes__invalidconfigdata) may_be_replaced_by 40.
updatedata_rules(109): audittypes__elementt__val(40) may_be_replaced_by 
     audittypes__invalidconfigdata.
updatedata_rules(110): audittypes__elementt__pos(
     audittypes__shutdown) may_be_replaced_by 41.
updatedata_rules(111): audittypes__elementt__val(41) may_be_replaced_by 
     audittypes__shutdown.
updatedata_rules(112): audittypes__elementt__pos(
     audittypes__overridelock) may_be_replaced_by 42.
updatedata_rules(113): audittypes__elementt__val(42) may_be_replaced_by 
     audittypes__overridelock.
updatedata_rules(114): audittypes__elementt__pos(
     audittypes__systemfault) may_be_replaced_by 43.
updatedata_rules(115): audittypes__elementt__val(43) may_be_replaced_by 
     audittypes__systemfault.
updatedata_rules(116): audittypes__elementt__pos(
     audittypes__elementt__last) may_be_replaced_by 43.
updatedata_rules(117): audittypes__elementt__pos(succ(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) + 1
     if [X <=audittypes__systemfault, X <> 
     audittypes__systemfault].
updatedata_rules(118): audittypes__elementt__pos(pred(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) - 1
     if [X >=audittypes__startunenrolledtis, X <> 
     audittypes__startunenrolledtis].
updatedata_rules(119): audittypes__elementt__pos(X) >= 0 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
updatedata_rules(120): audittypes__elementt__pos(X) <= 43 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
updatedata_rules(121): audittypes__elementt__val(X) >= 
     audittypes__startunenrolledtis may_be_deduced_from
     [0 <= X, X <= 43].
updatedata_rules(122): audittypes__elementt__val(X) <= 
     audittypes__systemfault may_be_deduced_from
     [0 <= X, X <= 43].
updatedata_rules(123): succ(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X+1)
     if [0 <= X, X < 43].
updatedata_rules(124): pred(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X-1)
     if [0 < X, X <= 43].
updatedata_rules(125): audittypes__elementt__pos(
     audittypes__elementt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 43].
updatedata_rules(126): audittypes__elementt__val(
     audittypes__elementt__pos(X)) may_be_replaced_by X
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
updatedata_rules(127): audittypes__elementt__pos(X) <= 
     audittypes__elementt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault, audittypes__startunenrolledtis <= Y, Y <= 
     audittypes__systemfault].
updatedata_rules(128): audittypes__elementt__val(X) <= 
     audittypes__elementt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 43, 0 <= Y, Y <= 43].
updatedata_rules(129): audittypes__severityt__size >= 0 may_be_deduced.
updatedata_rules(130): audittypes__severityt__first may_be_replaced_by audittypes__information.
updatedata_rules(131): audittypes__severityt__last may_be_replaced_by audittypes__critical.
updatedata_rules(132): audittypes__severityt__base__first may_be_replaced_by audittypes__information.
updatedata_rules(133): audittypes__severityt__base__last may_be_replaced_by audittypes__critical.
updatedata_rules(134): audittypes__severityt__pos(
     audittypes__severityt__first) may_be_replaced_by 0.
updatedata_rules(135): audittypes__severityt__pos(
     audittypes__information) may_be_replaced_by 0.
updatedata_rules(136): audittypes__severityt__val(0) may_be_replaced_by 
     audittypes__information.
updatedata_rules(137): audittypes__severityt__pos(
     audittypes__warning) may_be_replaced_by 1.
updatedata_rules(138): audittypes__severityt__val(1) may_be_replaced_by 
     audittypes__warning.
updatedata_rules(139): audittypes__severityt__pos(
     audittypes__critical) may_be_replaced_by 2.
updatedata_rules(140): audittypes__severityt__val(2) may_be_replaced_by 
     audittypes__critical.
updatedata_rules(141): audittypes__severityt__pos(
     audittypes__severityt__last) may_be_replaced_by 2.
updatedata_rules(142): audittypes__severityt__pos(succ(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) + 1
     if [X <=audittypes__critical, X <> audittypes__critical].
updatedata_rules(143): audittypes__severityt__pos(pred(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) - 1
     if [X >=audittypes__information, X <> 
     audittypes__information].
updatedata_rules(144): audittypes__severityt__pos(X) >= 0 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
updatedata_rules(145): audittypes__severityt__pos(X) <= 2 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
updatedata_rules(146): audittypes__severityt__val(X) >= 
     audittypes__information may_be_deduced_from
     [0 <= X, X <= 2].
updatedata_rules(147): audittypes__severityt__val(X) <= 
     audittypes__critical may_be_deduced_from
     [0 <= X, X <= 2].
updatedata_rules(148): succ(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X+1)
     if [0 <= X, X < 2].
updatedata_rules(149): pred(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X-1)
     if [0 < X, X <= 2].
updatedata_rules(150): audittypes__severityt__pos(
     audittypes__severityt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 2].
updatedata_rules(151): audittypes__severityt__val(
     audittypes__severityt__pos(X)) may_be_replaced_by X
     if [audittypes__information <= X, X <= audittypes__critical].
updatedata_rules(152): audittypes__severityt__pos(X) <= 
     audittypes__severityt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__information <= X, X <= audittypes__critical, 
     audittypes__information <= Y, Y <= audittypes__critical].
updatedata_rules(153): audittypes__severityt__val(X) <= 
     audittypes__severityt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 2, 0 <= Y, Y <= 2].
updatedata_rules(154): audittypes__descriptioni__size >= 0 may_be_deduced.
updatedata_rules(155): audittypes__descriptioni__first may_be_replaced_by 1.
updatedata_rules(156): audittypes__descriptioni__last may_be_replaced_by 150.
updatedata_rules(157): audittypes__descriptioni__base__first may_be_replaced_by -2147483648.
updatedata_rules(158): audittypes__descriptioni__base__last may_be_replaced_by 2147483647.
updatedata_rules(159): audittypes__usertexti__size >= 0 may_be_deduced.
updatedata_rules(160): audittypes__usertexti__first may_be_replaced_by 1.
updatedata_rules(161): audittypes__usertexti__last may_be_replaced_by 50.
updatedata_rules(162): audittypes__usertexti__base__first may_be_replaced_by -2147483648.
updatedata_rules(163): audittypes__usertexti__base__last may_be_replaced_by 2147483647.
updatedata_rules(164): audittypes__filesizet__size >= 0 may_be_deduced.
updatedata_rules(165): audittypes__filesizet__first may_be_replaced_by 0.
updatedata_rules(166): audittypes__filesizet__last may_be_replaced_by 4194304.
updatedata_rules(167): audittypes__filesizet__base__first may_be_replaced_by -2147483648.
updatedata_rules(168): audittypes__filesizet__base__last may_be_replaced_by 2147483647.
updatedata_rules(169): privtypes__classt__size >= 0 may_be_deduced.
updatedata_rules(170): privtypes__classt__first may_be_replaced_by privtypes__unmarked.
updatedata_rules(171): privtypes__classt__last may_be_replaced_by privtypes__topsecret.
updatedata_rules(172): privtypes__classt__base__first may_be_replaced_by privtypes__unmarked.
updatedata_rules(173): privtypes__classt__base__last may_be_replaced_by privtypes__topsecret.
updatedata_rules(174): privtypes__classt__pos(privtypes__classt__first) may_be_replaced_by 0.
updatedata_rules(175): privtypes__classt__pos(privtypes__unmarked) may_be_replaced_by 0.
updatedata_rules(176): privtypes__classt__val(0) may_be_replaced_by 
     privtypes__unmarked.
updatedata_rules(177): privtypes__classt__pos(
     privtypes__unclassified) may_be_replaced_by 1.
updatedata_rules(178): privtypes__classt__val(1) may_be_replaced_by 
     privtypes__unclassified.
updatedata_rules(179): privtypes__classt__pos(
     privtypes__restricted) may_be_replaced_by 2.
updatedata_rules(180): privtypes__classt__val(2) may_be_replaced_by 
     privtypes__restricted.
updatedata_rules(181): privtypes__classt__pos(
     privtypes__confidential) may_be_replaced_by 3.
updatedata_rules(182): privtypes__classt__val(3) may_be_replaced_by 
     privtypes__confidential.
updatedata_rules(183): privtypes__classt__pos(privtypes__secret) may_be_replaced_by 4.
updatedata_rules(184): privtypes__classt__val(4) may_be_replaced_by 
     privtypes__secret.
updatedata_rules(185): privtypes__classt__pos(
     privtypes__topsecret) may_be_replaced_by 5.
updatedata_rules(186): privtypes__classt__val(5) may_be_replaced_by 
     privtypes__topsecret.
updatedata_rules(187): privtypes__classt__pos(privtypes__classt__last) may_be_replaced_by 5.
updatedata_rules(188): privtypes__classt__pos(succ(X)) may_be_replaced_by 
     privtypes__classt__pos(X) + 1
     if [X <=privtypes__topsecret, X <> privtypes__topsecret].
updatedata_rules(189): privtypes__classt__pos(pred(X)) may_be_replaced_by 
     privtypes__classt__pos(X) - 1
     if [X >=privtypes__unmarked, X <> privtypes__unmarked].
updatedata_rules(190): privtypes__classt__pos(X) >= 0 may_be_deduced_from
     [privtypes__unmarked <= X, X <= privtypes__topsecret].
updatedata_rules(191): privtypes__classt__pos(X) <= 5 may_be_deduced_from
     [privtypes__unmarked <= X, X <= privtypes__topsecret].
updatedata_rules(192): privtypes__classt__val(X) >= 
     privtypes__unmarked may_be_deduced_from
     [0 <= X, X <= 5].
updatedata_rules(193): privtypes__classt__val(X) <= 
     privtypes__topsecret may_be_deduced_from
     [0 <= X, X <= 5].
updatedata_rules(194): succ(privtypes__classt__val(X)) may_be_replaced_by 
     privtypes__classt__val(X+1)
     if [0 <= X, X < 5].
updatedata_rules(195): pred(privtypes__classt__val(X)) may_be_replaced_by 
     privtypes__classt__val(X-1)
     if [0 < X, X <= 5].
updatedata_rules(196): privtypes__classt__pos(privtypes__classt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 5].
updatedata_rules(197): privtypes__classt__val(privtypes__classt__pos(X)) may_be_replaced_by X
     if [privtypes__unmarked <= X, X <= privtypes__topsecret].
updatedata_rules(198): privtypes__classt__pos(X) <= 
     privtypes__classt__pos(Y) & X <= Y are_interchangeable 
     if [privtypes__unmarked <= X, X <= privtypes__topsecret, 
     privtypes__unmarked <= Y, Y <= privtypes__topsecret].
updatedata_rules(199): privtypes__classt__val(X) <= 
     privtypes__classt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 5, 0 <= Y, Y <= 5].
updatedata_rules(200): iandatypes__fart__size >= 0 may_be_deduced.
updatedata_rules(201): iandatypes__fart__size may_be_replaced_by 32.
updatedata_rules(202): iandatypes__fart__first may_be_replaced_by 0.
updatedata_rules(203): iandatypes__fart__last may_be_replaced_by 2147483647.
updatedata_rules(204): iandatypes__fart__base__first <= 
     iandatypes__fart__base__last may_be_deduced.
updatedata_rules(205): iandatypes__fart__base__first <= 
     iandatypes__fart__first may_be_deduced.
updatedata_rules(206): iandatypes__fart__base__last >= 
     iandatypes__fart__last may_be_deduced.
updatedata_rules(207): configdata__durationt__size >= 0 may_be_deduced.
updatedata_rules(208): configdata__durationt__first may_be_replaced_by 0.
updatedata_rules(209): configdata__durationt__last may_be_replaced_by 2000.
updatedata_rules(210): configdata__durationt__base__first <= 
     configdata__durationt__base__last may_be_deduced.
updatedata_rules(211): configdata__durationt__base__first <= 
     configdata__durationt__first may_be_deduced.
updatedata_rules(212): configdata__durationt__base__last >= 
     configdata__durationt__last may_be_deduced.
updatedata_rules(213): configdata__accesspolicyt__size >= 0 may_be_deduced.
updatedata_rules(214): configdata__accesspolicyt__first may_be_replaced_by configdata__workinghours.
updatedata_rules(215): configdata__accesspolicyt__last may_be_replaced_by configdata__allhours.
updatedata_rules(216): configdata__accesspolicyt__base__first may_be_replaced_by configdata__workinghours.
updatedata_rules(217): configdata__accesspolicyt__base__last may_be_replaced_by configdata__allhours.
updatedata_rules(218): configdata__accesspolicyt__pos(
     configdata__accesspolicyt__first) may_be_replaced_by 0.
updatedata_rules(219): configdata__accesspolicyt__pos(
     configdata__workinghours) may_be_replaced_by 0.
updatedata_rules(220): configdata__accesspolicyt__val(0) may_be_replaced_by 
     configdata__workinghours.
updatedata_rules(221): configdata__accesspolicyt__pos(
     configdata__allhours) may_be_replaced_by 1.
updatedata_rules(222): configdata__accesspolicyt__val(1) may_be_replaced_by 
     configdata__allhours.
updatedata_rules(223): configdata__accesspolicyt__pos(
     configdata__accesspolicyt__last) may_be_replaced_by 1.
updatedata_rules(224): configdata__accesspolicyt__pos(succ(X)) may_be_replaced_by 
     configdata__accesspolicyt__pos(X) + 1
     if [X <=configdata__allhours, X <> configdata__allhours].
updatedata_rules(225): configdata__accesspolicyt__pos(pred(X)) may_be_replaced_by 
     configdata__accesspolicyt__pos(X) - 1
     if [X >=configdata__workinghours, X <> 
     configdata__workinghours].
updatedata_rules(226): configdata__accesspolicyt__pos(X) >= 0 may_be_deduced_from
     [configdata__workinghours <= X, X <= configdata__allhours].
updatedata_rules(227): configdata__accesspolicyt__pos(X) <= 1 may_be_deduced_from
     [configdata__workinghours <= X, X <= configdata__allhours].
updatedata_rules(228): configdata__accesspolicyt__val(X) >= 
     configdata__workinghours may_be_deduced_from
     [0 <= X, X <= 1].
updatedata_rules(229): configdata__accesspolicyt__val(X) <= 
     configdata__allhours may_be_deduced_from
     [0 <= X, X <= 1].
updatedata_rules(230): succ(configdata__accesspolicyt__val(X)) may_be_replaced_by 
     configdata__accesspolicyt__val(X+1)
     if [0 <= X, X < 1].
updatedata_rules(231): pred(configdata__accesspolicyt__val(X)) may_be_replaced_by 
     configdata__accesspolicyt__val(X-1)
     if [0 < X, X <= 1].
updatedata_rules(232): configdata__accesspolicyt__pos(
     configdata__accesspolicyt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 1].
updatedata_rules(233): configdata__accesspolicyt__val(
     configdata__accesspolicyt__pos(X)) may_be_replaced_by X
     if [configdata__workinghours <= X, X <= configdata__allhours].
updatedata_rules(234): configdata__accesspolicyt__pos(X) <= 
     configdata__accesspolicyt__pos(Y) & X <= Y are_interchangeable 
     if [configdata__workinghours <= X, X <= configdata__allhours, 
     configdata__workinghours <= Y, Y <= configdata__allhours].
updatedata_rules(235): configdata__accesspolicyt__val(X) <= 
     configdata__accesspolicyt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 1, 0 <= Y, Y <= 1].
