           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:08.45

       procedure AuditLog.AddElementToLogFile.AddElementToCurrentFile




For path(s) from start to run-time check associated with statement of line 781:

procedure_addelementtocurrentfile_1.
H1:    element(logfileentries, [currentlogfile]) < 
           maxlogfileentries .
H2:    elementid >= audittypes__elementt__first .
H3:    elementid <= audittypes__elementt__last .
H4:    severity >= audittypes__severityt__first .
H5:    severity <= audittypes__severityt__last .
H6:    for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(user, [
           i___1]) >= character__first) and (element(user, [
           i___1]) <= character__last))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           description, [i___1]) >= character__first) and (element(
           description, [i___1]) <= character__last))) .
H8:    currentlogfile >= logfileindext__first .
H9:    currentlogfile <= logfileindext__last .
H10:   true .
H11:   true .
H12:   for_all(i___1: logfilecountt, ((i___1 >= 
           logfileindext__first) and (i___1 <= 
           logfileindext__last)) -> ((element(
           logfileentries, [i___1]) >= fileentrycountt__first) and (element(
           logfileentries, [i___1]) <= fileentrycountt__last))) .
        ->
C1:    currentlogfile >= logfileindext__first .
C2:    currentlogfile <= logfileindext__last .
 

For path(s) from start to run-time check associated with statement of line 782:

procedure_addelementtocurrentfile_2.
H1:    element(logfileentries, [currentlogfile]) < 
           maxlogfileentries .
H2:    elementid >= audittypes__elementt__first .
H3:    elementid <= audittypes__elementt__last .
H4:    severity >= audittypes__severityt__first .
H5:    severity <= audittypes__severityt__last .
H6:    for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(user, [
           i___1]) >= character__first) and (element(user, [
           i___1]) <= character__last))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           description, [i___1]) >= character__first) and (element(
           description, [i___1]) <= character__last))) .
H8:    currentlogfile >= logfileindext__first .
H9:    currentlogfile <= logfileindext__last .
H10:   true .
H11:   true .
H12:   for_all(i___1: logfilecountt, ((i___1 >= 
           logfileindext__first) and (i___1 <= 
           logfileindext__last)) -> ((element(
           logfileentries, [i___1]) >= fileentrycountt__first) and (element(
           logfileentries, [i___1]) <= fileentrycountt__last))) .
H13:   currentlogfile >= logfileindext__first .
H14:   currentlogfile <= logfileindext__last .
H15:   true .
        ->
C1:    severity >= audittypes__severityt__first .
C2:    severity <= audittypes__severityt__last .
C3:    elementid >= audittypes__elementt__first .
C4:    elementid <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 788:

procedure_addelementtocurrentfile_3.
H1:    element(logfileentries, [currentlogfile]) < 
           maxlogfileentries .
H2:    elementid >= audittypes__elementt__first .
H3:    elementid <= audittypes__elementt__last .
H4:    severity >= audittypes__severityt__first .
H5:    severity <= audittypes__severityt__last .
H6:    for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(user, [
           i___1]) >= character__first) and (element(user, [
           i___1]) <= character__last))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           description, [i___1]) >= character__first) and (element(
           description, [i___1]) <= character__last))) .
H8:    currentlogfile >= logfileindext__first .
H9:    currentlogfile <= logfileindext__last .
H10:   true .
H11:   true .
H12:   for_all(i___1: logfilecountt, ((i___1 >= 
           logfileindext__first) and (i___1 <= 
           logfileindext__last)) -> ((element(
           logfileentries, [i___1]) >= fileentrycountt__first) and (element(
           logfileentries, [i___1]) <= fileentrycountt__last))) .
H13:   currentlogfile >= logfileindext__first .
H14:   currentlogfile <= logfileindext__last .
H15:   true .
H16:   severity >= audittypes__severityt__first .
H17:   severity <= audittypes__severityt__last .
H18:   elementid >= audittypes__elementt__first .
H19:   elementid <= audittypes__elementt__last .
H20:   true .
H21:   true .
        ->
C1:    currentlogfile >= logfileindext__first .
C2:    currentlogfile <= logfileindext__last .
 

For path(s) from start to run-time check associated with statement of line 790:

procedure_addelementtocurrentfile_4.
H1:    element(logfileentries, [currentlogfile]) < 
           maxlogfileentries .
H2:    elementid >= audittypes__elementt__first .
H3:    elementid <= audittypes__elementt__last .
H4:    severity >= audittypes__severityt__first .
H5:    severity <= audittypes__severityt__last .
H6:    for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(user, [
           i___1]) >= character__first) and (element(user, [
           i___1]) <= character__last))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           description, [i___1]) >= character__first) and (element(
           description, [i___1]) <= character__last))) .
H8:    currentlogfile >= logfileindext__first .
H9:    currentlogfile <= logfileindext__last .
H10:   true .
H11:   true .
H12:   for_all(i___1: logfilecountt, ((i___1 >= 
           logfileindext__first) and (i___1 <= 
           logfileindext__last)) -> ((element(
           logfileentries, [i___1]) >= fileentrycountt__first) and (element(
           logfileentries, [i___1]) <= fileentrycountt__last))) .
H13:   currentlogfile >= logfileindext__first .
H14:   currentlogfile <= logfileindext__last .
H15:   true .
H16:   severity >= audittypes__severityt__first .
H17:   severity <= audittypes__severityt__last .
H18:   elementid >= audittypes__elementt__first .
H19:   elementid <= audittypes__elementt__last .
H20:   true .
H21:   true .
H22:   currentlogfile >= logfileindext__first .
H23:   currentlogfile <= logfileindext__last .
        ->
C1:    element(logfileentries, [currentlogfile]) + 1 >= 
           fileentrycountt__first .
C2:    element(logfileentries, [currentlogfile]) + 1 <= 
           fileentrycountt__last .
C3:    currentlogfile >= logfileindext__first .
C4:    currentlogfile <= logfileindext__last .
C5:    currentlogfile >= logfileindext__first .
C6:    currentlogfile <= logfileindext__last .
 

For path(s) from start to finish:

procedure_addelementtocurrentfile_5.
H1:    element(logfileentries, [currentlogfile]) < 
           maxlogfileentries .
H2:    elementid >= audittypes__elementt__first .
H3:    elementid <= audittypes__elementt__last .
H4:    severity >= audittypes__severityt__first .
H5:    severity <= audittypes__severityt__last .
H6:    for_all(i___1: integer, ((i___1 >= 
           audittypes__usertexti__first) and (i___1 <= 
           audittypes__usertexti__last)) -> ((element(user, [
           i___1]) >= character__first) and (element(user, [
           i___1]) <= character__last))) .
H7:    for_all(i___1: integer, ((i___1 >= 
           audittypes__descriptioni__first) and (i___1 <= 
           audittypes__descriptioni__last)) -> ((element(
           description, [i___1]) >= character__first) and (element(
           description, [i___1]) <= character__last))) .
H8:    currentlogfile >= logfileindext__first .
H9:    currentlogfile <= logfileindext__last .
H10:   true .
H11:   true .
H12:   for_all(i___1: logfilecountt, ((i___1 >= 
           logfileindext__first) and (i___1 <= 
           logfileindext__last)) -> ((element(
           logfileentries, [i___1]) >= fileentrycountt__first) and (element(
           logfileentries, [i___1]) <= fileentrycountt__last))) .
H13:   currentlogfile >= logfileindext__first .
H14:   currentlogfile <= logfileindext__last .
H15:   true .
H16:   severity >= audittypes__severityt__first .
H17:   severity <= audittypes__severityt__last .
H18:   elementid >= audittypes__elementt__first .
H19:   elementid <= audittypes__elementt__last .
H20:   true .
H21:   true .
H22:   currentlogfile >= logfileindext__first .
H23:   currentlogfile <= logfileindext__last .
H24:   element(logfileentries, [currentlogfile]) + 1 >= 
           fileentrycountt__first .
H25:   element(logfileentries, [currentlogfile]) + 1 <= 
           fileentrycountt__last .
H26:   currentlogfile >= logfileindext__first .
H27:   currentlogfile <= logfileindext__last .
H28:   currentlogfile >= logfileindext__first .
H29:   currentlogfile <= logfileindext__last .
        ->
C1:    element(update(logfileentries, [currentlogfile], element(
           logfileentries, [currentlogfile]) + 1), [
           currentlogfile]) = element(logfileentries, [
           currentlogfile]) + 1 .
 

