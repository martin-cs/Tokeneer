*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:08  SIMPLIFIED 05-SEP-2011, 15:38:48

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure AuditLog.GetStartAndEndTimeFromFile






@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_1.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          clock__printtime(clock__zerotime), [i___1]) and element(
          clock__printtime(clock__zerotime), [i___1]) <= character__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H3).
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          firsttime__2, [i___1]) and element(firsttime__2, [i___1]) <= 
          character__last)
***  Proved C1:  timecount__2 >= natural__first
     using hypothesis H12.
***  Proved C2:  timecount__2 <= natural__last
     using hypothesis H13.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_2.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          clock__printtime(clock__zerotime), [i___1]) and element(
          clock__printtime(clock__zerotime), [i___1]) <= character__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H3).
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          firsttime__2, [i___1]) and element(firsttime__2, [i___1]) <= 
          character__last)
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H13).
-S-  Applied substitution rule getstartande_rules(18).
     This was achieved by replacing all occurrences of positive__first by:
          1.
<S>  New C1:  maxlogfileentries >= 2
-S-  Applied substitution rule getstartande_rules(1).
     This was achieved by replacing all occurrences of maxlogfileentries by:
          1024.
<S>  New C2:  1023 <= positive__last
<S>  New C3:  1023 >= integer__base__first
<S>  New C4:  1023 <= integer__base__last
<S>  New C1:  true
-S-  Applied substitution rule getstartande_rules(19).
     This was achieved by replacing all occurrences of positive__last by:
          2147483647.
<S>  New C2:  true
-S-  Applied substitution rule getstartande_rules(5).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New C3:  true
-S-  Applied substitution rule getstartande_rules(6).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_3.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          clock__printtime(clock__zerotime), [i___1]) and element(
          clock__printtime(clock__zerotime), [i___1]) <= character__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H3).
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          firsttime__2, [i___1]) and element(firsttime__2, [i___1]) <= 
          character__last)
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H13).
-S-  Applied substitution rule getstartande_rules(18).
     This was achieved by replacing all occurrences of positive__first by:
          1.
<S>  New C1:  maxlogfileentries >= 2
-S-  Applied substitution rule getstartande_rules(1).
     This was achieved by replacing all occurrences of maxlogfileentries by:
          1024.
<S>  New C2:  1023 <= positive__last
<S>  New C3:  1023 >= integer__base__first
<S>  New C4:  1023 <= integer__base__last
<S>  New C1:  true
-S-  Applied substitution rule getstartande_rules(19).
     This was achieved by replacing all occurrences of positive__last by:
          2147483647.
<S>  New C2:  true
-S-  Applied substitution rule getstartande_rules(5).
     This was achieved by replacing all occurrences of integer__base__first by:
          - 2147483648.
<S>  New C3:  true
-S-  Applied substitution rule getstartande_rules(6).
     This was achieved by replacing all occurrences of integer__base__last by:
          2147483647.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_4.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          clock__printtime(clock__zerotime), [i___1]) and element(
          clock__printtime(clock__zerotime), [i___1]) <= character__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H3).
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          firsttime__2, [i___1]) and element(firsttime__2, [i___1]) <= 
          character__last)
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H13).
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          lasttime__4, [i___1]) and element(lasttime__4, [i___1]) <= 
          character__last)
***  Proved C1:  timecount__4 >= natural__first
     using hypothesis H25.
***  Proved C2:  timecount__4 <= natural__last
     using hypothesis H26.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_5.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          clock__printtime(clock__zerotime), [i___1]) and element(
          clock__printtime(clock__zerotime), [i___1]) <= character__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H3).
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          firsttime__2, [i___1]) and element(firsttime__2, [i___1]) <= 
          character__last)
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H13).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H13).
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___1 : integer, clock__timetexti__first <= i___1 and 
          i___1 <= clock__timetexti__last -> character__first <= element(
          lasttime__4, [i___1]) and element(lasttime__4, [i___1]) <= 
          character__last)
***  Proved C1:  timecount__4 >= natural__first
     using hypothesis H25.
***  Proved C2:  timecount__4 <= natural__last
     using hypothesis H26.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_6.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_7.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_8.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_9.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_10.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_getstartandendtimefromfile_11.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.

