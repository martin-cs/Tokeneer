*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:10  SIMPLIFIED 05-SEP-2011, 15:38:45

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure AuditLog.CancelArchive






@@@@@@@@@@  VC: procedure_cancelarchive_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  true
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  true
***  Proved C1:  true
***  Proved C3:  for_all(i___1 : integer, logfileindext__first <= i___1 and 
          i___1 <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
     using hypothesis H2.
***  Proved C4:  true
***  Proved C6:  true
-S-  Applied substitution rule cancelarchiv_rules(8).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          logfileindext__last -> filestatust__first <= element(logfilesstatus, [
          i___1]) and element(logfilesstatus, [i___1]) <= filestatust__last)
<S>  New C2:  1 <= logfileindext__last
<S>  New C5:  1 <= logfileindext__last
<S>  New C7:  1 <= logfileindext__last
-S-  Applied substitution rule cancelarchiv_rules(9).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 
          filestatust__first <= element(logfilesstatus, [i___1]) and element(
          logfilesstatus, [i___1]) <= filestatust__last)
<S>  New C2:  true
<S>  New C5:  true
<S>  New C7:  true
***  Proved C2:  true
***  Proved C5:  true
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_2.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H5 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H6 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H7 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H8 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H2).
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  filestatust__first <= used
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(update(
          logfilesstatus, [loop__1__i], used), [i___1]) and element(update(
          logfilesstatus, [loop__1__i], used), [i___1]) <= filestatust__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  for_all(i___1 : integer, logfileindext__first <= i___1 and 
          i___1 <= logfileindext__last -> filestatust__first <= element(update(
          logfilesstatus, [loop__1__i], used), [i___1]) and element(update(
          logfilesstatus, [loop__1__i], used), [i___1]) <= filestatust__last)
     using hypotheses H1, H2, H3, H11 & H12.
***  Proved C4:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C6:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule cancelarchiv_rules(9).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= 17 -> filestatust__first <= element(logfilesstatus, [i___1]) and 
          element(logfilesstatus, [i___1]) <= filestatust__last)
<S>  New H15:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C5:  loop__1__i <= 16
<S>  New C7:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H15.
***  Proved C5:  loop__1__i <= 16
     using hypotheses H2 & H15.
***  Proved C7:  loop__1__i <= 16
     using hypotheses H2 & H15.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_3.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H5 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H6 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H7 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H8 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H2).
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  for_all(i___1 : integer, logfileindext__first <= i___1 and 
          i___1 <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
     using hypothesis H3.
***  Proved C4:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C6:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule cancelarchiv_rules(9).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= 17 -> filestatust__first <= element(logfilesstatus, [i___1]) and 
          element(logfilesstatus, [i___1]) <= filestatust__last)
<S>  New H11:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C5:  loop__1__i <= 16
<S>  New C7:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H11.
***  Proved C5:  loop__1__i <= 16
     using hypotheses H2 & H11.
***  Proved C7:  loop__1__i <= 16
     using hypotheses H2 & H11.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_4.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H5 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H6 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H7 has been replaced by "true".  (It is already present, as H2).
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_5.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus, [i___1]) and element(logfilesstatus, [i___1]) <= 
          filestatust__last)
---  Hypothesis H4 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H5 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H6 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H7 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H8 has been replaced by "true".  (It is already present, as H1).
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H2).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  filestatust__first <= used
***  Proved C3:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C4:  loop__1__i <= logfileindext__last
     using hypothesis H2.
-S-  Applied substitution rule cancelarchiv_rules(14).
     This was achieved by replacing all occurrences of filestatust__first by:
          free.
<S>  New H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> free <= element(logfilesstatus, [i___1]) 
          and element(logfilesstatus, [i___1]) <= filestatust__last)
<S>  New C1:  true
-S-  Applied substitution rule cancelarchiv_rules(15).
     This was achieved by replacing all occurrences of filestatust__last by:
          used.
<S>  New H3:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> free <= element(logfilesstatus, [i___1]) 
          and element(logfilesstatus, [i___1]) <= used)
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_6.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_7.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_8.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_cancelarchive_9.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.

