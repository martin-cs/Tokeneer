           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:08.99

           procedure AuditLog.Init.SetFileDetails.GetFileDetails




For path(s) from start to run-time check associated with statement of line 1178:

procedure_getfiledetails_1.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
        ->
C1:    0 >= fileentrycountt__first .
C2:    0 <= fileentrycountt__last .
 

For path(s) from start to run-time check associated with statement of line 1180:

procedure_getfiledetails_2.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
        ->
C1:    i >= logfileindext__first .
C2:    i <= logfileindext__last .
 

For path(s) from start to run-time check associated with statement of line 1181:

procedure_getfiledetails_3.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
        ->
C1:    i >= logfileindext__first .
C2:    i <= logfileindext__last .
 

For path(s) from start to run-time check associated with statement of line 1190:

procedure_getfiledetails_4.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
H11:   i >= logfileindext__first .
H12:   i <= logfileindext__last .
H13:   true .
H14:   file__exists(fileh__1) .
H15:   true .
H16:   true .
H17:   ok__2 .
H18:   true .
H19:   file__endoffile(fileh__2) .
        ->
C1:    free >= filestatust__first .
C2:    free <= filestatust__last .
 

For path(s) from start to run-time check associated with statement of line 1192:

procedure_getfiledetails_5.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
H11:   i >= logfileindext__first .
H12:   i <= logfileindext__last .
H13:   true .
H14:   file__exists(fileh__1) .
H15:   true .
H16:   true .
H17:   ok__2 .
H18:   true .
H19:   not (file__endoffile(fileh__2)) .
        ->
C1:    used >= filestatust__first .
C2:    used <= filestatust__last .
 

For path(s) from start to run-time check associated with statement of line 1194:

procedure_getfiledetails_6.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
H11:   i >= logfileindext__first .
H12:   i <= logfileindext__last .
H13:   true .
H14:   file__exists(fileh__1) .
H15:   true .
H16:   true .
H17:   ok__2 .
H18:   true .
H19:   not (file__endoffile(fileh__2)) .
H20:   used >= filestatust__first .
H21:   used <= filestatust__last .
H22:   for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(firsttime__3, [
           i___1]) >= character__first) and (element(firsttime__3, [
           i___1]) <= character__last))) .
H23:   timecount__3 >= natural__first .
H24:   timecount__3 <= natural__last .
        ->
C1:    timecount__3 >= natural__first .
C2:    timecount__3 <= natural__last .
 

For path(s) from start to assertion of line 1203:

procedure_getfiledetails_7.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
H11:   i >= logfileindext__first .
H12:   i <= logfileindext__last .
H13:   true .
H14:   file__exists(fileh__1) .
H15:   true .
H16:   true .
H17:   ok__2 .
H18:   true .
H19:   not (file__endoffile(fileh__2)) .
H20:   used >= filestatust__first .
H21:   used <= filestatust__last .
H22:   for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(firsttime__3, [
           i___1]) >= character__first) and (element(firsttime__3, [
           i___1]) <= character__last))) .
H23:   timecount__3 >= natural__first .
H24:   timecount__3 <= natural__last .
H25:   timecount__3 >= natural__first .
H26:   timecount__3 <= natural__last .
H27:   timecount__3 >= natural__first .
H28:   timecount__3 <= natural__last .
H29:   timecount__3 <> clock__timetexti__last .
H30:   true .
H31:   not (file__endoffile(fileh__3)) .
        ->
C1:    0 >= 0 .
C2:    0 < maxlogfileentries .
C3:    i >= logfileindext__first .
C4:    i <= logfileindext__last .
C5:    true .
C6:    true .
 

procedure_getfiledetails_8.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
H11:   i >= logfileindext__first .
H12:   i <= logfileindext__last .
H13:   true .
H14:   file__exists(fileh__1) .
H15:   true .
H16:   true .
H17:   ok__2 .
H18:   true .
H19:   not (file__endoffile(fileh__2)) .
H20:   used >= filestatust__first .
H21:   used <= filestatust__last .
H22:   for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(firsttime__3, [
           i___1]) >= character__first) and (element(firsttime__3, [
           i___1]) <= character__last))) .
H23:   timecount__3 >= natural__first .
H24:   timecount__3 <= natural__last .
H25:   timecount__3 >= natural__first .
H26:   timecount__3 <= natural__last .
H27:   timecount__3 >= natural__first .
H28:   timecount__3 <= natural__last .
H29:   not (timecount__3 <> clock__timetexti__last) .
H30:   true .
H31:   not (file__endoffile(fileh__3)) .
        ->
C1:    0 >= 0 .
C2:    0 < maxlogfileentries .
C3:    i >= logfileindext__first .
C4:    i <= logfileindext__last .
C5:    true .
C6:    true .
 

For path(s) from assertion of line 1203 to assertion of line 1203:

procedure_getfiledetails_9.
H1:    numberentries >= 0 .
H2:    numberentries < maxlogfileentries .
H3:    i >= logfileindext__first .
H4:    i <= logfileindext__last .
H5:    true .
H6:    true .
H7:    1 >= positive__first .
H8:    1 <= positive__last .
H9:    numberentries + 1 >= fileentrycountt__first .
H10:   numberentries + 1 <= fileentrycountt__last .
H11:   not (numberentries + 1 = maxlogfileentries) .
H12:   true .
H13:   not (file__endoffile(fileh__4)) .
        ->
C1:    numberentries + 1 >= 0 .
C2:    numberentries + 1 < maxlogfileentries .
C3:    i >= logfileindext__first .
C4:    i <= logfileindext__last .
C5:    true .
C6:    true .
 

For path(s) from assertion of line 1203 to run-time check associated with statement of line 1205:

procedure_getfiledetails_10.
H1:    numberentries >= 0 .
H2:    numberentries < maxlogfileentries .
H3:    i >= logfileindext__first .
H4:    i <= logfileindext__last .
H5:    true .
H6:    true .
        ->
C1:    1 >= positive__first .
C2:    1 <= positive__last .
 

For path(s) from assertion of line 1203 to run-time check associated with statement of line 1206:

procedure_getfiledetails_11.
H1:    numberentries >= 0 .
H2:    numberentries < maxlogfileentries .
H3:    i >= logfileindext__first .
H4:    i <= logfileindext__last .
H5:    true .
H6:    true .
H7:    1 >= positive__first .
H8:    1 <= positive__last .
        ->
C1:    numberentries + 1 >= fileentrycountt__first .
C2:    numberentries + 1 <= fileentrycountt__last .
 

For path(s) from start to run-time check associated with statement of line 1212:

procedure_getfiledetails_12.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
H11:   i >= logfileindext__first .
H12:   i <= logfileindext__last .
H13:   true .
H14:   file__exists(fileh__1) .
H15:   true .
H16:   true .
H17:   not ok__2 .
        ->
C1:    used >= filestatust__first .
C2:    used <= filestatust__last .
 

For path(s) from start to run-time check associated with statement of line 1225:

procedure_getfiledetails_13.
H1:    true .
H2:    i >= logfileindext__first .
H3:    i <= logfileindext__last .
H4:    true .
H5:    true .
H6:    0 >= fileentrycountt__first .
H7:    0 <= fileentrycountt__last .
H8:    for_all(i___1: integer, ((i___1 >= clock__timetexti__first) and (
           i___1 <= clock__timetexti__last)) -> ((element(
           clock__printtime(clock__zerotime), [i___1]) >= 
           character__first) and (element(clock__printtime(
           clock__zerotime), [i___1]) <= character__last))) .
H9:    i >= logfileindext__first .
H10:   i <= logfileindext__last .
H11:   i >= logfileindext__first .
H12:   i <= logfileindext__last .
H13:   true .
H14:   not (file__exists(fileh__1)) .
        ->
C1:    free >= filestatust__first .
C2:    free <= filestatust__last .
 

For path(s) from start to finish:

procedure_getfiledetails_14.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_15.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_16.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_17.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_18.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_19.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_20.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_21.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_22.
*** true .          /* trivially true VC removed by Examiner */


For path(s) from assertion of line 1203 to finish:

procedure_getfiledetails_23.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_24.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_25.
*** true .          /* trivially true VC removed by Examiner */


procedure_getfiledetails_26.
*** true .          /* trivially true VC removed by Examiner */


