*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:09  SIMPLIFIED 05-SEP-2011, 15:38:50

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure AuditLog.Init






@@@@@@@@@@  VC: procedure_init_1.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> filestatust__first <= element(
          logfilesstatus__2, [i___1]) and element(logfilesstatus__2, [i___1]) 
          <= filestatust__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___1 : integer, logfileindext__first <= i___1 and i___1 
          <= logfileindext__last -> fileentrycountt__first <= element(
          logfileentries__2, [i___1]) and element(logfileentries__2, [i___1]) 
          <= fileentrycountt__last)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages__2, [i___1]), [i___2]) 
          and element(element(fileages__2, [i___1]), [i___2]) <= 
          character__last))
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries__2, [n_]) and element(logfileentries__2, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          emptylist), [n_]) and element(fld_list(emptylist), [n_]) <= 
          logfileindext__last)
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  true
%%%  Simplified C14 on reading formula in, to give:
     %%%  C14:  true
***  Proved C1:  true
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries__2, [n_]) and element(logfileentries__2, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H8.
***  Proved C11:  true
***  Proved C12:  true
***  Proved C14:  true
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          logfileindext__last -> filestatust__first <= element(
          logfilesstatus__2, [i___1]) and element(logfilesstatus__2, [i___1]) 
          <= filestatust__last)
<S>  New H8:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries__2, [i___1]) and element(logfileentries__2, [i___1]) 
          <= fileentrycountt__last)
<S>  New H9:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 1 <= 
          i___1 and i___1 <= logfileindext__last -> character__first <= element(
          element(fileages__2, [i___1]), [i___2]) and element(element(
          fileages__2, [i___1]), [i___2]) <= character__last))
<S>  New C2:  1 <= logfileindext__last
<S>  New C5:  fld_length(emptylist) < 1
<S>  New C6:  fld_lasti(emptylist) >= 1
<S>  New C8:  fld_length(emptylist) > 0 -> fld_lasti(emptylist) < 1
<S>  New C10:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(emptylist), [n_]) and element(fld_list(emptylist)
          , [n_]) <= logfileindext__last)
<S>  New C13:  1 <= logfileindext__last
<S>  New C15:  1 <= logfileindext__last
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 
          filestatust__first <= element(logfilesstatus__2, [i___1]) and element(
          logfilesstatus__2, [i___1]) <= filestatust__last)
<S>  New H8:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 
          fileentrycountt__first <= element(logfileentries__2, [i___1]) and 
          element(logfileentries__2, [i___1]) <= fileentrycountt__last)
<S>  New H9:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 1 <= 
          i___1 and i___1 <= 17 -> character__first <= element(element(
          fileages__2, [i___1]), [i___2]) and element(element(fileages__2, [
          i___1]), [i___2]) <= character__last))
<S>  New C7:  fld_lasti(emptylist) <= 17
<S>  New C2:  true
<S>  New C10:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(emptylist), [n_]) and element(fld_list(emptylist), [n_]) <= 
          17)
<S>  New C13:  true
<S>  New C15:  true
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New C3:  fld_length(emptylist) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New C4:  fld_length(emptylist) <= 17
***  Proved C2:  true
***  Proved C13:  true
***  Proved C15:  true
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H9:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 1 <= 
          i___1 and i___1 <= 17 -> 0 <= element(element(fileages__2, [i___1]), [
          i___2]) and element(element(fileages__2, [i___1]), [i___2]) <= 
          character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H9:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 1 <= 
          i___1 and i___1 <= 17 -> 0 <= element(element(fileages__2, [i___1]), [
          i___2]) and element(element(fileages__2, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H9:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 1 <= i___1 and 
          i___1 <= 17 -> 0 <= element(element(fileages__2, [i___1]), [i___2]) 
          and element(element(fileages__2, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H9:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages__2, [i___1]), [i___2]) and element(element(fileages__2, [
          i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(67).
     This was achieved by replacing all occurrences of filestatust__first by:
          free.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 17 -> free <= 
          element(logfilesstatus__2, [i___1]) and element(logfilesstatus__2, [
          i___1]) <= filestatust__last)
-S-  Applied substitution rule init_rules(68).
     This was achieved by replacing all occurrences of filestatust__last by:
          used.
<S>  New H7:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 17 -> free <= 
          element(logfilesstatus__2, [i___1]) and element(logfilesstatus__2, [
          i___1]) <= used)
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H8:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= 
          element(logfileentries__2, [i___1]) and element(logfileentries__2, [
          i___1]) <= fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H8:  for_all(i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= 
          element(logfileentries__2, [i___1]) and element(logfileentries__2, [
          i___1]) <= 1024)
-S-  Applied substitution rule init_rules(9).
     This was achieved by replacing all occurrences of emptylist by:
          mk__logfilelistt(list := mk__logfilelistentriest(1), head := 17, 
          lasti := 1, length := 0).
<S>  New C5:  true
<S>  New C6:  true
<S>  New C8:  true
<S>  New C7:  true
<S>  New C10:  true
<S>  New C3:  true
<S>  New C4:  true
***  Proved C5:  true
***  Proved C6:  true
***  Proved C8:  true
***  Proved C7:  true
***  Proved C10:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_2.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  true
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H21).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H28 on reading formula in, to give:
     %%%  H28:  true
%%%  Simplified H29 on reading formula in, to give:
     %%%  H29:  logfileindext__first <= logfileindext__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  1 >= logfilecountt__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  1 <= logfilecountt__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  loop__1__i > 0
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  true
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  logfileindext__first <= logfileindext__last
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  logfileindext__first < loop__1__i + 1
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [logfileindext__first], loop__1__i), [n_]) 
          and element(update(fld_list(usedlogfiles), [logfileindext__first], 
          loop__1__i), [n_]) <= logfileindext__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  1 >= logfilecountt__first
     using hypothesis H24.
***  Proved C4:  1 <= logfilecountt__last
     using hypothesis H25.
***  Proved C5:  loop__1__i > 0
     using hypotheses H5 & H19.
***  Proved C6:  true
***  Proved C7:  logfileindext__first <= logfileindext__last
     using hypothesis H21.
***  Proved C8:  logfileindext__first < loop__1__i + 1
     using hypothesis H1.
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H9.
***  Proved C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [logfileindext__first], loop__1__i), [n_]) 
          and element(update(fld_list(usedlogfiles), [logfileindext__first], 
          loop__1__i), [n_]) <= logfileindext__last)
     using hypotheses H1, H2, H10 & H21.
***  Proved C11:  true
***  Proved C12:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C14:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H21:  logfileindext__first <= 17
<S>  New H29:  logfileindext__first <= 17
<S>  New H30:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C13:  loop__1__i <= 16
<S>  New C15:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H30.
***  Proved C13:  loop__1__i <= 16
     using hypotheses H2 & H30.
***  Proved C15:  loop__1__i <= 16
     using hypotheses H2 & H30.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_3.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H3.
***  Proved C4:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H4.
***  Proved C5:  fld_length(usedlogfiles) < loop__1__i + 1
     using hypothesis H5.
***  Proved C6:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C7:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H9.
***  Proved C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H10.
***  Proved C11:  true
***  Proved C12:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C14:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H24:  1 <= fld_lasti(usedlogfiles) -> fld_lasti(usedlogfiles) >= 
          logfileindext__first and fld_lasti(usedlogfiles) <= 17
<S>  New H25:  1 <= fld_lasti(usedlogfiles) -> 1 >= logfileindext__first
<S>  New H27:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C13:  loop__1__i <= 16
<S>  New C15:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H27.
***  Proved C13:  loop__1__i <= 16
     using hypotheses H2 & H27.
***  Proved C15:  loop__1__i <= 16
     using hypotheses H2 & H27.
>>>  Restructured hypothesis H19 into:
     >>>  H19:  fld_length(usedlogfiles) <> 0
>>>  Restructured hypothesis H26 into:
     >>>  H26:  fld_lasti(usedlogfiles) < 1
>>>  Restructured hypothesis H27 into:
     >>>  H27:  loop__1__i <> 17
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H3:  fld_length(usedlogfiles) >= 0
<S>  New H20:  fld_lasti(usedlogfiles) >= 0
<S>  New H22:  true
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H4:  fld_length(usedlogfiles) <= 17
<S>  New H21:  fld_lasti(usedlogfiles) <= 17
<S>  New H23:  true
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H24:  1 <= fld_lasti(usedlogfiles) -> fld_lasti(usedlogfiles) >= 1 and 
          fld_lasti(usedlogfiles) <= 17
<S>  New H25:  true
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H2 & H27 together imply that
          loop__1__i < 17.
     H2 & H27 have therefore been deleted and a new H28 added to this effect.
%%%  Hypotheses H3 & H19 together imply that
          0 < fld_length(usedlogfiles).
     H3 & H19 have therefore been deleted and a new H29 added to this effect.
***  Proved C8:  fld_length(usedlogfiles) > 0 -> fld_lasti(usedlogfiles) < 
          loop__1__i + 1
     using hypotheses H1 & H26.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_4.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H3.
***  Proved C4:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H4.
***  Proved C5:  fld_length(usedlogfiles) < loop__1__i + 1
     using hypothesis H5.
***  Proved C6:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C7:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H9.
***  Proved C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H10.
***  Proved C11:  true
***  Proved C12:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C14:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H19:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C13:  loop__1__i <= 16
<S>  New C15:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H19.
***  Proved C13:  loop__1__i <= 16
     using hypotheses H2 & H19.
***  Proved C15:  loop__1__i <= 16
     using hypotheses H2 & H19.
>>>  Restructured hypothesis H18 into:
     >>>  H18:  element(logfilesstatus, [loop__1__i]) <> used
>>>  Restructured hypothesis H19 into:
     >>>  H19:  loop__1__i <> 17
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H3:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H4:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H2 & H19 together imply that
          loop__1__i < 17.
     H2 & H19 have therefore been deleted and a new H20 added to this effect.
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H4 (redundant, given H5 & H20).
***  Proved C8:  fld_length(usedlogfiles) > 0 -> fld_lasti(usedlogfiles) < 
          loop__1__i + 1
     via its standard form, which is:
     Std.Fm C8:  fld_length(usedlogfiles) > 0 -> loop__1__i - fld_lasti(
          usedlogfiles) > - 1
     using hypothesis H8.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_5.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_lasti(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  fld_lasti(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H43 on reading formula in, to give:
     %%%  H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) + 1 >= logfileindext__first and fld_lasti(usedlogfiles) 
          + 1 <= logfileindext__last
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j + 1 
          >= logfileindext__first and loop__2__j + 1 <= logfileindext__last
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1
---  Hypothesis H46 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H47 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H48 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H49 has been replaced by "true".  (It is already present, as H4)
          .
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  fld_length(usedlogfiles) + 1 < loop__1__i + 1
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  fld_length(usedlogfiles) > - 1 -> fld_lasti(usedlogfiles) + 1 < 
          loop__1__i + 1
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) and element(
          update(fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) <= 
          logfileindext__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
     using hypothesis H35.
***  Proved C4:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
     using hypothesis H36.
***  Proved C6:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H33.
***  Proved C7:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H34.
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) and element(
          update(fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) <= 
          logfileindext__last)
     using hypotheses H1, H2, H3, H4 & H14.
***  Proved C11:  true
***  Proved C12:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C14:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> character__first <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New H34:  fld_lasti(usedlogfiles) <= 16
<S>  New H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) + 1 >= logfileindext__first and fld_lasti(usedlogfiles) 
          <= 16
<S>  New H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j + 1 
          >= logfileindext__first and loop__2__j <= 16
<S>  New H50:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C13:  loop__1__i <= 16
<S>  New C15:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H50.
***  Proved C13:  loop__1__i <= 16
     using hypotheses H2 & H50.
***  Proved C15:  loop__1__i <= 16
     using hypotheses H2 & H50.
>>>  Restructured hypothesis H45 into:
     >>>  H45:  fld_lasti(usedlogfiles) + 1 < loop__2__j + 1
>>>  Restructured hypothesis H50 into:
     >>>  H50:  loop__1__i <> 17
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H51:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 17 -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
<S>  New H35:  fld_length(usedlogfiles) >= - 1
<S>  New H37:  fld_lasti(usedlogfiles) >= - 1
<S>  New H39:  loop__2__j >= - 1
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
<S>  New H36:  fld_length(usedlogfiles) <= 16
<S>  New H38:  fld_lasti(usedlogfiles) <= 16
<S>  New H40:  loop__2__j <= 16
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H33:  fld_lasti(usedlogfiles) >= 0
<S>  New H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) >= 0 and fld_lasti(usedlogfiles) <= 16
<S>  New H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j >= 0 
          and loop__2__j <= 16
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H2 & H50 together imply that
          loop__1__i < 17.
     H2 & H50 have therefore been deleted and a new H52 added to this effect.
***  Proved C5:  fld_length(usedlogfiles) + 1 < loop__1__i + 1
     via its standard form, which is:
     Std.Fm C5:  loop__1__i - fld_length(usedlogfiles) > 0
     using hypothesis H11.
***  Proved C8:  fld_length(usedlogfiles) > - 1 -> fld_lasti(usedlogfiles) + 1 
          < loop__1__i + 1
     via its standard form, which is:
     Std.Fm C8:  fld_length(usedlogfiles) > - 1 -> loop__1__i - fld_lasti(
          usedlogfiles) > 0
     using hypothesis H51.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_6.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
---  Hypothesis H38 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H39 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  fld_length(usedlogfiles) + 1 < loop__1__i + 1
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  fld_length(usedlogfiles) > - 1 -> fld_lasti(usedlogfiles) + 1 < 
          loop__1__i + 1
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [fld_lasti(usedlogfiles) + 1], loop__1__i), [
          n_]) and element(update(fld_list(usedlogfiles), [fld_lasti(
          usedlogfiles) + 1], loop__1__i), [n_]) <= logfileindext__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
     using hypothesis H36.
***  Proved C4:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
     using hypothesis H37.
***  Proved C6:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H34.
***  Proved C7:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H35.
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [fld_lasti(usedlogfiles) + 1], loop__1__i), [
          n_]) and element(update(fld_list(usedlogfiles), [fld_lasti(
          usedlogfiles) + 1], loop__1__i), [n_]) <= logfileindext__last)
     using hypotheses H1, H2, H14, H34 & H35.
***  Proved C11:  true
***  Proved C12:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C14:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> character__first <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New H35:  fld_lasti(usedlogfiles) <= 16
<S>  New H41:  fld_lasti(usedlogfiles) <= 16
<S>  New H42:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C13:  loop__1__i <= 16
<S>  New C15:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H42.
***  Proved C13:  loop__1__i <= 16
     using hypotheses H2 & H42.
***  Proved C15:  loop__1__i <= 16
     using hypotheses H2 & H42.
>>>  Restructured hypothesis H42 into:
     >>>  H42:  loop__1__i <> 17
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H43:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 17 -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
<S>  New H36:  fld_length(usedlogfiles) >= - 1
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
<S>  New H37:  fld_length(usedlogfiles) <= 16
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H34:  fld_lasti(usedlogfiles) >= 0
<S>  New H40:  fld_lasti(usedlogfiles) >= 0
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H2 & H42 together imply that
          loop__1__i < 17.
     H2 & H42 have therefore been deleted and a new H44 added to this effect.
***  Proved C5:  fld_length(usedlogfiles) + 1 < loop__1__i + 1
     via its standard form, which is:
     Std.Fm C5:  loop__1__i - fld_length(usedlogfiles) > 0
     using hypothesis H11.
***  Proved C8:  fld_length(usedlogfiles) > - 1 -> fld_lasti(usedlogfiles) + 1 
          < loop__1__i + 1
     via its standard form, which is:
     Std.Fm C8:  fld_length(usedlogfiles) > - 1 -> loop__1__i - fld_lasti(
          usedlogfiles) > 0
     using hypothesis H43.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_7.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C3:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H8.
***  Proved C4:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H9.
***  Proved C5:  fld_length(usedlogfiles) < loop__1__i + 1
     using hypothesis H11.
***  Proved C6:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C7:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H14.
***  Proved C11:  true
***  Proved C12:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
***  Proved C14:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H1.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> character__first <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New H35:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C13:  loop__1__i <= 16
<S>  New C15:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H2 & H35.
***  Proved C13:  loop__1__i <= 16
     using hypotheses H2 & H35.
***  Proved C15:  loop__1__i <= 16
     using hypotheses H2 & H35.
>>>  Restructured hypothesis H33 into:
     >>>  H33:  loop__2__j <> fld_lasti(usedlogfiles)
>>>  Restructured hypothesis H35 into:
     >>>  H35:  loop__1__i <> 17
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H36:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 17 -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H2 & H35 together imply that
          loop__1__i < 17.
     H2 & H35 have therefore been deleted and a new H37 added to this effect.
%%%  Hypotheses H5 & H33 together imply that
          loop__2__j < fld_lasti(usedlogfiles).
     H5 & H33 have therefore been deleted and a new H38 added to this effect.
***  Proved C8:  fld_length(usedlogfiles) > 0 -> fld_lasti(usedlogfiles) < 
          loop__1__i + 1
     using hypothesis H36.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_8.  @@@@@@@@@@
%%%  Simplified H17 on reading formula in, to give:
     %%%  H17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H18 on reading formula in, to give:
     %%%  H18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H40 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H41 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H43 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H44 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H45 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H46 has been replaced by "true".  (It is already present, as H4)
          .
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  fld_length(usedlogfiles) >= logfilecountt__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  fld_length(usedlogfiles) <= logfilecountt__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  fld_length(usedlogfiles) < loop__1__i + 1
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  fld_lasti(usedlogfiles) >= logfileindext__first
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  fld_lasti(usedlogfiles) <= logfileindext__last
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  fld_length(usedlogfiles) > 0 -> fld_lasti(usedlogfiles) < 
          loop__1__i + 1
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(update(
          fld_list(usedlogfiles), [loop__3__k], element(fld_list(usedlogfiles), 
          [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) and element(
          update(update(fld_list(usedlogfiles), [loop__3__k], element(fld_list(
          usedlogfiles), [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) 
          <= logfileindext__last)
***  Proved C1:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H5.
***  Proved C3:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H12.
***  Proved C4:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H13.
***  Proved C5:  fld_length(usedlogfiles) < loop__1__i + 1
     using hypothesis H15.
***  Proved C6:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H10.
***  Proved C7:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H11.
***  Proved C8:  fld_length(usedlogfiles) > 0 -> fld_lasti(usedlogfiles) < 
          loop__1__i + 1
     using hypothesis H16.
***  Proved C9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H17.
***  Proved C10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(update(
          fld_list(usedlogfiles), [loop__3__k], element(fld_list(usedlogfiles), 
          [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) and element(
          update(update(fld_list(usedlogfiles), [loop__3__k], element(fld_list(
          usedlogfiles), [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) 
          <= logfileindext__last)
     using hypotheses H1, H2, H3, H4, H5, H6, H18, H34 & H35.
***  Proved C11:  true
***  Proved C12:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H5.
***  Proved C14:  loop__1__i + 1 >= logfileindext__first
     using hypothesis H5.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__3__k <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H6:  loop__1__i <= 17
<S>  New H11:  fld_lasti(usedlogfiles) <= 17
<S>  New H17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H25:  loop__2__j__entry__loop__3 <= 17
<S>  New H35:  element(fld_list(usedlogfiles), [loop__3__k - 1]) <= 17
<S>  New H37:  loop__3__k <= 18
<S>  New H47:  not loop__1__i = 17
<S>  New C2:  loop__1__i <= 16
<S>  New C13:  loop__1__i <= 16
<S>  New C15:  loop__1__i <= 16
***  Proved C2:  loop__1__i <= 16
     using hypotheses H6 & H47.
***  Proved C13:  loop__1__i <= 16
     using hypotheses H6 & H47.
***  Proved C15:  loop__1__i <= 16
     using hypotheses H6 & H47.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_9.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_10.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
***  Proved C1:  true
***  Proved C2:  logfileindext__first <= logfileindext__last
     using hypotheses H1 & H2.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_11.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  true
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
***  Proved C1:  true
***  Proved C2:  logfileindext__first <= logfileindext__last
     using hypothesis H21.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_12.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  true
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H21).
***  Proved C1:  1 >= logfilecountt__first
     using hypotheses H3 & H19.
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H4:  fld_length(usedlogfiles) <= 17
<S>  New C2:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_13.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  true
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H21).
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  true
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  logfileindext__first <= logfileindext__last
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C3:  true
***  Proved C4:  logfileindext__first <= logfileindext__last
     using hypothesis H21.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_14.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H3:  fld_length(usedlogfiles) >= 0
<S>  New C1:  fld_lasti(usedlogfiles) >= 0
<S>  New C3:  true
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H4:  fld_length(usedlogfiles) <= 17
<S>  New C2:  fld_lasti(usedlogfiles) <= 17
<S>  New C4:  true
***  Proved C3:  true
***  Proved C4:  true
>>>  Restructured hypothesis H19 into:
     >>>  H19:  fld_length(usedlogfiles) <> 0
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H3 & H19 together imply that
          0 < fld_length(usedlogfiles).
     H3 & H19 have therefore been deleted and a new H20 added to this effect.
***  Proved C1:  fld_lasti(usedlogfiles) >= 0
     using hypothesis H6.
***  Proved C2:  fld_lasti(usedlogfiles) <= 17
     using hypothesis H7.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_15.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
***  Proved C1:  1 <= fld_lasti(usedlogfiles) -> fld_lasti(usedlogfiles) >= 
          logfileindext__first and fld_lasti(usedlogfiles) <= 
          logfileindext__last
     using hypotheses H6 & H7.
>>>  Restructured hypothesis H19 into:
     >>>  H19:  fld_length(usedlogfiles) <> 0
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H3:  fld_length(usedlogfiles) >= 0
<S>  New H20:  fld_lasti(usedlogfiles) >= 0
<S>  New H22:  true
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H4:  fld_length(usedlogfiles) <= 17
<S>  New H21:  fld_lasti(usedlogfiles) <= 17
<S>  New H23:  true
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New C2:  1 <= fld_lasti(usedlogfiles) -> 1 <= logfileindext__last
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New C2:  true
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H3 & H19 together imply that
          0 < fld_length(usedlogfiles).
     H3 & H19 have therefore been deleted and a new H24 added to this effect.
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_16.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C14 on reading formula in, to give:
     %%%  C14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified C18 on reading formula in, to give:
     %%%  C18:  true
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C4:  1 <= logfileindext__last
     using hypotheses H7 & H26.
***  Proved C5:  1 <= fld_lasti(usedlogfiles)
     using hypothesis H26.
***  Proved C6:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C7:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C8:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H3.
***  Proved C9:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H4.
***  Proved C11:  fld_length(usedlogfiles) < loop__1__i
     using hypothesis H5.
***  Proved C12:  fld_length(usedlogfiles) > 0 -> fld_lasti(usedlogfiles) < 
          loop__1__i
     using hypothesis H8.
***  Proved C13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H9.
***  Proved C14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H10.
***  Proved C15:  true
***  Proved C17:  1 <= logfileindext__last
     using hypotheses H7 & H26.
***  Proved C18:  true
***  Proved C19:  1 <= fld_lasti(usedlogfiles)
     using hypothesis H26.
***  Proved C20:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C21:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C22:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C23:  loop__1__i <= logfileindext__last
     using hypothesis H2.
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H24:  1 <= fld_lasti(usedlogfiles) -> fld_lasti(usedlogfiles) >= 1 and 
          fld_lasti(usedlogfiles) <= logfileindext__last
<S>  New H25:  1 <= fld_lasti(usedlogfiles) -> 1 <= logfileindext__last
<S>  New C3:  true
<S>  New C16:  true
***  Proved C3:  true
***  Proved C16:  true
>>>  Restructured hypothesis H19 into:
     >>>  H19:  fld_length(usedlogfiles) <> 0
+++  Using "A->B, A |- B" on hypotheses H24 & H26 yields a new hypothesis:
     +++  H27:  fld_lasti(usedlogfiles) >= 1 and fld_lasti(usedlogfiles) <= 
          logfileindext__last
+++  Using "A->B, A |- B" on hypotheses H25 & H26 yields a new hypothesis:
     +++  H28:  1 <= logfileindext__last
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H3:  fld_length(usedlogfiles) >= 0
<S>  New H20:  fld_lasti(usedlogfiles) >= 0
<S>  New H22:  true
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H4:  fld_length(usedlogfiles) <= 17
<S>  New H21:  fld_lasti(usedlogfiles) <= 17
<S>  New H23:  true
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H10:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H24:  1 <= fld_lasti(usedlogfiles) -> fld_lasti(usedlogfiles) >= 1 and 
          fld_lasti(usedlogfiles) <= 17
<S>  New H25:  true
<S>  New H27:  fld_lasti(usedlogfiles) >= 1 and fld_lasti(usedlogfiles) <= 17
<S>  New H28:  true
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H9:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H3 & H19 together imply that
          0 < fld_length(usedlogfiles).
     H3 & H19 have therefore been deleted and a new H29 added to this effect.
***  Proved C10:  fld_length(usedlogfiles) > 0
     using hypothesis H29.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_17.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C14 on reading formula in, to give:
     %%%  C14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified C18 on reading formula in, to give:
     %%%  C18:  loop__2__j >= 0
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C3:  loop__2__j + 1 >= logfileindext__first
     using hypothesis H3.
***  Proved C6:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C7:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C8:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H8.
***  Proved C9:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H9.
***  Proved C10:  fld_length(usedlogfiles) > 0
     using hypothesis H10.
***  Proved C11:  fld_length(usedlogfiles) < loop__1__i
     using hypothesis H11.
***  Proved C12:  fld_length(usedlogfiles) > 0 -> fld_lasti(usedlogfiles) < 
          loop__1__i
     using hypothesis H12.
***  Proved C13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H14.
***  Proved C15:  true
***  Proved C16:  loop__2__j + 1 >= logfileindext__first
     using hypothesis H3.
***  Proved C18:  loop__2__j >= 0
     using hypothesis H18.
***  Proved C20:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C21:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C22:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C23:  loop__1__i <= logfileindext__last
     using hypothesis H2.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> character__first <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New C4:  loop__2__j <= 16
<S>  New C17:  loop__2__j <= 16
***  Proved C4:  loop__2__j <= 16
     using hypotheses H5, H7 & H33.
***  Proved C17:  loop__2__j <= 16
     using hypotheses H5, H7 & H33.
>>>  Restructured hypothesis H33 into:
     >>>  H33:  loop__2__j <> fld_lasti(usedlogfiles)
>>>  Restructured hypothesis H34 into:
     >>>  H34:  loop__2__j <> fld_lasti(usedlogfiles__entry__loop__2)
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H35:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 17 -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H5 & H33 together imply that
          loop__2__j < fld_lasti(usedlogfiles).
     H5 & H33 have therefore been deleted and a new H36 added to this effect.
%%%  Hypotheses H19 & H34 together imply that
          loop__2__j < fld_lasti(usedlogfiles__entry__loop__2).
     H19 & H34 have therefore been deleted and a new H37 added to this effect.
***  Proved C5:  loop__2__j + 1 <= fld_lasti(usedlogfiles)
     via its standard form, which is:
     Std.Fm C5:  - loop__2__j + fld_lasti(usedlogfiles) > 0
     using hypothesis H36.
***  Proved C19:  loop__2__j + 1 <= fld_lasti(usedlogfiles__entry__loop__2)
     via its standard form, which is:
     Std.Fm C19:  - loop__2__j + fld_lasti(usedlogfiles__entry__loop__2) > 0
     using hypothesis H37.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_18.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
***  Proved C1:  element(fld_list(usedlogfiles), [loop__2__j]) >= 
          logfileindext__first
     using hypotheses H3, H4 & H14.
***  Proved C2:  element(fld_list(usedlogfiles), [loop__2__j]) <= 
          logfileindext__last
     using hypotheses H3, H4 & H14.
***  Proved C3:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C4:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  Proved C5:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C6:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_19.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
***  Proved C1:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H6.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> character__first <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New C2:  fld_lasti(usedlogfiles) <= 16
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H33:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 17 -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
***  Proved C2:  fld_lasti(usedlogfiles) <= 16
     using hypotheses H2 & H33.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_20.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
***  Proved C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
     using hypothesis H8.
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
<S>  New C2:  fld_length(usedlogfiles) <= 16
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H35:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 
          logfileindext__last -> 0 <= element(element(fileages, [i___1]), [
          i___2]) and element(element(fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H33:  fld_lasti(usedlogfiles) >= 0
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= logfileindext__last -> 0 <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New H34:  fld_lasti(usedlogfiles) <= 16
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
***  Proved C2:  fld_length(usedlogfiles) <= 16
     using hypotheses H2 & H11.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_21.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fld_lasti(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  fld_lasti(usedlogfiles) + 1 <= logfilecountt__last
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
<S>  New H35:  fld_length(usedlogfiles) >= - 1
<S>  New C1:  fld_lasti(usedlogfiles) >= - 1
<S>  New C3:  loop__2__j >= - 1
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
<S>  New H36:  fld_length(usedlogfiles) <= 16
<S>  New C2:  fld_lasti(usedlogfiles) <= 16
<S>  New C4:  loop__2__j <= 16
***  Proved C1:  fld_lasti(usedlogfiles) >= - 1
     using hypotheses H5 & H18.
***  Proved C3:  loop__2__j >= - 1
     using hypothesis H18.
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H37:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 
          logfileindext__last -> 0 <= element(element(fileages, [i___1]), [
          i___2]) and element(element(fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H33:  fld_lasti(usedlogfiles) >= 0
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= logfileindext__last -> 0 <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New H34:  fld_lasti(usedlogfiles) <= 16
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
***  Proved C2:  fld_lasti(usedlogfiles) <= 16
     using hypothesis H34.
***  Proved C4:  loop__2__j <= 16
     using hypotheses H5 & H34.
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H31 (true-hypothesis).
---  Eliminated hypothesis H18 (duplicate of H3).
>>>  Using "A->B, A |- B" on H12, given H10, we simplify the former to:
     >>>  H12:  fld_lasti(usedlogfiles) < loop__1__i
---  Eliminated hypothesis H1 (redundant, given H6 & H37).
---  Eliminated hypothesis H4 (redundant, given H5 & H34).
---  Eliminated hypothesis H7 (redundant, given H34).
---  Eliminated hypothesis H8 (redundant, given H10).
---  Eliminated hypothesis H9 (redundant, given H36).
---  Eliminated hypothesis H33 (redundant, given H6).
---  Eliminated hypothesis H35 (redundant, given H10).
     +++  New H38:  integer__size >= 0
     +++  New H39:  character__size >= 0
     +++  New H40:  positive__size >= 0
     +++  New H41:  clock__timetexti__size >= 0
     +++  New H42:  alarmtypes__statust__size >= 0
     +++  New H43:  logfilecountt__size >= 0
     +++  New H44:  logfilecountt__base__first <= logfilecountt__base__last
     +++  New H45:  logfileindext__size >= 0
     +++  New H46:  logfileindext__base__first <= logfileindext__base__last
     +++  New H47:  filestatust__size >= 0
     +++  New H48:  logfilelistt__size >= 0
     +++  New H49:  logentrycountt__size >= 0
     +++  New H50:  logentrycountt__base__first <= logentrycountt__base__last
     +++  New H51:  fileentrycountt__size >= 0
     +++  New H52:  fileentrycountt__base__first <= fileentrycountt__base__last
     +++  New H53:  0 <= fld_length(emptylist)
     +++  New H54:  logfilecountt__base__first <= 0
     +++  New H55:  fld_length(emptylist) <= 17
     +++  New H56:  logfilecountt__base__last >= 17
     +++  New H57:  1 <= fld_head(emptylist)
     +++  New H58:  1 <= fld_lasti(emptylist)
     +++  New H59:  logfileindext__base__first <= 1
     +++  New H60:  fld_head(emptylist) <= 17
     +++  New H61:  fld_lasti(emptylist) <= 17
     +++  New H62:  logfileindext__base__last >= 17
     +++  New H63:  logentrycountt__base__first <= 0
     +++  New H64:  logentrycountt__base__last >= 17408
     +++  New H65:  fileentrycountt__base__first <= 0
     +++  New H66:  fileentrycountt__base__last >= 1024
***  Proved C5:  loop__2__j + 1 >= logfilecountt__base__first
     using hypotheses H3 & H54.
***  Proved C6:  loop__2__j + 1 <= logfilecountt__base__last
     using hypotheses H5, H34 & H56.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_22.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_lasti(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  fld_lasti(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) + 1 >= logfileindext__first and fld_lasti(usedlogfiles) 
          + 1 <= logfileindext__last
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j + 1 
          >= logfileindext__first and loop__2__j + 1 <= logfileindext__last
***  Proved C1:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) + 1 >= logfileindext__first and fld_lasti(usedlogfiles) 
          + 1 <= logfileindext__last
     using hypotheses H33 & H34.
***  Proved C2:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j + 
          1 >= logfileindext__first and loop__2__j + 1 <= logfileindext__last
     using hypotheses H3, H5 & H34.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_23.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_lasti(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  fld_lasti(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H43 on reading formula in, to give:
     %%%  H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) + 1 >= logfileindext__first and fld_lasti(usedlogfiles) 
          + 1 <= logfileindext__last
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j + 1 
          >= logfileindext__first and loop__2__j + 1 <= logfileindext__last
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  true
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  fld_lasti(usedlogfiles) + 1 >= loop__2__j + 1
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  true
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C14 on reading formula in, to give:
     %%%  C14:  fld_length(usedlogfiles) > - 1
%%%  Simplified C15 on reading formula in, to give:
     %%%  C15:  fld_length(usedlogfiles) + 1 <= loop__1__i
%%%  Simplified C16 on reading formula in, to give:
     %%%  C16:  fld_lasti(usedlogfiles) + 1 <= loop__1__i
%%%  Simplified C17 on reading formula in, to give:
     %%%  C17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C18 on reading formula in, to give:
     %%%  C18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified C20 on reading formula in, to give:
     %%%  C20:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C21 on reading formula in, to give:
     %%%  C21:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C22 on reading formula in, to give:
     %%%  C22:  true
%%%  Simplified C23 on reading formula in, to give:
     %%%  C23:  fld_lasti(usedlogfiles) + 1 >= loop__2__j + 1
***  Proved C1:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H33.
***  Proved C2:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H34.
***  Proved C3:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C4:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  Proved C5:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C6:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C7:  true
***  Proved C8:  fld_lasti(usedlogfiles) + 1 >= loop__2__j + 1
     using hypothesis H45.
***  Proved C9:  true
***  Proved C10:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H33.
***  Proved C11:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H34.
***  Proved C12:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
     using hypothesis H35.
***  Proved C13:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
     using hypothesis H36.
***  Proved C14:  fld_length(usedlogfiles) > - 1
     using hypothesis H10.
***  Proved C17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H14.
***  Proved C19:  true
***  Proved C20:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H33.
***  Proved C21:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H34.
***  Proved C22:  true
***  Proved C23:  fld_lasti(usedlogfiles) + 1 >= loop__2__j + 1
     using hypothesis H45.
***  Proved C24:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C25:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  Proved C26:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C27:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  Proved C28:  loop__2__j >= 1
     using hypothesis H18.
***  Proved C29:  loop__2__j <= fld_lasti(usedlogfiles__entry__loop__2)
     using hypothesis H19.
***  Proved C30:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C31:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C32:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C33:  loop__1__i <= logfileindext__last
     using hypothesis H2.
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H46:  fld_lasti(usedlogfiles) < loop__1__i
+++  Using "A->B, A |- B" on hypotheses H43 & H45 yields a new hypothesis:
     +++  H47:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first and 
          fld_lasti(usedlogfiles) + 1 <= logfileindext__last
+++  Using "A->B, A |- B" on hypotheses H44 & H45 yields a new hypothesis:
     +++  H48:  loop__2__j + 1 >= logfileindext__first and loop__2__j + 1 <= 
          logfileindext__last
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 
          logfileindext__last -> 0 <= element(element(fileages, [i___1]), [
          i___2]) and element(element(fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
<S>  New H35:  fld_length(usedlogfiles) >= - 1
<S>  New H37:  fld_lasti(usedlogfiles) >= - 1
<S>  New H39:  loop__2__j >= - 1
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
<S>  New H36:  fld_length(usedlogfiles) <= 16
<S>  New H38:  fld_lasti(usedlogfiles) <= 16
<S>  New H40:  loop__2__j <= 16
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H33:  fld_lasti(usedlogfiles) >= 0
<S>  New H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) >= 0 and fld_lasti(usedlogfiles) + 1 <= 
          logfileindext__last
<S>  New H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j >= 0 
          and loop__2__j + 1 <= logfileindext__last
<S>  New H47:  fld_lasti(usedlogfiles) >= 0 and fld_lasti(usedlogfiles) + 1 <= 
          logfileindext__last
<S>  New H48:  loop__2__j >= 0 and loop__2__j + 1 <= logfileindext__last
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= logfileindext__last -> 0 <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New H34:  fld_lasti(usedlogfiles) <= 16
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) >= 0 and fld_lasti(usedlogfiles) <= 16
<S>  New H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j >= 0 
          and loop__2__j <= 16
<S>  New H47:  fld_lasti(usedlogfiles) >= 0 and fld_lasti(usedlogfiles) <= 16
<S>  New H48:  loop__2__j >= 0 and loop__2__j <= 16
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
***  Proved C15:  fld_length(usedlogfiles) + 1 <= loop__1__i
     via its standard form, which is:
     Std.Fm C15:  loop__1__i - fld_length(usedlogfiles) > 0
     using hypothesis H11.
***  Proved C16:  fld_lasti(usedlogfiles) + 1 <= loop__1__i
     via its standard form, which is:
     Std.Fm C16:  loop__1__i - fld_lasti(usedlogfiles) > 0
     using hypothesis H46.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_24.  @@@@@@@@@@
%%%  Simplified H17 on reading formula in, to give:
     %%%  H17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H18 on reading formula in, to give:
     %%%  H18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H40 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H41 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  loop__3__k - 1 <= fld_lasti(usedlogfiles)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  fld_lasti(usedlogfiles) >= logfileindext__first
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  fld_lasti(usedlogfiles) <= logfileindext__last
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  fld_length(usedlogfiles) >= logfilecountt__first
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  fld_length(usedlogfiles) <= logfilecountt__last
%%%  Simplified C14 on reading formula in, to give:
     %%%  C14:  fld_length(usedlogfiles) > 0
%%%  Simplified C15 on reading formula in, to give:
     %%%  C15:  fld_length(usedlogfiles) <= loop__1__i
%%%  Simplified C16 on reading formula in, to give:
     %%%  C16:  fld_lasti(usedlogfiles) <= loop__1__i
%%%  Simplified C17 on reading formula in, to give:
     %%%  C17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C18 on reading formula in, to give:
     %%%  C18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [loop__3__k], element(fld_list(usedlogfiles), 
          [loop__3__k - 1])), [n_]) and element(update(fld_list(usedlogfiles), [
          loop__3__k], element(fld_list(usedlogfiles), [loop__3__k - 1])), [n_])
           <= logfileindext__last)
%%%  Simplified C22 on reading formula in, to give:
     %%%  C22:  loop__3__k - 1 <= fld_lasti(usedlogfiles)
***  Proved C1:  loop__3__k - 1 >= logfileindext__first
     using hypothesis H36.
***  Proved C2:  loop__3__k - 1 <= logfileindext__last
     using hypothesis H37.
***  Proved C3:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C4:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  Proved C5:  loop__1__i >= logfileindext__first
     using hypothesis H5.
***  Proved C6:  loop__1__i <= logfileindext__last
     using hypothesis H6.
***  Proved C7:  loop__2__j = loop__2__j__entry__loop__3
     using hypothesis H7.
***  Proved C9:  loop__3__k - 1 <= fld_lasti(usedlogfiles)
     using hypothesis H9.
***  Proved C10:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H10.
***  Proved C11:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H11.
***  Proved C12:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H12.
***  Proved C13:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H13.
***  Proved C14:  fld_length(usedlogfiles) > 0
     using hypothesis H14.
***  Proved C15:  fld_length(usedlogfiles) <= loop__1__i
     using hypothesis H15.
***  Proved C16:  fld_lasti(usedlogfiles) <= loop__1__i
     using hypothesis H16.
***  Proved C17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H17.
***  Proved C18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [loop__3__k], element(fld_list(usedlogfiles), 
          [loop__3__k - 1])), [n_]) and element(update(fld_list(usedlogfiles), [
          loop__3__k], element(fld_list(usedlogfiles), [loop__3__k - 1])), [n_])
           <= logfileindext__last)
     using hypotheses H1, H2, H18, H34 & H35.
***  Proved C19:  true
***  Proved C20:  loop__3__k - 1 >= logfileindext__first
     using hypothesis H36.
***  Proved C21:  loop__3__k - 1 <= logfileindext__last
     using hypothesis H37.
***  Proved C22:  loop__3__k - 1 <= fld_lasti(usedlogfiles)
     using hypothesis H9.
***  Proved C24:  loop__2__j__entry__loop__3 >= logfileindext__first
     using hypothesis H24.
***  Proved C25:  loop__2__j__entry__loop__3 <= logfileindext__last
     using hypothesis H25.
***  Proved C26:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C27:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  Proved C28:  loop__2__j >= 1
     using hypothesis H28.
***  Proved C29:  loop__2__j <= fld_lasti(usedlogfiles__entry__loop__2)
     using hypothesis H29.
***  Proved C30:  loop__1__i >= logfileindext__first
     using hypothesis H5.
***  Proved C31:  loop__1__i <= logfileindext__last
     using hypothesis H6.
***  Proved C32:  loop__1__i >= logfileindext__first
     using hypothesis H5.
***  Proved C33:  loop__1__i <= logfileindext__last
     using hypothesis H6.
>>>  Restructured hypothesis H42 into:
     >>>  H42:  loop__3__k <> loop__2__j__entry__loop__3 + 1
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H12:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H13:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__3__k >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H5:  loop__1__i >= 1
<S>  New H10:  fld_lasti(usedlogfiles) >= 1
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H18:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H24:  loop__2__j__entry__loop__3 >= 1
<S>  New H34:  element(fld_list(usedlogfiles), [loop__3__k - 1]) >= 1
<S>  New H36:  loop__3__k >= 2
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__3__k <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H6:  loop__1__i <= 17
<S>  New H11:  fld_lasti(usedlogfiles) <= 17
<S>  New H25:  loop__2__j__entry__loop__3 <= 17
<S>  New H35:  element(fld_list(usedlogfiles), [loop__3__k - 1]) <= 17
<S>  New H37:  loop__3__k <= 18
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H18:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H23 & H42 together imply that
          loop__2__j__entry__loop__3 + 1 < loop__3__k.
     H23 & H42 have therefore been deleted and a new H43 added to this effect.
***  Proved C23:  loop__3__k - 1 >= loop__2__j__entry__loop__3 + 1
     via its standard form, which is:
     Std.Fm C23:  - loop__2__j__entry__loop__3 + loop__3__k > 1
     using hypothesis H43.
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H26 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H31 (true-hypothesis).
---  Eliminated hypothesis H32 (true-hypothesis).
---  Eliminated hypothesis H33 (true-hypothesis).
---  Eliminated hypothesis H40 (true-hypothesis).
---  Eliminated hypothesis H41 (true-hypothesis).
---  Eliminated hypothesis H28 (duplicate of H3).
---  Eliminated hypothesis H1 (redundant, given H36).
---  Eliminated hypothesis H4 (redundant, given H2 & H8).
---  Eliminated hypothesis H8 (redundant, given H7 & H43).
---  Eliminated hypothesis H10 (redundant, given H9 & H36).
---  Eliminated hypothesis H12 (redundant, given H14).
---  Eliminated hypothesis H25 (redundant, given H2 & H43).
---  Eliminated hypothesis H36 (redundant, given H24 & H43).
---  Eliminated hypothesis H37 (redundant, given H2).
-S-  Eliminated hypothesis H7.
     This was achieved by replacing all occurrences of loop__2__j by:
          loop__2__j__entry__loop__3.
<S>  New H29:  loop__2__j__entry__loop__3 <= fld_lasti(
          usedlogfiles__entry__loop__2)
<S>  New H3:  loop__2__j__entry__loop__3 >= 1
<S>  New C8:  loop__3__k - 1 >= loop__2__j__entry__loop__3 + 1
***  Proved C8:  loop__3__k - 1 >= loop__2__j__entry__loop__3 + 1
     via its standard form, which is:
     Std.Fm C8:  - loop__2__j__entry__loop__3 + loop__3__k > 1
     using hypothesis H43.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_25.  @@@@@@@@@@
%%%  Simplified H17 on reading formula in, to give:
     %%%  H17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H18 on reading formula in, to give:
     %%%  H18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H6)
          .
***  Proved C4:  loop__3__k - 1 <= logfileindext__last
     using hypothesis H2.
***  Proved C7:  loop__3__k >= logfileindext__first
     using hypothesis H1.
***  Proved C8:  loop__3__k <= logfileindext__last
     using hypothesis H2.
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__3__k >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H5:  loop__1__i >= 1
<S>  New H10:  fld_lasti(usedlogfiles) >= 1
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H18:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H24:  loop__2__j__entry__loop__3 >= 1
<S>  New C1:  element(fld_list(usedlogfiles), [loop__3__k - 1]) >= 1
<S>  New C3:  loop__3__k >= 2
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__3__k <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H6:  loop__1__i <= 17
<S>  New H11:  fld_lasti(usedlogfiles) <= 17
<S>  New H25:  loop__2__j__entry__loop__3 <= 17
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H18:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New C2:  element(fld_list(usedlogfiles), [loop__3__k - 1]) <= 17
***  Proved C1:  element(fld_list(usedlogfiles), [loop__3__k - 1]) >= 1
     using hypotheses H2, H8, H18 & H28.
***  Proved C3:  loop__3__k >= 2
     using hypotheses H8 & H28.
***  Proved C2:  element(fld_list(usedlogfiles), [loop__3__k - 1]) <= 17
     using hypotheses H2, H8, H18 & H28.
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H12:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H13:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H17:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H26 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H31 (true-hypothesis).
---  Eliminated hypothesis H32 (true-hypothesis).
---  Eliminated hypothesis H33 (true-hypothesis).
---  Eliminated hypothesis H28 (duplicate of H3).
---  Eliminated hypothesis H1 (redundant, given H3 & H8).
---  Eliminated hypothesis H4 (redundant, given H2 & H8).
---  Eliminated hypothesis H10 (redundant, given H3, H8 & H9).
---  Eliminated hypothesis H12 (redundant, given H14).
---  Eliminated hypothesis H25 (redundant, given H2 & H23).
-S-  Eliminated hypothesis H7.
     This was achieved by replacing all occurrences of loop__2__j by:
          loop__2__j__entry__loop__3.
<S>  New H3:  loop__2__j__entry__loop__3 >= 1
<S>  New H8:  loop__3__k >= loop__2__j__entry__loop__3 + 1
<S>  New H29:  loop__2__j__entry__loop__3 <= fld_lasti(
          usedlogfiles__entry__loop__2)
     +++  New H34:  integer__size >= 0
     +++  New H35:  character__size >= 0
     +++  New H36:  positive__size >= 0
     +++  New H37:  clock__timetexti__size >= 0
     +++  New H38:  alarmtypes__statust__size >= 0
     +++  New H39:  logfilecountt__size >= 0
     +++  New H40:  logfilecountt__base__first <= logfilecountt__base__last
     +++  New H41:  logfileindext__size >= 0
     +++  New H42:  logfileindext__base__first <= logfileindext__base__last
     +++  New H43:  filestatust__size >= 0
     +++  New H44:  logfilelistt__size >= 0
     +++  New H45:  logentrycountt__size >= 0
     +++  New H46:  logentrycountt__base__first <= logentrycountt__base__last
     +++  New H47:  fileentrycountt__size >= 0
     +++  New H48:  fileentrycountt__base__first <= fileentrycountt__base__last
     +++  New H49:  0 <= fld_length(emptylist)
     +++  New H50:  logfilecountt__base__first <= 0
     +++  New H51:  fld_length(emptylist) <= 17
     +++  New H52:  logfilecountt__base__last >= 17
     +++  New H53:  1 <= fld_head(emptylist)
     +++  New H54:  1 <= fld_lasti(emptylist)
     +++  New H55:  logfileindext__base__first <= 1
     +++  New H56:  fld_head(emptylist) <= 17
     +++  New H57:  fld_lasti(emptylist) <= 17
     +++  New H58:  logfileindext__base__last >= 17
     +++  New H59:  logentrycountt__base__first <= 0
     +++  New H60:  logentrycountt__base__last >= 17408
     +++  New H61:  fileentrycountt__base__first <= 0
     +++  New H62:  fileentrycountt__base__last >= 1024
***  Proved C5:  loop__3__k - 1 >= logfilecountt__base__first
     using hypotheses H1 & H50.
***  Proved C6:  loop__3__k - 1 <= logfilecountt__base__last
     using hypotheses H2 & H52.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_26.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_lasti(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  fld_lasti(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H43 on reading formula in, to give:
     %%%  H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) + 1 >= logfileindext__first and fld_lasti(usedlogfiles) 
          + 1 <= logfileindext__last
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j + 1 
          >= logfileindext__first and loop__2__j + 1 <= logfileindext__last
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C3:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C4:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_27.  @@@@@@@@@@
%%%  Simplified H17 on reading formula in, to give:
     %%%  H17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H18 on reading formula in, to give:
     %%%  H18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H40 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H41 has been replaced by "true".  (It is already present, as H2)
          .
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H5.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H6.
***  Proved C3:  loop__2__j >= logfileindext__first
     using hypothesis H3.
***  Proved C4:  loop__2__j <= logfileindext__last
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_28.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
***  Proved C1:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H6.
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 17 -> 
          logfileindext__first <= element(fld_list(usedlogfiles), [n_]) and 
          element(fld_list(usedlogfiles), [n_]) <= 17)
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> character__first <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New C2:  fld_lasti(usedlogfiles) <= 16
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H34:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 17 -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
***  Proved C2:  fld_lasti(usedlogfiles) <= 16
     using hypotheses H2 & H34.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_29.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
***  Proved C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
     using hypothesis H8.
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H9:  fld_length(usedlogfiles) <= 17
<S>  New C2:  fld_length(usedlogfiles) <= 16
+++  Using "A->B, A |- B" on hypotheses H12 & H10 yields a new hypothesis:
     +++  H36:  fld_lasti(usedlogfiles) < loop__1__i
-S-  Applied substitution rule init_rules(17).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= character__last))
-S-  Applied substitution rule init_rules(18).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of clock__timetexti__first 
          by:
          1.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 0 
          <= element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(28).
     This was achieved by replacing all occurrences of clock__timetexti__last 
          by:
          21.
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, logfileindext__first <= i___1 and i___1 <= 
          logfileindext__last -> 0 <= element(element(fileages, [i___1]), [
          i___2]) and element(element(fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H8:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H3:  loop__2__j >= 1
<S>  New H6:  fld_lasti(usedlogfiles) >= 1
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H25:  element(fld_list(usedlogfiles), [loop__2__j]) >= 1
<S>  New H34:  fld_lasti(usedlogfiles) >= 0
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= logfileindext__last -> 0 <= 
          element(element(fileages, [i___1]), [i___2]) and element(element(
          fileages, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H2:  loop__1__i <= 17
<S>  New H4:  loop__2__j <= 17
<S>  New H7:  fld_lasti(usedlogfiles) <= 17
<S>  New H26:  element(fld_list(usedlogfiles), [loop__2__j]) <= 17
<S>  New H35:  fld_lasti(usedlogfiles) <= 16
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H14:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
<S>  New H24:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 21 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 17 -> 0 <= element(element(
          fileages, [i___1]), [i___2]) and element(element(fileages, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H13:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
***  Proved C2:  fld_length(usedlogfiles) <= 16
     using hypotheses H2 & H11.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_30.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
***  Proved C1:  loop__1__i >= logfileindext__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= logfileindext__last
     using hypothesis H2.
***  Proved C3:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H34.
***  Proved C4:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H35.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_31.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  true
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H21).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H28 on reading formula in, to give:
     %%%  H28:  true
%%%  Simplified H29 on reading formula in, to give:
     %%%  H29:  logfileindext__first <= logfileindext__last
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  1 >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  1 <= logfilecountt__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  true
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  logfileindext__first <= logfileindext__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [logfileindext__first], loop__1__i), [n_]) 
          and element(update(fld_list(usedlogfiles), [logfileindext__first], 
          loop__1__i), [n_]) <= logfileindext__last)
***  Proved C1:  1 >= logfilecountt__first
     using hypothesis H24.
***  Proved C2:  1 <= logfilecountt__last
     using hypothesis H25.
***  Proved C3:  true
***  Proved C4:  logfileindext__first <= logfileindext__last
     using hypothesis H21.
***  Proved C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H9.
***  Proved C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [logfileindext__first], loop__1__i), [n_]) 
          and element(update(fld_list(usedlogfiles), [logfileindext__first], 
          loop__1__i), [n_]) <= logfileindext__last)
     using hypotheses H1, H2, H10 & H21.
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_32.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
***  Proved C1:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H3.
***  Proved C2:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H4.
***  Proved C3:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C4:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H9.
***  Proved C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H10.
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_33.  @@@@@@@@@@
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
***  Proved C1:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H3.
***  Proved C2:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H4.
***  Proved C3:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C4:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H9.
***  Proved C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H10.
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_34.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H35 on reading formula in, to give:
     %%%  H35:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_lasti(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  fld_lasti(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified H43 on reading formula in, to give:
     %%%  H43:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> fld_lasti(
          usedlogfiles) + 1 >= logfileindext__first and fld_lasti(usedlogfiles) 
          + 1 <= logfileindext__last
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1 -> loop__2__j + 1 
          >= logfileindext__first and loop__2__j + 1 <= logfileindext__last
%%%  Simplified H45 on reading formula in, to give:
     %%%  H45:  not loop__2__j + 1 <= fld_lasti(usedlogfiles) + 1
---  Hypothesis H46 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H47 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H48 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H49 has been replaced by "true".  (It is already present, as H4)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) and element(
          update(fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) <= 
          logfileindext__last)
***  Proved C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
     using hypothesis H35.
***  Proved C2:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
     using hypothesis H36.
***  Proved C3:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H33.
***  Proved C4:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H34.
***  Proved C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) and element(
          update(fld_list(usedlogfiles), [loop__2__j], loop__1__i), [n_]) <= 
          logfileindext__last)
     using hypotheses H1, H2, H3, H4 & H14.
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_35.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
---  Hypothesis H38 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H39 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [fld_lasti(usedlogfiles) + 1], loop__1__i), [
          n_]) and element(update(fld_list(usedlogfiles), [fld_lasti(
          usedlogfiles) + 1], loop__1__i), [n_]) <= logfileindext__last)
***  Proved C1:  fld_length(usedlogfiles) + 1 >= logfilecountt__first
     using hypothesis H36.
***  Proved C2:  fld_length(usedlogfiles) + 1 <= logfilecountt__last
     using hypothesis H37.
***  Proved C3:  fld_lasti(usedlogfiles) + 1 >= logfileindext__first
     using hypothesis H34.
***  Proved C4:  fld_lasti(usedlogfiles) + 1 <= logfileindext__last
     using hypothesis H35.
***  Proved C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(
          fld_list(usedlogfiles), [fld_lasti(usedlogfiles) + 1], loop__1__i), [
          n_]) and element(update(fld_list(usedlogfiles), [fld_lasti(
          usedlogfiles) + 1], loop__1__i), [n_]) <= logfileindext__last)
     using hypotheses H1, H2, H14, H34 & H35.
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_36.  @@@@@@@@@@
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H24 on reading formula in, to give:
     %%%  H24:  for_all(i___2 : integer, clock__timetexti__first <= i___2 and 
          i___2 <= clock__timetexti__last -> for_all(i___1 : integer, 
          logfileindext__first <= i___1 and i___1 <= logfileindext__last -> 
          character__first <= element(element(fileages, [i___1]), [i___2]) and 
          element(element(fileages, [i___1]), [i___2]) <= character__last))
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
***  Proved C1:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H8.
***  Proved C2:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H9.
***  Proved C3:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H6.
***  Proved C4:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H7.
***  Proved C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H13.
***  Proved C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
     using hypothesis H14.
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_37.  @@@@@@@@@@
%%%  Simplified H17 on reading formula in, to give:
     %%%  H17:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H18 on reading formula in, to give:
     %%%  H18:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H30 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H40 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H41 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H43 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H44 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H45 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H46 has been replaced by "true".  (It is already present, as H4)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fld_length(usedlogfiles) >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  fld_length(usedlogfiles) <= logfilecountt__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  fld_lasti(usedlogfiles) >= logfileindext__first
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  fld_lasti(usedlogfiles) <= logfileindext__last
%%%  Simplified C5 on reading formula in, to give:
     %%%  C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(update(
          fld_list(usedlogfiles), [loop__3__k], element(fld_list(usedlogfiles), 
          [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) and element(
          update(update(fld_list(usedlogfiles), [loop__3__k], element(fld_list(
          usedlogfiles), [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) 
          <= logfileindext__last)
***  Proved C1:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H12.
***  Proved C2:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H13.
***  Proved C3:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H10.
***  Proved C4:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H11.
***  Proved C5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
     using hypothesis H17.
***  Proved C6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(update(update(
          fld_list(usedlogfiles), [loop__3__k], element(fld_list(usedlogfiles), 
          [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) and element(
          update(update(fld_list(usedlogfiles), [loop__3__k], element(fld_list(
          usedlogfiles), [loop__3__k - 1])), [loop__2__j], loop__1__i), [n_]) 
          <= logfileindext__last)
     using hypotheses H1, H2, H3, H4, H5, H6, H18, H34 & H35.
***  Proved C7:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_38.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
***  Proved C1:  true
***  Proved C2:  logfileindext__first <= logfileindext__last
     using hypotheses H3 & H4.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_39.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  true
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
***  Proved C1:  true
***  Proved C2:  logfileindext__first <= logfileindext__last
     using hypothesis H10.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_40.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  true
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
***  Proved C1:  true
***  Proved C2:  logfileindext__first <= logfileindext__last
     using hypothesis H10.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_41.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  true
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
***  Proved C1:  1 >= logfilecountt__first
     using hypotheses H1 & H8.
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H2:  fld_length(usedlogfiles) <= 17
<S>  New C2:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_42.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  true
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  true
%%%  Simplified C4 on reading formula in, to give:
     %%%  C4:  logfileindext__first <= logfileindext__last
***  Proved C1:  true
***  Proved C2:  logfileindext__first <= logfileindext__last
     using hypothesis H10.
***  Proved C3:  true
***  Proved C4:  logfileindext__first <= logfileindext__last
     using hypothesis H10.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_43.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  true
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  true
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  logfileindext__first <= logfileindext__last
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  filestatust__first <= used
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  true
***  Proved C3:  true
***  Proved C4:  logfileindext__first <= logfileindext__last
     using hypothesis H10.
-S-  Applied substitution rule init_rules(67).
     This was achieved by replacing all occurrences of filestatust__first by:
          free.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(68).
     This was achieved by replacing all occurrences of filestatust__last by:
          used.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_44.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
***  Proved C1:  element(fld_list(usedlogfiles), [fld_lasti(usedlogfiles)]) >= 
          logfileindext__first
     using hypotheses H3, H4 & H6.
***  Proved C2:  element(fld_list(usedlogfiles), [fld_lasti(usedlogfiles)]) <= 
          logfileindext__last
     using hypotheses H3, H4 & H6.
***  Proved C3:  fld_lasti(usedlogfiles) >= logfileindext__first
     using hypothesis H3.
***  Proved C4:  fld_lasti(usedlogfiles) <= logfileindext__last
     using hypothesis H4.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_45.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  true
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  true
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  logfileindext__first <= logfileindext__last
%%%  Simplified H21 on reading formula in, to give:
     %%%  H21:  filestatust__first <= used
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  1 >= logfilecountt__first
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  1 <= logfilecountt__last
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  true
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  true
***  Proved C1:  1 >= logfilecountt__first
     using hypothesis H15.
***  Proved C2:  1 <= logfilecountt__last
     using hypothesis H16.
***  Proved C3:  true
***  Proved C4:  element(logfileentries, [logfileindext__first]) >= 
          fileentrycountt__first
     using hypotheses H5 & H10.
***  Proved C5:  element(logfileentries, [logfileindext__first]) <= 
          fileentrycountt__last
     using hypotheses H5 & H10.
***  Proved C6:  true
***  Proved C7:  logfileindext__first <= logfileindext__last
     using hypothesis H10.
***  Proved C8:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_46.  @@@@@@@@@@
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> fileentrycountt__first <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(n_ : integer, logfileindext__first <= n_ and n_ <= 
          logfileindext__last -> logfileindext__first <= element(fld_list(
          usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]) <= 
          logfileindext__last)
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H4)
          .
***  Proved C1:  fld_length(usedlogfiles) >= logfilecountt__first
     using hypothesis H1.
***  Proved C2:  fld_length(usedlogfiles) <= logfilecountt__last
     using hypothesis H2.
***  Proved C4:  element(logfileentries, [element(fld_list(usedlogfiles), [
          fld_lasti(usedlogfiles)])]) >= fileentrycountt__first
     using hypotheses H5, H9 & H10.
***  Proved C5:  element(logfileentries, [element(fld_list(usedlogfiles), [
          fld_lasti(usedlogfiles)])]) <= fileentrycountt__last
     using hypotheses H5, H9 & H10.
***  Proved C6:  element(fld_list(usedlogfiles), [fld_lasti(usedlogfiles)]) >= 
          logfileindext__first
     using hypothesis H9.
***  Proved C7:  element(fld_list(usedlogfiles), [fld_lasti(usedlogfiles)]) <= 
          logfileindext__last
     using hypothesis H10.
***  Proved C8:  true
>>>  Restructured hypothesis H8 into:
     >>>  H8:  fld_length(usedlogfiles) <> 0
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H1:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H2:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H3:  fld_lasti(usedlogfiles) >= 1
<S>  New H5:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H6:  for_all(n_ : integer, 1 <= n_ and n_ <= logfileindext__last -> 1 
          <= element(fld_list(usedlogfiles), [n_]) and element(fld_list(
          usedlogfiles), [n_]) <= logfileindext__last)
<S>  New H9:  element(fld_list(usedlogfiles), [fld_lasti(usedlogfiles)]) >= 1
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H4:  fld_lasti(usedlogfiles) <= 17
<S>  New H10:  element(fld_list(usedlogfiles), [fld_lasti(usedlogfiles)]) <= 17
<S>  New H5:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 
          fileentrycountt__first <= element(logfileentries, [n_]) and element(
          logfileentries, [n_]) <= fileentrycountt__last)
<S>  New H6:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 1 <= element(
          fld_list(usedlogfiles), [n_]) and element(fld_list(usedlogfiles), [n_]
          ) <= 17)
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H5:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 
          fileentrycountt__last)
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H5:  for_all(n_ : integer, 1 <= n_ and n_ <= 17 -> 0 <= element(
          logfileentries, [n_]) and element(logfileentries, [n_]) <= 1024)
%%%  Hypotheses H1 & H8 together imply that
          0 < fld_length(usedlogfiles).
     H1 & H8 have therefore been deleted and a new H13 added to this effect.
***  Proved C3:  fld_length(usedlogfiles) > 0
     using hypothesis H13.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_47.  @@@@@@@@@@
***  Proved C3:  currentlogfile >= logfileindext__first
     using hypothesis H6.
***  Proved C4:  currentlogfile <= logfileindext__last
     using hypothesis H7.
-S-  Applied substitution rule init_rules(94).
     This was achieved by replacing all occurrences of logentrycountt__first by:
          0.
<S>  New C1:  (fld_length(usedlogfiles) - 1) * maxlogfileentries + element(
          logfileentries, [currentlogfile]) >= 0
<S>  New C7:  fld_length(usedlogfiles) >= 1
-S-  Applied substitution rule init_rules(95).
     This was achieved by replacing all occurrences of logentrycountt__last by:
          17408.
<S>  New C2:  (fld_length(usedlogfiles) - 1) * maxlogfileentries + element(
          logfileentries, [currentlogfile]) <= 17408
<S>  New C8:  fld_length(usedlogfiles) <= 17409
***  Proved C7:  fld_length(usedlogfiles) >= 1
     using hypothesis H3.
-S-  Applied substitution rule init_rules(10).
     This was achieved by replacing all occurrences of maxlogfileentries by:
          1024.
<S>  New C5:  (fld_length(usedlogfiles) - 1) * 1024 >= 
          logentrycountt__base__first
<S>  New C6:  (fld_length(usedlogfiles) - 1) * 1024 <= 
          logentrycountt__base__last
<S>  New C1:  (fld_length(usedlogfiles) - 1) * 1024 + element(logfileentries, [
          currentlogfile]) >= 0
<S>  New C2:  (fld_length(usedlogfiles) - 1) * 1024 + element(logfileentries, [
          currentlogfile]) <= 17408
-S-  Applied substitution rule init_rules(55).
     This was achieved by replacing all occurrences of logfilecountt__first by:
          0.
<S>  New H1:  fld_length(usedlogfiles) >= 0
-S-  Applied substitution rule init_rules(56).
     This was achieved by replacing all occurrences of logfilecountt__last by:
          17.
<S>  New H2:  fld_length(usedlogfiles) <= 17
-S-  Applied substitution rule init_rules(61).
     This was achieved by replacing all occurrences of logfileindext__first by:
          1.
<S>  New H6:  currentlogfile >= 1
-S-  Applied substitution rule init_rules(62).
     This was achieved by replacing all occurrences of logfileindext__last by:
          17.
<S>  New H7:  currentlogfile <= 17
-S-  Applied substitution rule init_rules(100).
     This was achieved by replacing all occurrences of fileentrycountt__first 
          by:
          0.
<S>  New H4:  element(logfileentries, [currentlogfile]) >= 0
-S-  Applied substitution rule init_rules(101).
     This was achieved by replacing all occurrences of fileentrycountt__last by:
          1024.
<S>  New H5:  element(logfileentries, [currentlogfile]) <= 1024
***  Proved C8:  fld_length(usedlogfiles) <= 17409
     using hypothesis H2.
***  Proved C2:  (fld_length(usedlogfiles) - 1) * 1024 + element(
          logfileentries, [currentlogfile]) <= 17408
     via its standard form, which is:
     Std.Fm C2:  - 1024 + (element(logfileentries, [currentlogfile]) + 1024 * 
          fld_length(usedlogfiles)) <= 17408
     using hypotheses H2 & H5.
---  Eliminated hypothesis H8 (true-hypothesis).
---  Eliminated hypothesis H1 (redundant, given H3).
***  Proved C1:  (fld_length(usedlogfiles) - 1) * 1024 + element(
          logfileentries, [currentlogfile]) >= 0
     using hypotheses H3 & H4.
     +++  New H9:  integer__size >= 0
     +++  New H10:  character__size >= 0
     +++  New H11:  positive__size >= 0
     +++  New H12:  clock__timetexti__size >= 0
     +++  New H13:  alarmtypes__statust__size >= 0
     +++  New H14:  logfilecountt__size >= 0
     +++  New H15:  logfilecountt__base__first <= logfilecountt__base__last
     +++  New H16:  logfileindext__size >= 0
     +++  New H17:  logfileindext__base__first <= logfileindext__base__last
     +++  New H18:  filestatust__size >= 0
     +++  New H19:  logfilelistt__size >= 0
     +++  New H20:  logentrycountt__size >= 0
     +++  New H21:  logentrycountt__base__first <= logentrycountt__base__last
     +++  New H22:  fileentrycountt__size >= 0
     +++  New H23:  fileentrycountt__base__first <= fileentrycountt__base__last
     +++  New H24:  0 <= fld_length(emptylist)
     +++  New H25:  logfilecountt__base__first <= 0
     +++  New H26:  fld_length(emptylist) <= 17
     +++  New H27:  logfilecountt__base__last >= 17
     +++  New H28:  1 <= fld_head(emptylist)
     +++  New H29:  1 <= fld_lasti(emptylist)
     +++  New H30:  logfileindext__base__first <= 1
     +++  New H31:  fld_head(emptylist) <= 17
     +++  New H32:  fld_lasti(emptylist) <= 17
     +++  New H33:  logfileindext__base__last >= 17
     +++  New H34:  logentrycountt__base__first <= 0
     +++  New H35:  logentrycountt__base__last >= 17408
     +++  New H36:  fileentrycountt__base__first <= 0
     +++  New H37:  fileentrycountt__base__last >= 1024
***  Proved C9:  fld_length(usedlogfiles) - 1 >= logfilecountt__base__first
     via its standard form, which is:
     Std.Fm C9:  - logfilecountt__base__first + fld_length(usedlogfiles) > 0
     using hypotheses H3 & H25.
***  Proved C10:  fld_length(usedlogfiles) - 1 <= logfilecountt__base__last
     using hypotheses H2 & H27.
***  Proved C5:  (fld_length(usedlogfiles) - 1) * 1024 >= 
          logentrycountt__base__first
     via its standard form, which is:
     Std.Fm C5:  - logentrycountt__base__first + 1024 * fld_length(usedlogfiles)
           > 1023
     using hypotheses H3 & H34.
***  Proved C6:  (fld_length(usedlogfiles) - 1) * 1024 <= 
          logentrycountt__base__last
     via its standard form, which is:
     Std.Fm C6:  logentrycountt__base__last - 1024 * fld_length(usedlogfiles) > 
          - 1025
     using hypotheses H2 & H35.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_48.  @@@@@@@@@@
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  alarmtypes__statust__first <= alarmtypes__silent
-S-  Applied substitution rule init_rules(32).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__first by:
          alarmtypes__alarming.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(33).
     This was achieved by replacing all occurrences of 
          alarmtypes__statust__last by:
          alarmtypes__silent.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_49.  @@@@@@@@@@
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H19 on reading formula in, to give:
     %%%  H19:  alarmtypes__statust__first <= alarmtypes__silent
%%%  Simplified H21 on reading formula in, to give:
     %%%  H21:  alarmtypes__statust__first <= auditalarm__3
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  true
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_50.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_51.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.

