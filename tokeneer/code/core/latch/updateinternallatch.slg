*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:10  SIMPLIFIED 05-SEP-2011, 15:41:36

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure Latch.UpdateInternalLatch






RRS  The following user defined rule files have been read:
&&&  d:/sparkdev/tis2011/code/core/latch/latch.rlu
&&&  d:/sparkdev/tis2011/code/core/latch/updateinternallatch.rlu
SEM  No semantic checks are performed on the rules.


@@@@@@@@@@  VC: procedure_updateinternallatch_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= locked
-S-  Applied substitution rule updateintern_rules(134).
     This was achieved by replacing all occurrences of t__first by:
          locked.
<S>  New H2:  locked <= currentlatch
<S>  New C1:  true
-S-  Applied substitution rule updateintern_rules(135).
     This was achieved by replacing all occurrences of t__last by:
          unlocked.
<S>  New H3:  currentlatch <= unlocked
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_2.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= locked
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__elementt__first <= audittypes__latchlocked
-S-  Applied substitution rule updateintern_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C1:  true
-S-  Applied substitution rule updateintern_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_3.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= unlocked
-S-  Applied substitution rule updateintern_rules(134).
     This was achieved by replacing all occurrences of t__first by:
          locked.
<S>  New H2:  locked <= currentlatch
<S>  New C1:  true
-S-  Applied substitution rule updateintern_rules(135).
     This was achieved by replacing all occurrences of t__last by:
          unlocked.
<S>  New H3:  currentlatch <= unlocked
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_4.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= unlocked
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__elementt__first <= audittypes__latchunlocked
-S-  Applied substitution rule updateintern_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C1:  true
-S-  Applied substitution rule updateintern_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_5.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= locked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__information
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__latchlocked
***  Proved C3:  audittypes__elementt__first <= audittypes__latchlocked
     using hypothesis H9.
***  Proved C4:  audittypes__latchlocked <= audittypes__elementt__last
     using hypothesis H10.
-S-  Applied substitution rule updateintern_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule updateintern_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_6.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= unlocked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchunlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__information
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__latchunlocked
***  Proved C3:  audittypes__elementt__first <= audittypes__latchunlocked
     using hypothesis H9.
***  Proved C4:  audittypes__latchunlocked <= audittypes__elementt__last
     using hypothesis H10.
-S-  Applied substitution rule updateintern_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule updateintern_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_7.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= locked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H16 on reading formula in, to give:
     %%%  H16:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H8)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= locked
***  Proved C1:  t__first <= locked
     using hypothesis H7.
***  Proved C2:  locked <= t__last
     using hypothesis H8.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_8.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= unlocked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchunlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H16 on reading formula in, to give:
     %%%  H16:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H8)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= unlocked
***  Proved C1:  t__first <= unlocked
     using hypothesis H7.
***  Proved C2:  unlocked <= t__last
     using hypothesis H8.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_9.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= locked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H8)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= locked
***  Proved C1:  t__first <= locked
     using hypothesis H7.
***  Proved C2:  locked <= t__last
     using hypothesis H8.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_10.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= unlocked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchunlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H8)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  t__first <= unlocked
***  Proved C1:  t__first <= unlocked
     using hypothesis H7.
***  Proved C2:  unlocked <= t__last
     using hypothesis H8.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_11.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= locked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H16 on reading formula in, to give:
     %%%  H16:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H8)
          .
-S-  Applied substitution rule updateintern_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H9:  true
-S-  Applied substitution rule updateintern_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H10:  true
-S-  Applied substitution rule updateintern_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H16:  true
-S-  Applied substitution rule updateintern_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H17:  true
-S-  Applied substitution rule updateintern_rules(134).
     This was achieved by replacing all occurrences of t__first by:
          locked.
<S>  New H2:  locked <= currentlatch
<S>  New H7:  true
-S-  Applied substitution rule updateintern_rules(135).
     This was achieved by replacing all occurrences of t__last by:
          unlocked.
<S>  New H3:  currentlatch <= unlocked
<S>  New H8:  true
%%%  Hypotheses H2 & H13 together imply that
          locked < currentlatch.
     H2 & H13 have therefore been deleted and a new H24 added to this effect.
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H4 (true-hypothesis).
---  Eliminated hypothesis H5 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H7 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
     +++  New H25:  audittypes__elementt__size >= 0
     +++  New H26:  audittypes__severityt__size >= 0
     +++  New H27:  t__size >= 0
***  Proved C1:  islocked(locked) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
     This was achieved by applying the rewrite rule latch_user(2)
     [from rulefile latch.rlu] to rewrite this conclusion to:
<S>  C1:  locked = locked <-> clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), latchtimeout)
     This rule could be applied because its side-condition holds, as follows:
     <<<  From H6, proved: locked = locked <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
***  PROVED VC.

VCN  11: Summary of user rule application.
FIL  latch.rlu
RUL     latch_user(2)
CON        1


@@@@@@@@@@  VC: procedure_updateinternallatch_12.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= unlocked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchunlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H16 on reading formula in, to give:
     %%%  H16:  audittypes__severityt__first <= audittypes__information
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H21 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H22 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H23 has been replaced by "true".  (It is already present, as H8)
          .
-S-  Applied substitution rule updateintern_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H9:  true
-S-  Applied substitution rule updateintern_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H10:  true
-S-  Applied substitution rule updateintern_rules(109).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New H16:  true
-S-  Applied substitution rule updateintern_rules(110).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New H17:  true
-S-  Applied substitution rule updateintern_rules(134).
     This was achieved by replacing all occurrences of t__first by:
          locked.
<S>  New H2:  locked <= currentlatch
<S>  New H7:  true
-S-  Applied substitution rule updateintern_rules(135).
     This was achieved by replacing all occurrences of t__last by:
          unlocked.
<S>  New H3:  currentlatch <= unlocked
<S>  New H8:  true
%%%  Hypotheses H3 & H13 together imply that
          currentlatch < unlocked.
     H3 & H13 have therefore been deleted and a new H24 added to this effect.
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H4 (true-hypothesis).
---  Eliminated hypothesis H5 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H7 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
     +++  New H25:  audittypes__elementt__size >= 0
     +++  New H26:  audittypes__severityt__size >= 0
     +++  New H27:  t__size >= 0
***  Proved C1:  islocked(unlocked) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
     This was achieved by applying the rewrite rule latch_user(2)
     [from rulefile latch.rlu] to rewrite this conclusion to:
<S>  C1:  unlocked = locked <-> clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), latchtimeout)
     This rule could be applied because its side-condition holds, as follows:
     <<<  From H6, proved: unlocked = locked <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
***  PROVED VC.

VCN  12: Summary of user rule application.
FIL  latch.rlu
RUL     latch_user(2)
CON        1


@@@@@@@@@@  VC: procedure_updateinternallatch_13.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= locked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H8)
          .
>>>  Restructured hypothesis H13 into:
     >>>  H13:  currentlatch = locked
-S-  Applied substitution rule updateintern_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H9:  true
-S-  Applied substitution rule updateintern_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H10:  true
-S-  Applied substitution rule updateintern_rules(134).
     This was achieved by replacing all occurrences of t__first by:
          locked.
<S>  New H2:  locked <= currentlatch
<S>  New H7:  true
-S-  Applied substitution rule updateintern_rules(135).
     This was achieved by replacing all occurrences of t__last by:
          unlocked.
<S>  New H3:  currentlatch <= unlocked
<S>  New H8:  true
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H4 (true-hypothesis).
---  Eliminated hypothesis H5 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H7 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
-S-  Eliminated hypothesis H13.
     This was achieved by replacing all occurrences of currentlatch by:
          locked.
<S>  New H2:  true
<S>  New H3:  true
---  Eliminated hypothesis H2 (true-hypothesis).
---  Eliminated hypothesis H3 (true-hypothesis).
     +++  New H18:  audittypes__elementt__size >= 0
     +++  New H19:  audittypes__severityt__size >= 0
     +++  New H20:  t__size >= 0
***  Proved C1:  islocked(locked) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
     This was achieved by applying the rewrite rule latch_user(2)
     [from rulefile latch.rlu] to rewrite this conclusion to:
<S>  C1:  locked = locked <-> clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), latchtimeout)
     This rule could be applied because its side-condition holds, as follows:
     <<<  From H6, proved: locked = locked <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
***  PROVED VC.

VCN  13: Summary of user rule application.
FIL  latch.rlu
RUL     latch_user(2)
CON        1


@@@@@@@@@@  VC: procedure_updateinternallatch_14.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  t__first <= currentlatch
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= unlocked
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  audittypes__elementt__first <= audittypes__latchunlocked
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H8)
          .
>>>  Restructured hypothesis H13 into:
     >>>  H13:  currentlatch = unlocked
-S-  Applied substitution rule updateintern_rules(2).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New H9:  true
-S-  Applied substitution rule updateintern_rules(3).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New H10:  true
-S-  Applied substitution rule updateintern_rules(134).
     This was achieved by replacing all occurrences of t__first by:
          locked.
<S>  New H2:  locked <= currentlatch
<S>  New H7:  true
-S-  Applied substitution rule updateintern_rules(135).
     This was achieved by replacing all occurrences of t__last by:
          unlocked.
<S>  New H3:  currentlatch <= unlocked
<S>  New H8:  true
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H4 (true-hypothesis).
---  Eliminated hypothesis H5 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H7 (true-hypothesis).
---  Eliminated hypothesis H8 (true-hypothesis).
-S-  Eliminated hypothesis H13.
     This was achieved by replacing all occurrences of currentlatch by:
          unlocked.
<S>  New H2:  true
<S>  New H3:  true
---  Eliminated hypothesis H2 (true-hypothesis).
---  Eliminated hypothesis H3 (true-hypothesis).
     +++  New H18:  audittypes__elementt__size >= 0
     +++  New H19:  audittypes__severityt__size >= 0
     +++  New H20:  t__size >= 0
***  Proved C1:  islocked(unlocked) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
     This was achieved by applying the rewrite rule latch_user(2)
     [from rulefile latch.rlu] to rewrite this conclusion to:
<S>  C1:  unlocked = locked <-> clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), latchtimeout)
     This rule could be applied because its side-condition holds, as follows:
     <<<  From H6, proved: unlocked = locked <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latchtimeout)
***  PROVED VC.

VCN  14: Summary of user rule application.
FIL  latch.rlu
RUL     latch_user(2)
CON        1


@@@@@@@@@@  VC: procedure_updateinternallatch_15.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_updateinternallatch_16.  @@@@@@@@@@
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  latchtimeout = fld_latchtimeout(state~)
%%%  Simplified H5 on reading formula in, to give:
     %%%  H5:  currentlatch~ = fld_currentlatch(state~)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  t__first <= currentlatch~
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  currentlatch~ <= t__last
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  t__first <= currentlatch
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  prf_latchtimeout(state) = prf_latchtimeout(state~)
-S-  Applied substitution rule updateintern_rules(134).
     This was achieved by replacing all occurrences of t__first by:
          locked.
<S>  New H7:  locked <= currentlatch~
<S>  New H9:  locked <= currentlatch
-S-  Applied substitution rule updateintern_rules(135).
     This was achieved by replacing all occurrences of t__last by:
          unlocked.
<S>  New H8:  currentlatch~ <= unlocked
<S>  New H10:  currentlatch <= unlocked
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H2 (true-hypothesis).
-S-  Eliminated hypothesis H3.
     This was achieved by replacing all occurrences of latchtimeout by:
          fld_latchtimeout(state~).
<S>  New H4:  fld_latchtimeout(state~) = fld_latchtimeout(state)
<S>  New H11:  islocked(currentlatch) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), fld_latchtimeout(state~))
-S-  Eliminated hypothesis H6.
     This was achieved by replacing all occurrences of currentlatch by:
          fld_currentlatch(state).
<S>  New H9:  locked <= fld_currentlatch(state)
<S>  New H10:  fld_currentlatch(state) <= unlocked
<S>  New H11:  islocked(fld_currentlatch(state)) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), fld_latchtimeout(state~))
     +++  New H12:  audittypes__elementt__size >= 0
     +++  New H13:  audittypes__severityt__size >= 0
     +++  New H14:  t__size >= 0
***  Proved C1:  latch__islocked(state) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), prf_latchtimeout(state))
     This was achieved by applying the inference rule updateinternallatch_user(
          1)
     [from rulefile updateinternallatch.rlu] to infer this conclusion from its 
          side-conditions,
     which were established as follows:
     <<<  From H11, proved: islocked(fld_currentlatch(state)) <-> 
          clock__greaterthanorequal(clock__thecurrenttime(clock__currenttime), 
          fld_latchtimeout(state~))
     <<<  From H4, proved: fld_latchtimeout(state~) = fld_latchtimeout(state)
+++  New H15:  prf_latchtimeout(state~) = fld_latchtimeout(state)
     This was achieved by applying the rewrite rule latch_user(1)
     [from rulefile latch.rlu] to rewrite existing hypothesis H4 to give the 
          above formula.
     This rule has an empty list of side-conditions.
***  Proved C2:  prf_latchtimeout(state) = prf_latchtimeout(state~)
     This was achieved by applying the rewrite rule latch_user(1)
     [from rulefile latch.rlu] to rewrite this conclusion to:
<S>  C2:  fld_latchtimeout(state) = prf_latchtimeout(state~)
     This rule could be applied because its side-condition holds, as follows:
     <<<  From H15, proved: fld_latchtimeout(state) = prf_latchtimeout(state~)
***  PROVED VC.

VCN  16: Summary of user rule application.
FIL  updateinternallatch.rlu
RUL     updateinternallatch_user(1)
CON        1
FIL  latch.rlu
RUL     latch_user(1)
CON        2
HYP        15


OVR  Overall summary of VCs using user rules.
FIL  latch.rlu
RUL     latch_user(2)
VCS        11, 12, 13, 14
RUL     latch_user(1)
VCS        16
FIL  updateinternallatch.rlu
RUL     updateinternallatch_user(1)
VCS        16

