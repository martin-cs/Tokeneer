           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:24.54*/

                       /*procedure UserEntry.UnlockDoor*/


rule_family unlockdoor_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

unlockdoor_rules(1): integer__size >= 0 may_be_deduced.
unlockdoor_rules(2): integer__first may_be_replaced_by -2147483648.
unlockdoor_rules(3): integer__last may_be_replaced_by 2147483647.
unlockdoor_rules(4): integer__base__first may_be_replaced_by -2147483648.
unlockdoor_rules(5): integer__base__last may_be_replaced_by 2147483647.
unlockdoor_rules(6): character__size >= 0 may_be_deduced.
unlockdoor_rules(7): character__first may_be_replaced_by 0.
unlockdoor_rules(8): character__last may_be_replaced_by 255.
unlockdoor_rules(9): character__base__first may_be_replaced_by 0.
unlockdoor_rules(10): character__base__last may_be_replaced_by 255.
unlockdoor_rules(11): positive__size >= 0 may_be_deduced.
unlockdoor_rules(12): positive__first may_be_replaced_by 1.
unlockdoor_rules(13): positive__last may_be_replaced_by 2147483647.
unlockdoor_rules(14): positive__base__first may_be_replaced_by -2147483648.
unlockdoor_rules(15): positive__base__last may_be_replaced_by 2147483647.
unlockdoor_rules(16): audittypes__elementt__size >= 0 may_be_deduced.
unlockdoor_rules(17): audittypes__elementt__first may_be_replaced_by audittypes__startunenrolledtis.
unlockdoor_rules(18): audittypes__elementt__last may_be_replaced_by audittypes__systemfault.
unlockdoor_rules(19): audittypes__elementt__base__first may_be_replaced_by audittypes__startunenrolledtis.
unlockdoor_rules(20): audittypes__elementt__base__last may_be_replaced_by audittypes__systemfault.
unlockdoor_rules(21): audittypes__elementt__pos(
     audittypes__elementt__first) may_be_replaced_by 0.
unlockdoor_rules(22): audittypes__elementt__pos(
     audittypes__startunenrolledtis) may_be_replaced_by 0.
unlockdoor_rules(23): audittypes__elementt__val(0) may_be_replaced_by 
     audittypes__startunenrolledtis.
unlockdoor_rules(24): audittypes__elementt__pos(
     audittypes__startenrolledtis) may_be_replaced_by 1.
unlockdoor_rules(25): audittypes__elementt__val(1) may_be_replaced_by 
     audittypes__startenrolledtis.
unlockdoor_rules(26): audittypes__elementt__pos(
     audittypes__enrolmentcomplete) may_be_replaced_by 2.
unlockdoor_rules(27): audittypes__elementt__val(2) may_be_replaced_by 
     audittypes__enrolmentcomplete.
unlockdoor_rules(28): audittypes__elementt__pos(
     audittypes__enrolmentfailed) may_be_replaced_by 3.
unlockdoor_rules(29): audittypes__elementt__val(3) may_be_replaced_by 
     audittypes__enrolmentfailed.
unlockdoor_rules(30): audittypes__elementt__pos(
     audittypes__displaychanged) may_be_replaced_by 4.
unlockdoor_rules(31): audittypes__elementt__val(4) may_be_replaced_by 
     audittypes__displaychanged.
unlockdoor_rules(32): audittypes__elementt__pos(
     audittypes__screenchanged) may_be_replaced_by 5.
unlockdoor_rules(33): audittypes__elementt__val(5) may_be_replaced_by 
     audittypes__screenchanged.
unlockdoor_rules(34): audittypes__elementt__pos(
     audittypes__doorclosed) may_be_replaced_by 6.
unlockdoor_rules(35): audittypes__elementt__val(6) may_be_replaced_by 
     audittypes__doorclosed.
unlockdoor_rules(36): audittypes__elementt__pos(
     audittypes__dooropened) may_be_replaced_by 7.
unlockdoor_rules(37): audittypes__elementt__val(7) may_be_replaced_by 
     audittypes__dooropened.
unlockdoor_rules(38): audittypes__elementt__pos(
     audittypes__latchlocked) may_be_replaced_by 8.
unlockdoor_rules(39): audittypes__elementt__val(8) may_be_replaced_by 
     audittypes__latchlocked.
unlockdoor_rules(40): audittypes__elementt__pos(
     audittypes__latchunlocked) may_be_replaced_by 9.
unlockdoor_rules(41): audittypes__elementt__val(9) may_be_replaced_by 
     audittypes__latchunlocked.
unlockdoor_rules(42): audittypes__elementt__pos(
     audittypes__alarmraised) may_be_replaced_by 10.
unlockdoor_rules(43): audittypes__elementt__val(10) may_be_replaced_by 
     audittypes__alarmraised.
unlockdoor_rules(44): audittypes__elementt__pos(
     audittypes__alarmsilenced) may_be_replaced_by 11.
unlockdoor_rules(45): audittypes__elementt__val(11) may_be_replaced_by 
     audittypes__alarmsilenced.
unlockdoor_rules(46): audittypes__elementt__pos(
     audittypes__truncatelog) may_be_replaced_by 12.
unlockdoor_rules(47): audittypes__elementt__val(12) may_be_replaced_by 
     audittypes__truncatelog.
unlockdoor_rules(48): audittypes__elementt__pos(
     audittypes__auditalarmraised) may_be_replaced_by 13.
unlockdoor_rules(49): audittypes__elementt__val(13) may_be_replaced_by 
     audittypes__auditalarmraised.
unlockdoor_rules(50): audittypes__elementt__pos(
     audittypes__auditalarmsilenced) may_be_replaced_by 14.
unlockdoor_rules(51): audittypes__elementt__val(14) may_be_replaced_by 
     audittypes__auditalarmsilenced.
unlockdoor_rules(52): audittypes__elementt__pos(
     audittypes__usertokenremoved) may_be_replaced_by 15.
unlockdoor_rules(53): audittypes__elementt__val(15) may_be_replaced_by 
     audittypes__usertokenremoved.
unlockdoor_rules(54): audittypes__elementt__pos(
     audittypes__usertokenpresent) may_be_replaced_by 16.
unlockdoor_rules(55): audittypes__elementt__val(16) may_be_replaced_by 
     audittypes__usertokenpresent.
unlockdoor_rules(56): audittypes__elementt__pos(
     audittypes__usertokeninvalid) may_be_replaced_by 17.
unlockdoor_rules(57): audittypes__elementt__val(17) may_be_replaced_by 
     audittypes__usertokeninvalid.
unlockdoor_rules(58): audittypes__elementt__pos(
     audittypes__authcertvalid) may_be_replaced_by 18.
unlockdoor_rules(59): audittypes__elementt__val(18) may_be_replaced_by 
     audittypes__authcertvalid.
unlockdoor_rules(60): audittypes__elementt__pos(
     audittypes__authcertinvalid) may_be_replaced_by 19.
unlockdoor_rules(61): audittypes__elementt__val(19) may_be_replaced_by 
     audittypes__authcertinvalid.
unlockdoor_rules(62): audittypes__elementt__pos(
     audittypes__fingerdetected) may_be_replaced_by 20.
unlockdoor_rules(63): audittypes__elementt__val(20) may_be_replaced_by 
     audittypes__fingerdetected.
unlockdoor_rules(64): audittypes__elementt__pos(
     audittypes__fingertimeout) may_be_replaced_by 21.
unlockdoor_rules(65): audittypes__elementt__val(21) may_be_replaced_by 
     audittypes__fingertimeout.
unlockdoor_rules(66): audittypes__elementt__pos(
     audittypes__fingermatched) may_be_replaced_by 22.
unlockdoor_rules(67): audittypes__elementt__val(22) may_be_replaced_by 
     audittypes__fingermatched.
unlockdoor_rules(68): audittypes__elementt__pos(
     audittypes__fingernotmatched) may_be_replaced_by 23.
unlockdoor_rules(69): audittypes__elementt__val(23) may_be_replaced_by 
     audittypes__fingernotmatched.
unlockdoor_rules(70): audittypes__elementt__pos(
     audittypes__authcertwritten) may_be_replaced_by 24.
unlockdoor_rules(71): audittypes__elementt__val(24) may_be_replaced_by 
     audittypes__authcertwritten.
unlockdoor_rules(72): audittypes__elementt__pos(
     audittypes__authcertwritefailed) may_be_replaced_by 25.
unlockdoor_rules(73): audittypes__elementt__val(25) may_be_replaced_by 
     audittypes__authcertwritefailed.
unlockdoor_rules(74): audittypes__elementt__pos(
     audittypes__entrypermitted) may_be_replaced_by 26.
unlockdoor_rules(75): audittypes__elementt__val(26) may_be_replaced_by 
     audittypes__entrypermitted.
unlockdoor_rules(76): audittypes__elementt__pos(
     audittypes__entrytimeout) may_be_replaced_by 27.
unlockdoor_rules(77): audittypes__elementt__val(27) may_be_replaced_by 
     audittypes__entrytimeout.
unlockdoor_rules(78): audittypes__elementt__pos(
     audittypes__entrydenied) may_be_replaced_by 28.
unlockdoor_rules(79): audittypes__elementt__val(28) may_be_replaced_by 
     audittypes__entrydenied.
unlockdoor_rules(80): audittypes__elementt__pos(
     audittypes__admintokenpresent) may_be_replaced_by 29.
unlockdoor_rules(81): audittypes__elementt__val(29) may_be_replaced_by 
     audittypes__admintokenpresent.
unlockdoor_rules(82): audittypes__elementt__pos(
     audittypes__admintokenvalid) may_be_replaced_by 30.
unlockdoor_rules(83): audittypes__elementt__val(30) may_be_replaced_by 
     audittypes__admintokenvalid.
unlockdoor_rules(84): audittypes__elementt__pos(
     audittypes__admintokeninvalid) may_be_replaced_by 31.
unlockdoor_rules(85): audittypes__elementt__val(31) may_be_replaced_by 
     audittypes__admintokeninvalid.
unlockdoor_rules(86): audittypes__elementt__pos(
     audittypes__admintokenexpired) may_be_replaced_by 32.
unlockdoor_rules(87): audittypes__elementt__val(32) may_be_replaced_by 
     audittypes__admintokenexpired.
unlockdoor_rules(88): audittypes__elementt__pos(
     audittypes__admintokenremoved) may_be_replaced_by 33.
unlockdoor_rules(89): audittypes__elementt__val(33) may_be_replaced_by 
     audittypes__admintokenremoved.
unlockdoor_rules(90): audittypes__elementt__pos(
     audittypes__invalidoprequest) may_be_replaced_by 34.
unlockdoor_rules(91): audittypes__elementt__val(34) may_be_replaced_by 
     audittypes__invalidoprequest.
unlockdoor_rules(92): audittypes__elementt__pos(
     audittypes__operationstart) may_be_replaced_by 35.
unlockdoor_rules(93): audittypes__elementt__val(35) may_be_replaced_by 
     audittypes__operationstart.
unlockdoor_rules(94): audittypes__elementt__pos(
     audittypes__archivelog) may_be_replaced_by 36.
unlockdoor_rules(95): audittypes__elementt__val(36) may_be_replaced_by 
     audittypes__archivelog.
unlockdoor_rules(96): audittypes__elementt__pos(
     audittypes__archivecomplete) may_be_replaced_by 37.
unlockdoor_rules(97): audittypes__elementt__val(37) may_be_replaced_by 
     audittypes__archivecomplete.
unlockdoor_rules(98): audittypes__elementt__pos(
     audittypes__archivecheckfailed) may_be_replaced_by 38.
unlockdoor_rules(99): audittypes__elementt__val(38) may_be_replaced_by 
     audittypes__archivecheckfailed.
unlockdoor_rules(100): audittypes__elementt__pos(
     audittypes__updatedconfigdata) may_be_replaced_by 39.
unlockdoor_rules(101): audittypes__elementt__val(39) may_be_replaced_by 
     audittypes__updatedconfigdata.
unlockdoor_rules(102): audittypes__elementt__pos(
     audittypes__invalidconfigdata) may_be_replaced_by 40.
unlockdoor_rules(103): audittypes__elementt__val(40) may_be_replaced_by 
     audittypes__invalidconfigdata.
unlockdoor_rules(104): audittypes__elementt__pos(
     audittypes__shutdown) may_be_replaced_by 41.
unlockdoor_rules(105): audittypes__elementt__val(41) may_be_replaced_by 
     audittypes__shutdown.
unlockdoor_rules(106): audittypes__elementt__pos(
     audittypes__overridelock) may_be_replaced_by 42.
unlockdoor_rules(107): audittypes__elementt__val(42) may_be_replaced_by 
     audittypes__overridelock.
unlockdoor_rules(108): audittypes__elementt__pos(
     audittypes__systemfault) may_be_replaced_by 43.
unlockdoor_rules(109): audittypes__elementt__val(43) may_be_replaced_by 
     audittypes__systemfault.
unlockdoor_rules(110): audittypes__elementt__pos(
     audittypes__elementt__last) may_be_replaced_by 43.
unlockdoor_rules(111): audittypes__elementt__pos(succ(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) + 1
     if [X <=audittypes__systemfault, X <> 
     audittypes__systemfault].
unlockdoor_rules(112): audittypes__elementt__pos(pred(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) - 1
     if [X >=audittypes__startunenrolledtis, X <> 
     audittypes__startunenrolledtis].
unlockdoor_rules(113): audittypes__elementt__pos(X) >= 0 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
unlockdoor_rules(114): audittypes__elementt__pos(X) <= 43 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
unlockdoor_rules(115): audittypes__elementt__val(X) >= 
     audittypes__startunenrolledtis may_be_deduced_from
     [0 <= X, X <= 43].
unlockdoor_rules(116): audittypes__elementt__val(X) <= 
     audittypes__systemfault may_be_deduced_from
     [0 <= X, X <= 43].
unlockdoor_rules(117): succ(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X+1)
     if [0 <= X, X < 43].
unlockdoor_rules(118): pred(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X-1)
     if [0 < X, X <= 43].
unlockdoor_rules(119): audittypes__elementt__pos(
     audittypes__elementt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 43].
unlockdoor_rules(120): audittypes__elementt__val(
     audittypes__elementt__pos(X)) may_be_replaced_by X
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
unlockdoor_rules(121): audittypes__elementt__pos(X) <= 
     audittypes__elementt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault, audittypes__startunenrolledtis <= Y, Y <= 
     audittypes__systemfault].
unlockdoor_rules(122): audittypes__elementt__val(X) <= 
     audittypes__elementt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 43, 0 <= Y, Y <= 43].
unlockdoor_rules(123): audittypes__severityt__size >= 0 may_be_deduced.
unlockdoor_rules(124): audittypes__severityt__first may_be_replaced_by audittypes__information.
unlockdoor_rules(125): audittypes__severityt__last may_be_replaced_by audittypes__critical.
unlockdoor_rules(126): audittypes__severityt__base__first may_be_replaced_by audittypes__information.
unlockdoor_rules(127): audittypes__severityt__base__last may_be_replaced_by audittypes__critical.
unlockdoor_rules(128): audittypes__severityt__pos(
     audittypes__severityt__first) may_be_replaced_by 0.
unlockdoor_rules(129): audittypes__severityt__pos(
     audittypes__information) may_be_replaced_by 0.
unlockdoor_rules(130): audittypes__severityt__val(0) may_be_replaced_by 
     audittypes__information.
unlockdoor_rules(131): audittypes__severityt__pos(
     audittypes__warning) may_be_replaced_by 1.
unlockdoor_rules(132): audittypes__severityt__val(1) may_be_replaced_by 
     audittypes__warning.
unlockdoor_rules(133): audittypes__severityt__pos(
     audittypes__critical) may_be_replaced_by 2.
unlockdoor_rules(134): audittypes__severityt__val(2) may_be_replaced_by 
     audittypes__critical.
unlockdoor_rules(135): audittypes__severityt__pos(
     audittypes__severityt__last) may_be_replaced_by 2.
unlockdoor_rules(136): audittypes__severityt__pos(succ(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) + 1
     if [X <=audittypes__critical, X <> audittypes__critical].
unlockdoor_rules(137): audittypes__severityt__pos(pred(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) - 1
     if [X >=audittypes__information, X <> 
     audittypes__information].
unlockdoor_rules(138): audittypes__severityt__pos(X) >= 0 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
unlockdoor_rules(139): audittypes__severityt__pos(X) <= 2 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
unlockdoor_rules(140): audittypes__severityt__val(X) >= 
     audittypes__information may_be_deduced_from
     [0 <= X, X <= 2].
unlockdoor_rules(141): audittypes__severityt__val(X) <= 
     audittypes__critical may_be_deduced_from
     [0 <= X, X <= 2].
unlockdoor_rules(142): succ(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X+1)
     if [0 <= X, X < 2].
unlockdoor_rules(143): pred(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X-1)
     if [0 < X, X <= 2].
unlockdoor_rules(144): audittypes__severityt__pos(
     audittypes__severityt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 2].
unlockdoor_rules(145): audittypes__severityt__val(
     audittypes__severityt__pos(X)) may_be_replaced_by X
     if [audittypes__information <= X, X <= audittypes__critical].
unlockdoor_rules(146): audittypes__severityt__pos(X) <= 
     audittypes__severityt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__information <= X, X <= audittypes__critical, 
     audittypes__information <= Y, Y <= audittypes__critical].
unlockdoor_rules(147): audittypes__severityt__val(X) <= 
     audittypes__severityt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 2, 0 <= Y, Y <= 2].
unlockdoor_rules(148): audittypes__usertexti__size >= 0 may_be_deduced.
unlockdoor_rules(149): audittypes__usertexti__first may_be_replaced_by 1.
unlockdoor_rules(150): audittypes__usertexti__last may_be_replaced_by 50.
unlockdoor_rules(151): audittypes__usertexti__base__first may_be_replaced_by -2147483648.
unlockdoor_rules(152): audittypes__usertexti__base__last may_be_replaced_by 2147483647.
unlockdoor_rules(153): alarmtypes__statust__size >= 0 may_be_deduced.
unlockdoor_rules(154): alarmtypes__statust__first may_be_replaced_by alarmtypes__alarming.
unlockdoor_rules(155): alarmtypes__statust__last may_be_replaced_by alarmtypes__silent.
unlockdoor_rules(156): alarmtypes__statust__base__first may_be_replaced_by alarmtypes__alarming.
unlockdoor_rules(157): alarmtypes__statust__base__last may_be_replaced_by alarmtypes__silent.
unlockdoor_rules(158): alarmtypes__statust__pos(
     alarmtypes__statust__first) may_be_replaced_by 0.
unlockdoor_rules(159): alarmtypes__statust__pos(
     alarmtypes__alarming) may_be_replaced_by 0.
unlockdoor_rules(160): alarmtypes__statust__val(0) may_be_replaced_by 
     alarmtypes__alarming.
unlockdoor_rules(161): alarmtypes__statust__pos(
     alarmtypes__silent) may_be_replaced_by 1.
unlockdoor_rules(162): alarmtypes__statust__val(1) may_be_replaced_by 
     alarmtypes__silent.
unlockdoor_rules(163): alarmtypes__statust__pos(
     alarmtypes__statust__last) may_be_replaced_by 1.
unlockdoor_rules(164): alarmtypes__statust__pos(succ(X)) may_be_replaced_by 
     alarmtypes__statust__pos(X) + 1
     if [X <=alarmtypes__silent, X <> alarmtypes__silent].
unlockdoor_rules(165): alarmtypes__statust__pos(pred(X)) may_be_replaced_by 
     alarmtypes__statust__pos(X) - 1
     if [X >=alarmtypes__alarming, X <> alarmtypes__alarming].
unlockdoor_rules(166): alarmtypes__statust__pos(X) >= 0 may_be_deduced_from
     [alarmtypes__alarming <= X, X <= alarmtypes__silent].
unlockdoor_rules(167): alarmtypes__statust__pos(X) <= 1 may_be_deduced_from
     [alarmtypes__alarming <= X, X <= alarmtypes__silent].
unlockdoor_rules(168): alarmtypes__statust__val(X) >= 
     alarmtypes__alarming may_be_deduced_from
     [0 <= X, X <= 1].
unlockdoor_rules(169): alarmtypes__statust__val(X) <= 
     alarmtypes__silent may_be_deduced_from
     [0 <= X, X <= 1].
unlockdoor_rules(170): succ(alarmtypes__statust__val(X)) may_be_replaced_by 
     alarmtypes__statust__val(X+1)
     if [0 <= X, X < 1].
unlockdoor_rules(171): pred(alarmtypes__statust__val(X)) may_be_replaced_by 
     alarmtypes__statust__val(X-1)
     if [0 < X, X <= 1].
unlockdoor_rules(172): alarmtypes__statust__pos(
     alarmtypes__statust__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 1].
unlockdoor_rules(173): alarmtypes__statust__val(
     alarmtypes__statust__pos(X)) may_be_replaced_by X
     if [alarmtypes__alarming <= X, X <= alarmtypes__silent].
unlockdoor_rules(174): alarmtypes__statust__pos(X) <= 
     alarmtypes__statust__pos(Y) & X <= Y are_interchangeable 
     if [alarmtypes__alarming <= X, X <= alarmtypes__silent, 
     alarmtypes__alarming <= Y, Y <= alarmtypes__silent].
unlockdoor_rules(175): alarmtypes__statust__val(X) <= 
     alarmtypes__statust__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 1, 0 <= Y, Y <= 1].
unlockdoor_rules(176): door__t__size >= 0 may_be_deduced.
unlockdoor_rules(177): door__t__first may_be_replaced_by door__open.
unlockdoor_rules(178): door__t__last may_be_replaced_by door__closed.
unlockdoor_rules(179): door__t__base__first may_be_replaced_by door__open.
unlockdoor_rules(180): door__t__base__last may_be_replaced_by door__closed.
unlockdoor_rules(181): door__t__pos(door__t__first) may_be_replaced_by 0.
unlockdoor_rules(182): door__t__pos(door__open) may_be_replaced_by 0.
unlockdoor_rules(183): door__t__val(0) may_be_replaced_by 
     door__open.
unlockdoor_rules(184): door__t__pos(door__closed) may_be_replaced_by 1.
unlockdoor_rules(185): door__t__val(1) may_be_replaced_by 
     door__closed.
unlockdoor_rules(186): door__t__pos(door__t__last) may_be_replaced_by 1.
unlockdoor_rules(187): door__t__pos(succ(X)) may_be_replaced_by 
     door__t__pos(X) + 1
     if [X <=door__closed, X <> door__closed].
unlockdoor_rules(188): door__t__pos(pred(X)) may_be_replaced_by 
     door__t__pos(X) - 1
     if [X >=door__open, X <> door__open].
unlockdoor_rules(189): door__t__pos(X) >= 0 may_be_deduced_from
     [door__open <= X, X <= door__closed].
unlockdoor_rules(190): door__t__pos(X) <= 1 may_be_deduced_from
     [door__open <= X, X <= door__closed].
unlockdoor_rules(191): door__t__val(X) >= door__open may_be_deduced_from
     [0 <= X, X <= 1].
unlockdoor_rules(192): door__t__val(X) <= door__closed may_be_deduced_from
     [0 <= X, X <= 1].
unlockdoor_rules(193): succ(door__t__val(X)) may_be_replaced_by 
     door__t__val(X+1)
     if [0 <= X, X < 1].
unlockdoor_rules(194): pred(door__t__val(X)) may_be_replaced_by 
     door__t__val(X-1)
     if [0 < X, X <= 1].
unlockdoor_rules(195): door__t__pos(door__t__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 1].
unlockdoor_rules(196): door__t__val(door__t__pos(X)) may_be_replaced_by X
     if [door__open <= X, X <= door__closed].
unlockdoor_rules(197): door__t__pos(X) <= door__t__pos(Y) & X <= Y are_interchangeable 
     if [door__open <= X, X <= door__closed, door__open <= Y, Y <= 
     door__closed].
unlockdoor_rules(198): door__t__val(X) <= door__t__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 1, 0 <= Y, Y <= 1].
unlockdoor_rules(199): display__msgt__size >= 0 may_be_deduced.
unlockdoor_rules(200): display__msgt__first may_be_replaced_by display__blank.
unlockdoor_rules(201): display__msgt__last may_be_replaced_by display__doorunlocked.
unlockdoor_rules(202): display__msgt__base__first may_be_replaced_by display__blank.
unlockdoor_rules(203): display__msgt__base__last may_be_replaced_by display__doorunlocked.
unlockdoor_rules(204): display__msgt__pos(display__msgt__first) may_be_replaced_by 0.
unlockdoor_rules(205): display__msgt__pos(display__blank) may_be_replaced_by 0.
unlockdoor_rules(206): display__msgt__val(0) may_be_replaced_by 
     display__blank.
unlockdoor_rules(207): display__msgt__pos(display__welcome) may_be_replaced_by 1.
unlockdoor_rules(208): display__msgt__val(1) may_be_replaced_by 
     display__welcome.
unlockdoor_rules(209): display__msgt__pos(display__insertfinger) may_be_replaced_by 2.
unlockdoor_rules(210): display__msgt__val(2) may_be_replaced_by 
     display__insertfinger.
unlockdoor_rules(211): display__msgt__pos(display__opendoor) may_be_replaced_by 3.
unlockdoor_rules(212): display__msgt__val(3) may_be_replaced_by 
     display__opendoor.
unlockdoor_rules(213): display__msgt__pos(display__wait) may_be_replaced_by 4.
unlockdoor_rules(214): display__msgt__val(4) may_be_replaced_by 
     display__wait.
unlockdoor_rules(215): display__msgt__pos(display__removetoken) may_be_replaced_by 5.
unlockdoor_rules(216): display__msgt__val(5) may_be_replaced_by 
     display__removetoken.
unlockdoor_rules(217): display__msgt__pos(
     display__tokenupdatefailed) may_be_replaced_by 6.
unlockdoor_rules(218): display__msgt__val(6) may_be_replaced_by 
     display__tokenupdatefailed.
unlockdoor_rules(219): display__msgt__pos(display__doorunlocked) may_be_replaced_by 7.
unlockdoor_rules(220): display__msgt__val(7) may_be_replaced_by 
     display__doorunlocked.
unlockdoor_rules(221): display__msgt__pos(display__msgt__last) may_be_replaced_by 7.
unlockdoor_rules(222): display__msgt__pos(succ(X)) may_be_replaced_by 
     display__msgt__pos(X) + 1
     if [X <=display__doorunlocked, X <> display__doorunlocked].
unlockdoor_rules(223): display__msgt__pos(pred(X)) may_be_replaced_by 
     display__msgt__pos(X) - 1
     if [X >=display__blank, X <> display__blank].
unlockdoor_rules(224): display__msgt__pos(X) >= 0 may_be_deduced_from
     [display__blank <= X, X <= display__doorunlocked].
unlockdoor_rules(225): display__msgt__pos(X) <= 7 may_be_deduced_from
     [display__blank <= X, X <= display__doorunlocked].
unlockdoor_rules(226): display__msgt__val(X) >= display__blank may_be_deduced_from
     [0 <= X, X <= 7].
unlockdoor_rules(227): display__msgt__val(X) <= 
     display__doorunlocked may_be_deduced_from
     [0 <= X, X <= 7].
unlockdoor_rules(228): succ(display__msgt__val(X)) may_be_replaced_by 
     display__msgt__val(X+1)
     if [0 <= X, X < 7].
unlockdoor_rules(229): pred(display__msgt__val(X)) may_be_replaced_by 
     display__msgt__val(X-1)
     if [0 < X, X <= 7].
unlockdoor_rules(230): display__msgt__pos(display__msgt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 7].
unlockdoor_rules(231): display__msgt__val(display__msgt__pos(X)) may_be_replaced_by X
     if [display__blank <= X, X <= display__doorunlocked].
unlockdoor_rules(232): display__msgt__pos(X) <= display__msgt__pos(Y) & X <= Y are_interchangeable 
     if [display__blank <= X, X <= display__doorunlocked, 
     display__blank <= Y, Y <= display__doorunlocked].
unlockdoor_rules(233): display__msgt__val(X) <= display__msgt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 7, 0 <= Y, Y <= 7].
unlockdoor_rules(234): statust__size >= 0 may_be_deduced.
unlockdoor_rules(235): statust__first may_be_replaced_by quiescent.
unlockdoor_rules(236): statust__last may_be_replaced_by waitingremovetokenfail.
unlockdoor_rules(237): statust__base__first may_be_replaced_by quiescent.
unlockdoor_rules(238): statust__base__last may_be_replaced_by waitingremovetokenfail.
unlockdoor_rules(239): statust__pos(statust__first) may_be_replaced_by 0.
unlockdoor_rules(240): statust__pos(quiescent) may_be_replaced_by 0.
unlockdoor_rules(241): statust__val(0) may_be_replaced_by 
     quiescent.
unlockdoor_rules(242): statust__pos(gotusertoken) may_be_replaced_by 1.
unlockdoor_rules(243): statust__val(1) may_be_replaced_by 
     gotusertoken.
unlockdoor_rules(244): statust__pos(waitingfinger) may_be_replaced_by 2.
unlockdoor_rules(245): statust__val(2) may_be_replaced_by 
     waitingfinger.
unlockdoor_rules(246): statust__pos(gotfinger) may_be_replaced_by 3.
unlockdoor_rules(247): statust__val(3) may_be_replaced_by 
     gotfinger.
unlockdoor_rules(248): statust__pos(waitingupdatetoken) may_be_replaced_by 4.
unlockdoor_rules(249): statust__val(4) may_be_replaced_by 
     waitingupdatetoken.
unlockdoor_rules(250): statust__pos(waitingentry) may_be_replaced_by 5.
unlockdoor_rules(251): statust__val(5) may_be_replaced_by 
     waitingentry.
unlockdoor_rules(252): statust__pos(waitingremovetokensuccess) may_be_replaced_by 6.
unlockdoor_rules(253): statust__val(6) may_be_replaced_by 
     waitingremovetokensuccess.
unlockdoor_rules(254): statust__pos(waitingremovetokenfail) may_be_replaced_by 7.
unlockdoor_rules(255): statust__val(7) may_be_replaced_by 
     waitingremovetokenfail.
unlockdoor_rules(256): statust__pos(statust__last) may_be_replaced_by 7.
unlockdoor_rules(257): statust__pos(succ(X)) may_be_replaced_by 
     statust__pos(X) + 1
     if [X <=waitingremovetokenfail, X <> waitingremovetokenfail].
unlockdoor_rules(258): statust__pos(pred(X)) may_be_replaced_by 
     statust__pos(X) - 1
     if [X >=quiescent, X <> quiescent].
unlockdoor_rules(259): statust__pos(X) >= 0 may_be_deduced_from
     [quiescent <= X, X <= waitingremovetokenfail].
unlockdoor_rules(260): statust__pos(X) <= 7 may_be_deduced_from
     [quiescent <= X, X <= waitingremovetokenfail].
unlockdoor_rules(261): statust__val(X) >= quiescent may_be_deduced_from
     [0 <= X, X <= 7].
unlockdoor_rules(262): statust__val(X) <= waitingremovetokenfail may_be_deduced_from
     [0 <= X, X <= 7].
unlockdoor_rules(263): succ(statust__val(X)) may_be_replaced_by 
     statust__val(X+1)
     if [0 <= X, X < 7].
unlockdoor_rules(264): pred(statust__val(X)) may_be_replaced_by 
     statust__val(X-1)
     if [0 < X, X <= 7].
unlockdoor_rules(265): statust__pos(statust__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 7].
unlockdoor_rules(266): statust__val(statust__pos(X)) may_be_replaced_by X
     if [quiescent <= X, X <= waitingremovetokenfail].
unlockdoor_rules(267): statust__pos(X) <= statust__pos(Y) & X <= Y are_interchangeable 
     if [quiescent <= X, X <= waitingremovetokenfail, quiescent <= Y, Y <= 
     waitingremovetokenfail].
unlockdoor_rules(268): statust__val(X) <= statust__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 7, 0 <= Y, Y <= 7].
