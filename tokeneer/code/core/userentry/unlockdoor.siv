*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:24  SIMPLIFIED 05-SEP-2011, 15:42:21

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure UserEntry.UnlockDoor




For path(s) from start to run-time check associated with statement of line 913:

procedure_unlockdoor_1.
*** true .          /* all conclusions proved */


For path(s) from start to run-time check associated with statement of line 914:

procedure_unlockdoor_2.
*** true .          /* all conclusions proved */


For path(s) from start to run-time check associated with statement of line 924:

procedure_unlockdoor_3.
*** true .          /* all conclusions proved */


For path(s) from start to run-time check associated with statement of line 931:

procedure_unlockdoor_4.
*** true .          /* all conclusions proved */


For path(s) from start to run-time check associated with statement of line 932:

procedure_unlockdoor_5.
*** true .          /* all conclusions proved */


For path(s) from start to finish:

procedure_unlockdoor_6.
H1:    latch__islocked(latch__state) and (door__thecurrentdoor(door__state) = 
          door__open and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), door__prf_alarmtimeout(door__state))) <-> 
          door__thedooralarm(door__state) = alarmtypes__alarming .
H2:    not usertoken__ispresent(usertoken__state) .
H3:    latch__islocked(latch__state__1) and (door__thecurrentdoor(
          door__state__1) = door__open and clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), door__prf_alarmtimeout(
          door__state__1))) <-> door__thedooralarm(door__state__1) = 
          alarmtypes__alarming .
H4:    latch__islocked(latch__state__1) <-> clock__greaterthanorequal(
          clock__thecurrenttime(clock__currenttime), latch__prf_latchtimeout(
          latch__state__1)) .
H5:    integer__size >= 0 .
H6:    character__size >= 0 .
H7:    positive__size >= 0 .
H8:    audittypes__elementt__size >= 0 .
H9:    audittypes__severityt__size >= 0 .
H10:   audittypes__usertexti__size >= 0 .
H11:   alarmtypes__statust__size >= 0 .
H12:   door__t__size >= 0 .
H13:   display__msgt__size >= 0 .
H14:   statust__size >= 0 .
       ->
C1:    latch__islocked(latch__state) and not latch__islocked(latch__state__1) 
          <-> prf_userentryunlockdoor .


procedure_unlockdoor_7.
H1:    latch__islocked(latch__state) and (door__thecurrentdoor(door__state) = 
          door__open and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), door__prf_alarmtimeout(door__state))) <-> 
          door__thedooralarm(door__state) = alarmtypes__alarming .
H2:    usertoken__ispresent(usertoken__state) .
H3:    clock__greaterthan(clock__thecurrenttime(clock__currenttime), 
          tokenremovaltimeout) .
H4:    for_all(i___1 : integer, 1 <= i___1 and i___1 <= 50 -> 0 <= element(
          usertoken__extractuser(usertoken__state), [i___1]) and element(
          usertoken__extractuser(usertoken__state), [i___1]) <= 255) .
H5:    integer__size >= 0 .
H6:    character__size >= 0 .
H7:    positive__size >= 0 .
H8:    audittypes__elementt__size >= 0 .
H9:    audittypes__severityt__size >= 0 .
H10:   audittypes__usertexti__size >= 0 .
H11:   alarmtypes__statust__size >= 0 .
H12:   door__t__size >= 0 .
H13:   display__msgt__size >= 0 .
H14:   statust__size >= 0 .
       ->
C1:    not prf_userentryunlockdoor .


procedure_unlockdoor_8.
H1:    latch__islocked(latch__state) and (door__thecurrentdoor(door__state) = 
          door__open and clock__greaterthanorequal(clock__thecurrenttime(
          clock__currenttime), door__prf_alarmtimeout(door__state))) <-> 
          door__thedooralarm(door__state) = alarmtypes__alarming .
H2:    usertoken__ispresent(usertoken__state) .
H3:    not clock__greaterthan(clock__thecurrenttime(clock__currenttime), 
          tokenremovaltimeout) .
H4:    integer__size >= 0 .
H5:    character__size >= 0 .
H6:    positive__size >= 0 .
H7:    audittypes__elementt__size >= 0 .
H8:    audittypes__severityt__size >= 0 .
H9:    audittypes__usertexti__size >= 0 .
H10:   alarmtypes__statust__size >= 0 .
H11:   door__t__size >= 0 .
H12:   display__msgt__size >= 0 .
H13:   statust__size >= 0 .
       ->
C1:    not prf_userentryunlockdoor .


