           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:24.39*/

                      /*procedure UserEntry.UpdateToken*/


rule_family updatetoken_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

updatetoken_rules(1): integer__size >= 0 may_be_deduced.
updatetoken_rules(2): integer__first may_be_replaced_by -2147483648.
updatetoken_rules(3): integer__last may_be_replaced_by 2147483647.
updatetoken_rules(4): integer__base__first may_be_replaced_by -2147483648.
updatetoken_rules(5): integer__base__last may_be_replaced_by 2147483647.
updatetoken_rules(6): character__size >= 0 may_be_deduced.
updatetoken_rules(7): character__first may_be_replaced_by 0.
updatetoken_rules(8): character__last may_be_replaced_by 255.
updatetoken_rules(9): character__base__first may_be_replaced_by 0.
updatetoken_rules(10): character__base__last may_be_replaced_by 255.
updatetoken_rules(11): positive__size >= 0 may_be_deduced.
updatetoken_rules(12): positive__first may_be_replaced_by 1.
updatetoken_rules(13): positive__last may_be_replaced_by 2147483647.
updatetoken_rules(14): positive__base__first may_be_replaced_by -2147483648.
updatetoken_rules(15): positive__base__last may_be_replaced_by 2147483647.
updatetoken_rules(16): audittypes__elementt__size >= 0 may_be_deduced.
updatetoken_rules(17): audittypes__elementt__first may_be_replaced_by audittypes__startunenrolledtis.
updatetoken_rules(18): audittypes__elementt__last may_be_replaced_by audittypes__systemfault.
updatetoken_rules(19): audittypes__elementt__base__first may_be_replaced_by audittypes__startunenrolledtis.
updatetoken_rules(20): audittypes__elementt__base__last may_be_replaced_by audittypes__systemfault.
updatetoken_rules(21): audittypes__elementt__pos(
     audittypes__elementt__first) may_be_replaced_by 0.
updatetoken_rules(22): audittypes__elementt__pos(
     audittypes__startunenrolledtis) may_be_replaced_by 0.
updatetoken_rules(23): audittypes__elementt__val(0) may_be_replaced_by 
     audittypes__startunenrolledtis.
updatetoken_rules(24): audittypes__elementt__pos(
     audittypes__startenrolledtis) may_be_replaced_by 1.
updatetoken_rules(25): audittypes__elementt__val(1) may_be_replaced_by 
     audittypes__startenrolledtis.
updatetoken_rules(26): audittypes__elementt__pos(
     audittypes__enrolmentcomplete) may_be_replaced_by 2.
updatetoken_rules(27): audittypes__elementt__val(2) may_be_replaced_by 
     audittypes__enrolmentcomplete.
updatetoken_rules(28): audittypes__elementt__pos(
     audittypes__enrolmentfailed) may_be_replaced_by 3.
updatetoken_rules(29): audittypes__elementt__val(3) may_be_replaced_by 
     audittypes__enrolmentfailed.
updatetoken_rules(30): audittypes__elementt__pos(
     audittypes__displaychanged) may_be_replaced_by 4.
updatetoken_rules(31): audittypes__elementt__val(4) may_be_replaced_by 
     audittypes__displaychanged.
updatetoken_rules(32): audittypes__elementt__pos(
     audittypes__screenchanged) may_be_replaced_by 5.
updatetoken_rules(33): audittypes__elementt__val(5) may_be_replaced_by 
     audittypes__screenchanged.
updatetoken_rules(34): audittypes__elementt__pos(
     audittypes__doorclosed) may_be_replaced_by 6.
updatetoken_rules(35): audittypes__elementt__val(6) may_be_replaced_by 
     audittypes__doorclosed.
updatetoken_rules(36): audittypes__elementt__pos(
     audittypes__dooropened) may_be_replaced_by 7.
updatetoken_rules(37): audittypes__elementt__val(7) may_be_replaced_by 
     audittypes__dooropened.
updatetoken_rules(38): audittypes__elementt__pos(
     audittypes__latchlocked) may_be_replaced_by 8.
updatetoken_rules(39): audittypes__elementt__val(8) may_be_replaced_by 
     audittypes__latchlocked.
updatetoken_rules(40): audittypes__elementt__pos(
     audittypes__latchunlocked) may_be_replaced_by 9.
updatetoken_rules(41): audittypes__elementt__val(9) may_be_replaced_by 
     audittypes__latchunlocked.
updatetoken_rules(42): audittypes__elementt__pos(
     audittypes__alarmraised) may_be_replaced_by 10.
updatetoken_rules(43): audittypes__elementt__val(10) may_be_replaced_by 
     audittypes__alarmraised.
updatetoken_rules(44): audittypes__elementt__pos(
     audittypes__alarmsilenced) may_be_replaced_by 11.
updatetoken_rules(45): audittypes__elementt__val(11) may_be_replaced_by 
     audittypes__alarmsilenced.
updatetoken_rules(46): audittypes__elementt__pos(
     audittypes__truncatelog) may_be_replaced_by 12.
updatetoken_rules(47): audittypes__elementt__val(12) may_be_replaced_by 
     audittypes__truncatelog.
updatetoken_rules(48): audittypes__elementt__pos(
     audittypes__auditalarmraised) may_be_replaced_by 13.
updatetoken_rules(49): audittypes__elementt__val(13) may_be_replaced_by 
     audittypes__auditalarmraised.
updatetoken_rules(50): audittypes__elementt__pos(
     audittypes__auditalarmsilenced) may_be_replaced_by 14.
updatetoken_rules(51): audittypes__elementt__val(14) may_be_replaced_by 
     audittypes__auditalarmsilenced.
updatetoken_rules(52): audittypes__elementt__pos(
     audittypes__usertokenremoved) may_be_replaced_by 15.
updatetoken_rules(53): audittypes__elementt__val(15) may_be_replaced_by 
     audittypes__usertokenremoved.
updatetoken_rules(54): audittypes__elementt__pos(
     audittypes__usertokenpresent) may_be_replaced_by 16.
updatetoken_rules(55): audittypes__elementt__val(16) may_be_replaced_by 
     audittypes__usertokenpresent.
updatetoken_rules(56): audittypes__elementt__pos(
     audittypes__usertokeninvalid) may_be_replaced_by 17.
updatetoken_rules(57): audittypes__elementt__val(17) may_be_replaced_by 
     audittypes__usertokeninvalid.
updatetoken_rules(58): audittypes__elementt__pos(
     audittypes__authcertvalid) may_be_replaced_by 18.
updatetoken_rules(59): audittypes__elementt__val(18) may_be_replaced_by 
     audittypes__authcertvalid.
updatetoken_rules(60): audittypes__elementt__pos(
     audittypes__authcertinvalid) may_be_replaced_by 19.
updatetoken_rules(61): audittypes__elementt__val(19) may_be_replaced_by 
     audittypes__authcertinvalid.
updatetoken_rules(62): audittypes__elementt__pos(
     audittypes__fingerdetected) may_be_replaced_by 20.
updatetoken_rules(63): audittypes__elementt__val(20) may_be_replaced_by 
     audittypes__fingerdetected.
updatetoken_rules(64): audittypes__elementt__pos(
     audittypes__fingertimeout) may_be_replaced_by 21.
updatetoken_rules(65): audittypes__elementt__val(21) may_be_replaced_by 
     audittypes__fingertimeout.
updatetoken_rules(66): audittypes__elementt__pos(
     audittypes__fingermatched) may_be_replaced_by 22.
updatetoken_rules(67): audittypes__elementt__val(22) may_be_replaced_by 
     audittypes__fingermatched.
updatetoken_rules(68): audittypes__elementt__pos(
     audittypes__fingernotmatched) may_be_replaced_by 23.
updatetoken_rules(69): audittypes__elementt__val(23) may_be_replaced_by 
     audittypes__fingernotmatched.
updatetoken_rules(70): audittypes__elementt__pos(
     audittypes__authcertwritten) may_be_replaced_by 24.
updatetoken_rules(71): audittypes__elementt__val(24) may_be_replaced_by 
     audittypes__authcertwritten.
updatetoken_rules(72): audittypes__elementt__pos(
     audittypes__authcertwritefailed) may_be_replaced_by 25.
updatetoken_rules(73): audittypes__elementt__val(25) may_be_replaced_by 
     audittypes__authcertwritefailed.
updatetoken_rules(74): audittypes__elementt__pos(
     audittypes__entrypermitted) may_be_replaced_by 26.
updatetoken_rules(75): audittypes__elementt__val(26) may_be_replaced_by 
     audittypes__entrypermitted.
updatetoken_rules(76): audittypes__elementt__pos(
     audittypes__entrytimeout) may_be_replaced_by 27.
updatetoken_rules(77): audittypes__elementt__val(27) may_be_replaced_by 
     audittypes__entrytimeout.
updatetoken_rules(78): audittypes__elementt__pos(
     audittypes__entrydenied) may_be_replaced_by 28.
updatetoken_rules(79): audittypes__elementt__val(28) may_be_replaced_by 
     audittypes__entrydenied.
updatetoken_rules(80): audittypes__elementt__pos(
     audittypes__admintokenpresent) may_be_replaced_by 29.
updatetoken_rules(81): audittypes__elementt__val(29) may_be_replaced_by 
     audittypes__admintokenpresent.
updatetoken_rules(82): audittypes__elementt__pos(
     audittypes__admintokenvalid) may_be_replaced_by 30.
updatetoken_rules(83): audittypes__elementt__val(30) may_be_replaced_by 
     audittypes__admintokenvalid.
updatetoken_rules(84): audittypes__elementt__pos(
     audittypes__admintokeninvalid) may_be_replaced_by 31.
updatetoken_rules(85): audittypes__elementt__val(31) may_be_replaced_by 
     audittypes__admintokeninvalid.
updatetoken_rules(86): audittypes__elementt__pos(
     audittypes__admintokenexpired) may_be_replaced_by 32.
updatetoken_rules(87): audittypes__elementt__val(32) may_be_replaced_by 
     audittypes__admintokenexpired.
updatetoken_rules(88): audittypes__elementt__pos(
     audittypes__admintokenremoved) may_be_replaced_by 33.
updatetoken_rules(89): audittypes__elementt__val(33) may_be_replaced_by 
     audittypes__admintokenremoved.
updatetoken_rules(90): audittypes__elementt__pos(
     audittypes__invalidoprequest) may_be_replaced_by 34.
updatetoken_rules(91): audittypes__elementt__val(34) may_be_replaced_by 
     audittypes__invalidoprequest.
updatetoken_rules(92): audittypes__elementt__pos(
     audittypes__operationstart) may_be_replaced_by 35.
updatetoken_rules(93): audittypes__elementt__val(35) may_be_replaced_by 
     audittypes__operationstart.
updatetoken_rules(94): audittypes__elementt__pos(
     audittypes__archivelog) may_be_replaced_by 36.
updatetoken_rules(95): audittypes__elementt__val(36) may_be_replaced_by 
     audittypes__archivelog.
updatetoken_rules(96): audittypes__elementt__pos(
     audittypes__archivecomplete) may_be_replaced_by 37.
updatetoken_rules(97): audittypes__elementt__val(37) may_be_replaced_by 
     audittypes__archivecomplete.
updatetoken_rules(98): audittypes__elementt__pos(
     audittypes__archivecheckfailed) may_be_replaced_by 38.
updatetoken_rules(99): audittypes__elementt__val(38) may_be_replaced_by 
     audittypes__archivecheckfailed.
updatetoken_rules(100): audittypes__elementt__pos(
     audittypes__updatedconfigdata) may_be_replaced_by 39.
updatetoken_rules(101): audittypes__elementt__val(39) may_be_replaced_by 
     audittypes__updatedconfigdata.
updatetoken_rules(102): audittypes__elementt__pos(
     audittypes__invalidconfigdata) may_be_replaced_by 40.
updatetoken_rules(103): audittypes__elementt__val(40) may_be_replaced_by 
     audittypes__invalidconfigdata.
updatetoken_rules(104): audittypes__elementt__pos(
     audittypes__shutdown) may_be_replaced_by 41.
updatetoken_rules(105): audittypes__elementt__val(41) may_be_replaced_by 
     audittypes__shutdown.
updatetoken_rules(106): audittypes__elementt__pos(
     audittypes__overridelock) may_be_replaced_by 42.
updatetoken_rules(107): audittypes__elementt__val(42) may_be_replaced_by 
     audittypes__overridelock.
updatetoken_rules(108): audittypes__elementt__pos(
     audittypes__systemfault) may_be_replaced_by 43.
updatetoken_rules(109): audittypes__elementt__val(43) may_be_replaced_by 
     audittypes__systemfault.
updatetoken_rules(110): audittypes__elementt__pos(
     audittypes__elementt__last) may_be_replaced_by 43.
updatetoken_rules(111): audittypes__elementt__pos(succ(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) + 1
     if [X <=audittypes__systemfault, X <> 
     audittypes__systemfault].
updatetoken_rules(112): audittypes__elementt__pos(pred(X)) may_be_replaced_by 
     audittypes__elementt__pos(X) - 1
     if [X >=audittypes__startunenrolledtis, X <> 
     audittypes__startunenrolledtis].
updatetoken_rules(113): audittypes__elementt__pos(X) >= 0 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
updatetoken_rules(114): audittypes__elementt__pos(X) <= 43 may_be_deduced_from
     [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
updatetoken_rules(115): audittypes__elementt__val(X) >= 
     audittypes__startunenrolledtis may_be_deduced_from
     [0 <= X, X <= 43].
updatetoken_rules(116): audittypes__elementt__val(X) <= 
     audittypes__systemfault may_be_deduced_from
     [0 <= X, X <= 43].
updatetoken_rules(117): succ(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X+1)
     if [0 <= X, X < 43].
updatetoken_rules(118): pred(audittypes__elementt__val(X)) may_be_replaced_by 
     audittypes__elementt__val(X-1)
     if [0 < X, X <= 43].
updatetoken_rules(119): audittypes__elementt__pos(
     audittypes__elementt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 43].
updatetoken_rules(120): audittypes__elementt__val(
     audittypes__elementt__pos(X)) may_be_replaced_by X
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault].
updatetoken_rules(121): audittypes__elementt__pos(X) <= 
     audittypes__elementt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__startunenrolledtis <= X, X <= 
     audittypes__systemfault, audittypes__startunenrolledtis <= Y, Y <= 
     audittypes__systemfault].
updatetoken_rules(122): audittypes__elementt__val(X) <= 
     audittypes__elementt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 43, 0 <= Y, Y <= 43].
updatetoken_rules(123): audittypes__severityt__size >= 0 may_be_deduced.
updatetoken_rules(124): audittypes__severityt__first may_be_replaced_by audittypes__information.
updatetoken_rules(125): audittypes__severityt__last may_be_replaced_by audittypes__critical.
updatetoken_rules(126): audittypes__severityt__base__first may_be_replaced_by audittypes__information.
updatetoken_rules(127): audittypes__severityt__base__last may_be_replaced_by audittypes__critical.
updatetoken_rules(128): audittypes__severityt__pos(
     audittypes__severityt__first) may_be_replaced_by 0.
updatetoken_rules(129): audittypes__severityt__pos(
     audittypes__information) may_be_replaced_by 0.
updatetoken_rules(130): audittypes__severityt__val(0) may_be_replaced_by 
     audittypes__information.
updatetoken_rules(131): audittypes__severityt__pos(
     audittypes__warning) may_be_replaced_by 1.
updatetoken_rules(132): audittypes__severityt__val(1) may_be_replaced_by 
     audittypes__warning.
updatetoken_rules(133): audittypes__severityt__pos(
     audittypes__critical) may_be_replaced_by 2.
updatetoken_rules(134): audittypes__severityt__val(2) may_be_replaced_by 
     audittypes__critical.
updatetoken_rules(135): audittypes__severityt__pos(
     audittypes__severityt__last) may_be_replaced_by 2.
updatetoken_rules(136): audittypes__severityt__pos(succ(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) + 1
     if [X <=audittypes__critical, X <> audittypes__critical].
updatetoken_rules(137): audittypes__severityt__pos(pred(X)) may_be_replaced_by 
     audittypes__severityt__pos(X) - 1
     if [X >=audittypes__information, X <> 
     audittypes__information].
updatetoken_rules(138): audittypes__severityt__pos(X) >= 0 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
updatetoken_rules(139): audittypes__severityt__pos(X) <= 2 may_be_deduced_from
     [audittypes__information <= X, X <= audittypes__critical].
updatetoken_rules(140): audittypes__severityt__val(X) >= 
     audittypes__information may_be_deduced_from
     [0 <= X, X <= 2].
updatetoken_rules(141): audittypes__severityt__val(X) <= 
     audittypes__critical may_be_deduced_from
     [0 <= X, X <= 2].
updatetoken_rules(142): succ(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X+1)
     if [0 <= X, X < 2].
updatetoken_rules(143): pred(audittypes__severityt__val(X)) may_be_replaced_by 
     audittypes__severityt__val(X-1)
     if [0 < X, X <= 2].
updatetoken_rules(144): audittypes__severityt__pos(
     audittypes__severityt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 2].
updatetoken_rules(145): audittypes__severityt__val(
     audittypes__severityt__pos(X)) may_be_replaced_by X
     if [audittypes__information <= X, X <= audittypes__critical].
updatetoken_rules(146): audittypes__severityt__pos(X) <= 
     audittypes__severityt__pos(Y) & X <= Y are_interchangeable 
     if [audittypes__information <= X, X <= audittypes__critical, 
     audittypes__information <= Y, Y <= audittypes__critical].
updatetoken_rules(147): audittypes__severityt__val(X) <= 
     audittypes__severityt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 2, 0 <= Y, Y <= 2].
updatetoken_rules(148): audittypes__usertexti__size >= 0 may_be_deduced.
updatetoken_rules(149): audittypes__usertexti__first may_be_replaced_by 1.
updatetoken_rules(150): audittypes__usertexti__last may_be_replaced_by 50.
updatetoken_rules(151): audittypes__usertexti__base__first may_be_replaced_by -2147483648.
updatetoken_rules(152): audittypes__usertexti__base__last may_be_replaced_by 2147483647.
updatetoken_rules(153): display__msgt__size >= 0 may_be_deduced.
updatetoken_rules(154): display__msgt__first may_be_replaced_by display__blank.
updatetoken_rules(155): display__msgt__last may_be_replaced_by display__doorunlocked.
updatetoken_rules(156): display__msgt__base__first may_be_replaced_by display__blank.
updatetoken_rules(157): display__msgt__base__last may_be_replaced_by display__doorunlocked.
updatetoken_rules(158): display__msgt__pos(display__msgt__first) may_be_replaced_by 0.
updatetoken_rules(159): display__msgt__pos(display__blank) may_be_replaced_by 0.
updatetoken_rules(160): display__msgt__val(0) may_be_replaced_by 
     display__blank.
updatetoken_rules(161): display__msgt__pos(display__welcome) may_be_replaced_by 1.
updatetoken_rules(162): display__msgt__val(1) may_be_replaced_by 
     display__welcome.
updatetoken_rules(163): display__msgt__pos(display__insertfinger) may_be_replaced_by 2.
updatetoken_rules(164): display__msgt__val(2) may_be_replaced_by 
     display__insertfinger.
updatetoken_rules(165): display__msgt__pos(display__opendoor) may_be_replaced_by 3.
updatetoken_rules(166): display__msgt__val(3) may_be_replaced_by 
     display__opendoor.
updatetoken_rules(167): display__msgt__pos(display__wait) may_be_replaced_by 4.
updatetoken_rules(168): display__msgt__val(4) may_be_replaced_by 
     display__wait.
updatetoken_rules(169): display__msgt__pos(display__removetoken) may_be_replaced_by 5.
updatetoken_rules(170): display__msgt__val(5) may_be_replaced_by 
     display__removetoken.
updatetoken_rules(171): display__msgt__pos(
     display__tokenupdatefailed) may_be_replaced_by 6.
updatetoken_rules(172): display__msgt__val(6) may_be_replaced_by 
     display__tokenupdatefailed.
updatetoken_rules(173): display__msgt__pos(display__doorunlocked) may_be_replaced_by 7.
updatetoken_rules(174): display__msgt__val(7) may_be_replaced_by 
     display__doorunlocked.
updatetoken_rules(175): display__msgt__pos(display__msgt__last) may_be_replaced_by 7.
updatetoken_rules(176): display__msgt__pos(succ(X)) may_be_replaced_by 
     display__msgt__pos(X) + 1
     if [X <=display__doorunlocked, X <> display__doorunlocked].
updatetoken_rules(177): display__msgt__pos(pred(X)) may_be_replaced_by 
     display__msgt__pos(X) - 1
     if [X >=display__blank, X <> display__blank].
updatetoken_rules(178): display__msgt__pos(X) >= 0 may_be_deduced_from
     [display__blank <= X, X <= display__doorunlocked].
updatetoken_rules(179): display__msgt__pos(X) <= 7 may_be_deduced_from
     [display__blank <= X, X <= display__doorunlocked].
updatetoken_rules(180): display__msgt__val(X) >= display__blank may_be_deduced_from
     [0 <= X, X <= 7].
updatetoken_rules(181): display__msgt__val(X) <= 
     display__doorunlocked may_be_deduced_from
     [0 <= X, X <= 7].
updatetoken_rules(182): succ(display__msgt__val(X)) may_be_replaced_by 
     display__msgt__val(X+1)
     if [0 <= X, X < 7].
updatetoken_rules(183): pred(display__msgt__val(X)) may_be_replaced_by 
     display__msgt__val(X-1)
     if [0 < X, X <= 7].
updatetoken_rules(184): display__msgt__pos(display__msgt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 7].
updatetoken_rules(185): display__msgt__val(display__msgt__pos(X)) may_be_replaced_by X
     if [display__blank <= X, X <= display__doorunlocked].
updatetoken_rules(186): display__msgt__pos(X) <= display__msgt__pos(Y) & X <= Y are_interchangeable 
     if [display__blank <= X, X <= display__doorunlocked, 
     display__blank <= Y, Y <= display__doorunlocked].
updatetoken_rules(187): display__msgt__val(X) <= display__msgt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 7, 0 <= Y, Y <= 7].
updatetoken_rules(188): statust__size >= 0 may_be_deduced.
updatetoken_rules(189): statust__first may_be_replaced_by quiescent.
updatetoken_rules(190): statust__last may_be_replaced_by waitingremovetokenfail.
updatetoken_rules(191): statust__base__first may_be_replaced_by quiescent.
updatetoken_rules(192): statust__base__last may_be_replaced_by waitingremovetokenfail.
updatetoken_rules(193): statust__pos(statust__first) may_be_replaced_by 0.
updatetoken_rules(194): statust__pos(quiescent) may_be_replaced_by 0.
updatetoken_rules(195): statust__val(0) may_be_replaced_by 
     quiescent.
updatetoken_rules(196): statust__pos(gotusertoken) may_be_replaced_by 1.
updatetoken_rules(197): statust__val(1) may_be_replaced_by 
     gotusertoken.
updatetoken_rules(198): statust__pos(waitingfinger) may_be_replaced_by 2.
updatetoken_rules(199): statust__val(2) may_be_replaced_by 
     waitingfinger.
updatetoken_rules(200): statust__pos(gotfinger) may_be_replaced_by 3.
updatetoken_rules(201): statust__val(3) may_be_replaced_by 
     gotfinger.
updatetoken_rules(202): statust__pos(waitingupdatetoken) may_be_replaced_by 4.
updatetoken_rules(203): statust__val(4) may_be_replaced_by 
     waitingupdatetoken.
updatetoken_rules(204): statust__pos(waitingentry) may_be_replaced_by 5.
updatetoken_rules(205): statust__val(5) may_be_replaced_by 
     waitingentry.
updatetoken_rules(206): statust__pos(waitingremovetokensuccess) may_be_replaced_by 6.
updatetoken_rules(207): statust__val(6) may_be_replaced_by 
     waitingremovetokensuccess.
updatetoken_rules(208): statust__pos(waitingremovetokenfail) may_be_replaced_by 7.
updatetoken_rules(209): statust__val(7) may_be_replaced_by 
     waitingremovetokenfail.
updatetoken_rules(210): statust__pos(statust__last) may_be_replaced_by 7.
updatetoken_rules(211): statust__pos(succ(X)) may_be_replaced_by 
     statust__pos(X) + 1
     if [X <=waitingremovetokenfail, X <> waitingremovetokenfail].
updatetoken_rules(212): statust__pos(pred(X)) may_be_replaced_by 
     statust__pos(X) - 1
     if [X >=quiescent, X <> quiescent].
updatetoken_rules(213): statust__pos(X) >= 0 may_be_deduced_from
     [quiescent <= X, X <= waitingremovetokenfail].
updatetoken_rules(214): statust__pos(X) <= 7 may_be_deduced_from
     [quiescent <= X, X <= waitingremovetokenfail].
updatetoken_rules(215): statust__val(X) >= quiescent may_be_deduced_from
     [0 <= X, X <= 7].
updatetoken_rules(216): statust__val(X) <= waitingremovetokenfail may_be_deduced_from
     [0 <= X, X <= 7].
updatetoken_rules(217): succ(statust__val(X)) may_be_replaced_by 
     statust__val(X+1)
     if [0 <= X, X < 7].
updatetoken_rules(218): pred(statust__val(X)) may_be_replaced_by 
     statust__val(X-1)
     if [0 < X, X <= 7].
updatetoken_rules(219): statust__pos(statust__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 7].
updatetoken_rules(220): statust__val(statust__pos(X)) may_be_replaced_by X
     if [quiescent <= X, X <= waitingremovetokenfail].
updatetoken_rules(221): statust__pos(X) <= statust__pos(Y) & X <= Y are_interchangeable 
     if [quiescent <= X, X <= waitingremovetokenfail, quiescent <= Y, Y <= 
     waitingremovetokenfail].
updatetoken_rules(222): statust__val(X) <= statust__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 7, 0 <= Y, Y <= 7].
