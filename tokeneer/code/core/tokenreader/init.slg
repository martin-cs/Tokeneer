*****************************************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
*****************************************************************************


CREATED 05-SEP-2011, 15:33:18  SIMPLIFIED 05-SEP-2011, 15:42:03

SPARK Simplifier GPL 2011
Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.

procedure TokenReader.Init






@@@@@@@@@@  VC: procedure_init_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
-S-  Applied substitution rule init_rules(20).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 
          basictypes__unsigned32t__last)
<S>  New C1:  true
-S-  Applied substitution rule init_rules(21).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_2.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
***  Proved C1:  2 >= basictypes__unsigned32t__first
     using hypothesis H9.
***  Proved C2:  2 <= basictypes__unsigned32t__last
     using hypothesis H10.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_3.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
***  Proved C1:  responsecode__2 >= basictypes__unsigned32t__first
     using hypothesis H18.
***  Proved C2:  responsecode__2 <= basictypes__unsigned32t__last
     using hypothesis H19.
***  Proved C3:  numberreaders__2 >= basictypes__unsigned32t__first
     using hypothesis H16.
***  Proved C4:  numberreaders__2 <= basictypes__unsigned32t__last
     using hypothesis H17.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_4.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
-S-  Applied substitution rule init_rules(223).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__last by:
          10.
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> character__first <= element(element(readers__2, [i___1]), [i___2]) 
          and element(element(readers__2, [i___1]), [i___2]) <= character__last)
          )
<S>  New C1:  10 >= basictypes__unsigned32t__first
<S>  New C2:  10 <= basictypes__unsigned32t__last
-S-  Applied substitution rule init_rules(20).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 
          basictypes__unsigned32t__last)
<S>  New H9:  true
<S>  New H16:  numberreaders__2 >= 0
<S>  New H18:  responsecode__2 >= 0
<S>  New C3:  tokenreader__interface__readerarrayi__first >= 0
<S>  New C1:  true
-S-  Applied substitution rule init_rules(21).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H10:  true
<S>  New H17:  numberreaders__2 <= 4294967295
<S>  New H19:  responsecode__2 <= 4294967295
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New C4:  tokenreader__interface__readerarrayi__first <= 4294967295
<S>  New C2:  true
-S-  Applied substitution rule init_rules(222).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__first by:
          1.
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          1 <= i___1 and i___1 <= 10 -> character__first <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= character__last))
<S>  New C3:  true
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_5.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
***  Proved C3:  numberreaders__2 >= tokenreader__interface__readerarrayi__first
     using hypothesis H33.
***  Proved C4:  numberreaders__2 <= tokenreader__interface__readerarrayi__last
     using hypothesis H34.
-S-  Applied substitution rule init_rules(4).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New C1:  numberreaders__2 >= - 2147483648
<S>  New C5:  true
-S-  Applied substitution rule init_rules(5).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New C2:  numberreaders__2 <= 2147483647
<S>  New C6:  true
***  Proved C5:  true
***  Proved C6:  true
-S-  Applied substitution rule init_rules(9).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 
          character__last))
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= character__last))
-S-  Applied substitution rule init_rules(10).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(20).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 
          basictypes__unsigned32t__last)
<S>  New H9:  true
<S>  New H16:  numberreaders__2 >= 0
<S>  New H18:  responsecode__2 >= 0
<S>  New H29:  tokenreader__interface__readerarrayi__last >= 0
<S>  New H31:  tokenreader__interface__readerarrayi__first >= 0
-S-  Applied substitution rule init_rules(21).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H10:  true
<S>  New H17:  numberreaders__2 <= 4294967295
<S>  New H19:  responsecode__2 <= 4294967295
<S>  New H30:  tokenreader__interface__readerarrayi__last <= 4294967295
<S>  New H32:  tokenreader__interface__readerarrayi__first <= 4294967295
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
-S-  Applied substitution rule init_rules(163).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__first by:
          0.
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) 
          and fld_tokenid(element(readerstatus__1, [i___1])) <= 
          tokentypes__tokenidt__last)
-S-  Applied substitution rule init_rules(164).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__last by:
          4294967295.
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) 
          and fld_tokenid(element(readerstatus__1, [i___1])) <= 4294967295)
-S-  Applied substitution rule init_rules(169).
     This was achieved by replacing all occurrences of tokentypes__tryt__first 
          by:
          tokentypes__notoken.
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
-S-  Applied substitution rule init_rules(170).
     This was achieved by replacing all occurrences of tokentypes__tryt__last 
          by:
          tokentypes__goodtoken.
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= readert__last -> 0 <= element(fld_name(
          element(readerstatus__1, [i___1])), [i___2]) and element(fld_name(
          element(readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> 0 <= fld_lastfault(element(readerstatus__1, [i___1])) and 
          fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) and 
          fld_tokenid(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [
          i___1])) and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= 
          fld_lastfault(element(readerstatus__1, [i___1])) and fld_lastfault(
          element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= 
          fld_tokenid(element(readerstatus__1, [i___1])) and fld_tokenid(
          element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [i___1]))
           and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(217).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__first by:
          1.
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
<S>  New H8:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(218).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__last by:
          8.
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, tokenreader__interface__readerarrayi__first <= i___1 
          and i___1 <= tokenreader__interface__readerarrayi__last -> 0 <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= 255))
<S>  New H8:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(222).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__first by:
          1.
<S>  New H33:  numberreaders__2 >= 1
<S>  New H31:  true
<S>  New H32:  true
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(223).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__last by:
          10.
<S>  New H34:  numberreaders__2 <= 10
<S>  New H29:  true
<S>  New H30:  true
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 10 -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(232).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__responsecodet__pos(
          tokenreader__interface__success) by:
          0.
<S>  New H26:  responsecode__2 = 0
-S-  Applied substitution rule init_rules(321).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__first by:
          tokenreader__interface__unaware.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
-S-  Applied substitution rule init_rules(322).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__last by:
          tokenreader__interface__mute.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= tokenreader__interface__mute)
***  Proved C1:  numberreaders__2 >= - 2147483648
     using hypothesis H16.
***  Proved C2:  numberreaders__2 <= 2147483647
     using hypothesis H34.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_6.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
***  Proved C1:  1 <= numberreaders__2 -> numberreaders__2 >= 
          tokenreader__interface__readerarrayi__first and numberreaders__2 <= 
          tokenreader__interface__readerarrayi__last
     using hypotheses H33 & H34.
-S-  Applied substitution rule init_rules(4).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H37:  numberreaders__2 >= - 2147483648
<S>  New H41:  true
-S-  Applied substitution rule init_rules(5).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H38:  numberreaders__2 <= 2147483647
<S>  New H42:  true
-S-  Applied substitution rule init_rules(9).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 
          character__last))
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= character__last))
-S-  Applied substitution rule init_rules(10).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(20).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 
          basictypes__unsigned32t__last)
<S>  New H9:  true
<S>  New H16:  numberreaders__2 >= 0
<S>  New H18:  responsecode__2 >= 0
<S>  New H29:  tokenreader__interface__readerarrayi__last >= 0
<S>  New H31:  tokenreader__interface__readerarrayi__first >= 0
-S-  Applied substitution rule init_rules(21).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H10:  true
<S>  New H17:  numberreaders__2 <= 4294967295
<S>  New H19:  responsecode__2 <= 4294967295
<S>  New H30:  tokenreader__interface__readerarrayi__last <= 4294967295
<S>  New H32:  tokenreader__interface__readerarrayi__first <= 4294967295
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
-S-  Applied substitution rule init_rules(163).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__first by:
          0.
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) 
          and fld_tokenid(element(readerstatus__1, [i___1])) <= 
          tokentypes__tokenidt__last)
-S-  Applied substitution rule init_rules(164).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__last by:
          4294967295.
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) 
          and fld_tokenid(element(readerstatus__1, [i___1])) <= 4294967295)
-S-  Applied substitution rule init_rules(169).
     This was achieved by replacing all occurrences of tokentypes__tryt__first 
          by:
          tokentypes__notoken.
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
-S-  Applied substitution rule init_rules(170).
     This was achieved by replacing all occurrences of tokentypes__tryt__last 
          by:
          tokentypes__goodtoken.
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= readert__last -> 0 <= element(fld_name(
          element(readerstatus__1, [i___1])), [i___2]) and element(fld_name(
          element(readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> 0 <= fld_lastfault(element(readerstatus__1, [i___1])) and 
          fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) and 
          fld_tokenid(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [
          i___1])) and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= 
          fld_lastfault(element(readerstatus__1, [i___1])) and fld_lastfault(
          element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= 
          fld_tokenid(element(readerstatus__1, [i___1])) and fld_tokenid(
          element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [i___1]))
           and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(217).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__first by:
          1.
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
<S>  New H8:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(218).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__last by:
          8.
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, tokenreader__interface__readerarrayi__first <= i___1 
          and i___1 <= tokenreader__interface__readerarrayi__last -> 0 <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= 255))
<S>  New H8:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(222).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__first by:
          1.
<S>  New H33:  numberreaders__2 >= 1
<S>  New H31:  true
<S>  New H32:  true
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
<S>  New C2:  1 <= numberreaders__2 -> 1 <= 
          tokenreader__interface__readerarrayi__last
-S-  Applied substitution rule init_rules(223).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__last by:
          10.
<S>  New H34:  numberreaders__2 <= 10
<S>  New H29:  true
<S>  New H30:  true
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 10 -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
<S>  New C2:  true
-S-  Applied substitution rule init_rules(232).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__responsecodet__pos(
          tokenreader__interface__success) by:
          0.
<S>  New H26:  responsecode__2 = 0
-S-  Applied substitution rule init_rules(321).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__first by:
          tokenreader__interface__unaware.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
-S-  Applied substitution rule init_rules(322).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__last by:
          tokenreader__interface__mute.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= tokenreader__interface__mute)
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_7.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified C7 on reading formula in, to give:
     %%%  C7:  true
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [k_])), 
          [l_]) and element(fld_name(element(readerstatus__1, [k_])), [l_]) <= 
          character__last))
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [k_])) and fld_tokentry(element(readerstatus__1, [k_]
          )) <= tokentypes__tryt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [k_])) and fld_tokenid(element(readerstatus__1, [k_])
          ) <= tokentypes__tokenidt__last)
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  true
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [k_])) and 
          fld_currentstatus(element(readerstatus__1, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [k_])) and fld_lastfault(element(
          readerstatus__1, [k_])) <= basictypes__unsigned32t__last)
%%%  Simplified C16 on reading formula in, to give:
     %%%  C16:  true
***  Proved C2:  1 <= tokenreader__interface__readerarrayi__last
     using hypotheses H34 & H47.
***  Proved C3:  1 <= numberreaders__2
     using hypothesis H47.
***  Proved C4:  numberreaders__2 >= tokenreader__interface__readerarrayi__first
     using hypothesis H33.
***  Proved C5:  numberreaders__2 <= tokenreader__interface__readerarrayi__last
     using hypothesis H34.
***  Proved C6:  true
***  Proved C7:  true
***  Proved C11:  true
***  Proved C15:  1 <= tokenreader__interface__readerarrayi__last
     using hypotheses H34 & H47.
***  Proved C16:  true
***  Proved C17:  1 <= numberreaders__2
     using hypothesis H47.
***  Proved C18:  numberreaders__2 >= basictypes__unsigned32t__first
     using hypothesis H16.
***  Proved C19:  numberreaders__2 <= basictypes__unsigned32t__last
     using hypothesis H17.
-S-  Applied substitution rule init_rules(222).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__first by:
          1.
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          1 <= i___1 and i___1 <= tokenreader__interface__readerarrayi__last -> 
          character__first <= element(element(readers__2, [i___1]), [i___2]) 
          and element(element(readers__2, [i___1]), [i___2]) <= character__last)
          )
<S>  New H31:  1 >= basictypes__unsigned32t__first
<S>  New H32:  1 <= basictypes__unsigned32t__last
<S>  New H33:  numberreaders__2 >= 1
<S>  New H43:  1 <= numberreaders__2 -> numberreaders__2 >= 1 and 
          numberreaders__2 <= tokenreader__interface__readerarrayi__last
<S>  New H44:  1 <= numberreaders__2 -> 1 <= 
          tokenreader__interface__readerarrayi__last
<S>  New C1:  true
<S>  New C14:  true
***  Proved C1:  true
***  Proved C14:  true
+++  Using "A->B, A |- B" on hypotheses H43 & H47 yields a new hypothesis:
     +++  H48:  numberreaders__2 >= 1 and numberreaders__2 <= 
          tokenreader__interface__readerarrayi__last
+++  Using "A->B, A |- B" on hypotheses H44 & H47 yields a new hypothesis:
     +++  H49:  1 <= tokenreader__interface__readerarrayi__last
-S-  Applied substitution rule init_rules(4).
     This was achieved by replacing all occurrences of integer__first by:
          - 2147483648.
<S>  New H37:  numberreaders__2 >= - 2147483648
<S>  New H41:  true
-S-  Applied substitution rule init_rules(5).
     This was achieved by replacing all occurrences of integer__last by:
          2147483647.
<S>  New H38:  numberreaders__2 <= 2147483647
<S>  New H42:  true
-S-  Applied substitution rule init_rules(9).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 
          character__last))
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          1 <= i___1 and i___1 <= tokenreader__interface__readerarrayi__last -> 
          0 <= element(element(readers__2, [i___1]), [i___2]) and element(
          element(readers__2, [i___1]), [i___2]) <= character__last))
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus__1, [k_])), [l_]) and element(
          fld_name(element(readerstatus__1, [k_])), [l_]) <= character__last))
-S-  Applied substitution rule init_rules(10).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          1 <= i___1 and i___1 <= tokenreader__interface__readerarrayi__last -> 
          0 <= element(element(readers__2, [i___1]), [i___2]) and element(
          element(readers__2, [i___1]), [i___2]) <= 255))
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus__1, [k_])), [l_]) and element(
          fld_name(element(readerstatus__1, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(20).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 
          basictypes__unsigned32t__last)
<S>  New H9:  true
<S>  New H16:  numberreaders__2 >= 0
<S>  New H18:  responsecode__2 >= 0
<S>  New H29:  tokenreader__interface__readerarrayi__last >= 0
<S>  New H31:  true
<S>  New C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [k_])) 
          and fld_lastfault(element(readerstatus__1, [k_])) <= 
          basictypes__unsigned32t__last)
-S-  Applied substitution rule init_rules(21).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H10:  true
<S>  New H17:  numberreaders__2 <= 4294967295
<S>  New H19:  responsecode__2 <= 4294967295
<S>  New H30:  tokenreader__interface__readerarrayi__last <= 4294967295
<S>  New H32:  true
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [i___1]))
           and fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__1, [k_])) 
          and fld_lastfault(element(readerstatus__1, [k_])) <= 4294967295)
-S-  Applied substitution rule init_rules(163).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__first by:
          0.
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) 
          and fld_tokenid(element(readerstatus__1, [i___1])) <= 
          tokentypes__tokenidt__last)
<S>  New C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [k_])) and 
          fld_tokenid(element(readerstatus__1, [k_])) <= 
          tokentypes__tokenidt__last)
-S-  Applied substitution rule init_rules(164).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__last by:
          4294967295.
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) 
          and fld_tokenid(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__1, [k_])) and 
          fld_tokenid(element(readerstatus__1, [k_])) <= 4294967295)
-S-  Applied substitution rule init_rules(169).
     This was achieved by replacing all occurrences of tokentypes__tryt__first 
          by:
          tokentypes__notoken.
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
<S>  New C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [k_])) and fld_tokentry(element(readerstatus__1, [k_]
          )) <= tokentypes__tryt__last)
-S-  Applied substitution rule init_rules(170).
     This was achieved by replacing all occurrences of tokentypes__tryt__last 
          by:
          tokentypes__goodtoken.
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__goodtoken)
<S>  New C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [k_])) and fld_tokentry(element(readerstatus__1, [k_]
          )) <= tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= readert__last -> 0 <= element(fld_name(
          element(readerstatus__1, [i___1])), [i___2]) and element(fld_name(
          element(readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> 0 <= fld_lastfault(element(readerstatus__1, [i___1])) and 
          fld_lastfault(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> 0 <= fld_tokenid(element(readerstatus__1, [i___1])) and 
          fld_tokenid(element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [
          i___1])) and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__goodtoken)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__1, [k_])) and fld_currentstatus(element(
          readerstatus__1, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__1, [k_])), [l_]) and element(fld_name(
          element(readerstatus__1, [k_])), [l_]) <= 255))
<S>  New C13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_lastfault(element(readerstatus__1, [k_])) and fld_lastfault(
          element(readerstatus__1, [k_])) <= 4294967295)
<S>  New C10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_tokenid(element(readerstatus__1, [k_])) and fld_tokenid(element(
          readerstatus__1, [k_])) <= 4294967295)
<S>  New C9:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [k_])) 
          and fld_tokentry(element(readerstatus__1, [k_])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= 
          fld_lastfault(element(readerstatus__1, [i___1])) and fld_lastfault(
          element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= 
          fld_tokenid(element(readerstatus__1, [i___1])) and fld_tokenid(
          element(readerstatus__1, [i___1])) <= 4294967295)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [i___1]))
           and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__goodtoken)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__1, [k_])) and fld_currentstatus(element(
          readerstatus__1, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(
          element(readerstatus__1, [k_])), [l_]) and element(fld_name(element(
          readerstatus__1, [k_])), [l_]) <= 255))
<S>  New C13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_lastfault(element(readerstatus__1, [k_])) and fld_lastfault(
          element(readerstatus__1, [k_])) <= 4294967295)
<S>  New C10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_tokenid(element(readerstatus__1, [k_])) and fld_tokenid(element(
          readerstatus__1, [k_])) <= 4294967295)
<S>  New C9:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [k_])) 
          and fld_tokentry(element(readerstatus__1, [k_])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(217).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__first by:
          1.
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          1 <= i___1 and i___1 <= tokenreader__interface__readerarrayi__last -> 
          0 <= element(element(readers__2, [i___1]), [i___2]) and element(
          element(readers__2, [i___1]), [i___2]) <= 255))
<S>  New H8:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New C8:  for_all(l_ : integer, 1 <= l_ and l_ <= 
          tokenreader__interface__readernamei__last -> for_all(k_ : readert, 
          user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [k_])), [l_]) and element(fld_name(element(
          readerstatus__1, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(218).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__last by:
          8.
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
<S>  New H8:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 255))
<S>  New C8:  for_all(l_ : integer, 1 <= l_ and l_ <= 8 -> for_all(k_ : 
          readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [k_])), [l_]) and element(fld_name(element(
          readerstatus__1, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(223).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__last by:
          10.
<S>  New H34:  numberreaders__2 <= 10
<S>  New H43:  1 <= numberreaders__2 -> numberreaders__2 >= 1 and 
          numberreaders__2 <= 10
<S>  New H44:  true
<S>  New H48:  numberreaders__2 >= 1 and numberreaders__2 <= 10
<S>  New H49:  true
<S>  New H29:  true
<S>  New H30:  true
<S>  New H15:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 10 -> 0 <= element(element(
          readers__2, [i___1]), [i___2]) and element(element(readers__2, [i___1]
          ), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(232).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__responsecodet__pos(
          tokenreader__interface__success) by:
          0.
<S>  New H26:  responsecode__2 = 0
-S-  Applied substitution rule init_rules(321).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__first by:
          tokenreader__interface__unaware.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [k_])) and fld_currentstatus(element(
          readerstatus__1, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
-S-  Applied substitution rule init_rules(322).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__last by:
          tokenreader__interface__mute.
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= tokenreader__interface__mute)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [k_])) and fld_currentstatus(element(
          readerstatus__1, [k_])) <= tokenreader__interface__mute)
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H4 (true-hypothesis).
---  Eliminated hypothesis H5 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H13 (true-hypothesis).
---  Eliminated hypothesis H14 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H21 (true-hypothesis).
---  Eliminated hypothesis H22 (true-hypothesis).
---  Eliminated hypothesis H23 (true-hypothesis).
---  Eliminated hypothesis H24 (true-hypothesis).
---  Eliminated hypothesis H25 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H35 (true-hypothesis).
---  Eliminated hypothesis H36 (true-hypothesis).
---  Eliminated hypothesis H39 (true-hypothesis).
---  Eliminated hypothesis H40 (true-hypothesis).
---  Eliminated hypothesis H45 (true-hypothesis).
---  Eliminated hypothesis H46 (true-hypothesis).
---  Eliminated hypothesis H41 (true-hypothesis).
---  Eliminated hypothesis H42 (true-hypothesis).
---  Eliminated hypothesis H9 (true-hypothesis).
---  Eliminated hypothesis H31 (true-hypothesis).
---  Eliminated hypothesis H10 (true-hypothesis).
---  Eliminated hypothesis H32 (true-hypothesis).
---  Eliminated hypothesis H44 (true-hypothesis).
---  Eliminated hypothesis H49 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H30 (true-hypothesis).
---  Eliminated hypothesis H47 (duplicate of H33).
>>>  Using "A->B, A |- B" on H43, given H47, we simplify the former to:
     >>>  H43:  numberreaders__2 >= 1 and numberreaders__2 <= 10
---  Eliminated hypothesis H16 (redundant, given H33).
---  Eliminated hypothesis H17 (redundant, given H34).
---  Eliminated hypothesis H18 (redundant, given H26).
---  Eliminated hypothesis H19 (redundant, given H26).
---  Eliminated hypothesis H37 (redundant, given H33).
---  Eliminated hypothesis H38 (redundant, given H34).
---  Eliminated hypothesis H26, which only specifies a value for 
          responsecode__2.
     This is not referred to anywhere else in the VC.
---  Attempted addition of new hypothesis:
          numberreaders__2 >= 1
     eliminated: this already exists (as H33).
---  Attempted addition of new hypothesis:
          numberreaders__2 <= 10
     eliminated: this already exists (as H34).
>>>  Hypothesis H43 has now been split into two, giving:
     >>>  H33:  numberreaders__2 >= 1
     >>>  H34:  numberreaders__2 <= 10
---  Attempted addition of new hypothesis:
          numberreaders__2 >= 1
     eliminated: this already exists (as H33).
---  Attempted addition of new hypothesis:
          numberreaders__2 <= 10
     eliminated: this already exists (as H34).
>>>  Hypothesis H48 has now been split into two, giving:
     >>>  H33:  numberreaders__2 >= 1
     >>>  H34:  numberreaders__2 <= 10
     +++  New H50:  integer__size >= 0
     +++  New H51:  character__size >= 0
     +++  New H52:  positive__size >= 0
     +++  New H53:  basictypes__unsigned32t__base__first <= 
          basictypes__unsigned32t__base__last
     +++  New H54:  audittypes__elementt__size >= 0
     +++  New H55:  audittypes__severityt__size >= 0
     +++  New H56:  audittypes__descriptioni__size >= 0
     +++  New H57:  tokentypes__tokenidt__size >= 0
     +++  New H58:  tokentypes__tokenidt__base__first <= 
          tokentypes__tokenidt__base__last
     +++  New H59:  tokentypes__tryt__size >= 0
     +++  New H60:  readert__size >= 0
     +++  New H61:  tokenreader__interface__readernamei__size >= 0
     +++  New H62:  tokenreader__interface__readerarrayi__size >= 0
     +++  New H63:  tokenreader__interface__responsecodet__size >= 0
     +++  New H64:  tokenreader__interface__readerstatet__size >= 0
     +++  New H65:  tokenreader__interface__validreaderstatet__size >= 0
     +++  New H66:  readerinfot__size >= 0
     +++  New H67:  basictypes__unsigned32t__base__first <= 0
     +++  New H68:  basictypes__unsigned32t__base__last >= 4294967295
     +++  New H69:  tokentypes__tokenidt__base__first <= 0
     +++  New H70:  tokentypes__tokenidt__base__last >= 4294967295
>>>  Attempting to prove quantified formula C8 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H71:  1 <= int_l__1
     +++  New H72:  int_l__1 <= 8
+++  New subgoal C1:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          element(fld_name(element(readerstatus__1, [k_])), [int_l__1]) and 
          element(fld_name(element(readerstatus__1, [k_])), [int_l__1]) <= 255)
     >>>  Attempting to prove quantified formula C1 by "unwrapping" it.
     +++  Added new hypotheses (in proving an implication formula).
          +++  New H73:  user <= rea_k__1
          +++  New H74:  rea_k__1 <= admin
     +++  New subgoal C1:  0 <= element(fld_name(element(readerstatus__1, [
          rea_k__1])), [int_l__1]) and element(fld_name(element(
          readerstatus__1, [rea_k__1])), [int_l__1]) <= 255
     >>>  Conclusion C1 has now been split into two, giving:
          >>>  C1:  0 <= element(fld_name(element(readerstatus__1, [rea_k__1]))
          , [int_l__1])
          >>>  C2:  element(fld_name(element(readerstatus__1, [rea_k__1])), [
          int_l__1]) <= 255
     ***  Proved subgoal C1
          using hypotheses H8, H71, H72, H73 & H74.
     ***  Proved subgoal C2
          using hypotheses H8, H71, H72, H73 & H74.
***  Proved C8:  for_all(l_ : integer, 1 <= l_ and l_ <= 8 -> for_all(k_ : 
          readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus__1, [k_])), [l_]) and element(fld_name(element(
          readerstatus__1, [k_])), [l_]) <= 255))
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C9 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H71:  user <= rea_k__2
     +++  New H72:  rea_k__2 <= admin
+++  New subgoal C1:  tokentypes__notoken <= fld_tokentry(element(
          readerstatus__1, [rea_k__2])) and fld_tokentry(element(
          readerstatus__1, [rea_k__2])) <= tokentypes__goodtoken
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [
          rea_k__2]))
     >>>  C2:  fld_tokentry(element(readerstatus__1, [rea_k__2])) <= 
          tokentypes__goodtoken
***  Proved subgoal C1
     using hypotheses H7, H71 & H72.
***  Proved subgoal C2
     using hypotheses H7, H71 & H72.
***  Proved C9:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__1, [k_])) 
          and fld_tokentry(element(readerstatus__1, [k_])) <= 
          tokentypes__goodtoken)
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C10 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H71:  user <= rea_k__3
     +++  New H72:  rea_k__3 <= admin
+++  New subgoal C1:  0 <= fld_tokenid(element(readerstatus__1, [rea_k__3])) 
          and fld_tokenid(element(readerstatus__1, [rea_k__3])) <= 4294967295
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  0 <= fld_tokenid(element(readerstatus__1, [rea_k__3]))
     >>>  C2:  fld_tokenid(element(readerstatus__1, [rea_k__3])) <= 4294967295
***  Proved subgoal C1
     using hypotheses H6, H71 & H72.
***  Proved subgoal C2
     using hypotheses H6, H71 & H72.
***  Proved C10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_tokenid(element(readerstatus__1, [k_])) and fld_tokenid(element(
          readerstatus__1, [k_])) <= 4294967295)
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C12 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H71:  user <= rea_k__4
     +++  New H72:  rea_k__4 <= admin
+++  New subgoal C1:  tokenreader__interface__unaware <= fld_currentstatus(
          element(readerstatus__1, [rea_k__4])) and fld_currentstatus(element(
          readerstatus__1, [rea_k__4])) <= tokenreader__interface__mute
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [rea_k__4]))
     >>>  C2:  fld_currentstatus(element(readerstatus__1, [rea_k__4])) <= 
          tokenreader__interface__mute
***  Proved subgoal C1
     using hypotheses H3, H71 & H72.
***  Proved subgoal C2
     using hypotheses H3, H71 & H72.
***  Proved C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__1, [k_])) and fld_currentstatus(element(
          readerstatus__1, [k_])) <= tokenreader__interface__mute)
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C13 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H71:  user <= rea_k__5
     +++  New H72:  rea_k__5 <= admin
+++  New subgoal C1:  0 <= fld_lastfault(element(readerstatus__1, [rea_k__5])) 
          and fld_lastfault(element(readerstatus__1, [rea_k__5])) <= 4294967295
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  0 <= fld_lastfault(element(readerstatus__1, [rea_k__5]))
     >>>  C2:  fld_lastfault(element(readerstatus__1, [rea_k__5])) <= 4294967295
***  Proved subgoal C1
     using hypotheses H2, H71 & H72.
***  Proved subgoal C2
     using hypotheses H2, H71 & H72.
***  Proved C13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_lastfault(element(readerstatus__1, [k_])) and fld_lastfault(
          element(readerstatus__1, [k_])) <= 4294967295)
     by unwrapping a universally-quantified formula.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_8.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H34 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H35 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__3, [i___1])), [
          i___2]) <= character__last))
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [k_])), 
          [l_]) and element(fld_name(element(readerstatus__3, [k_])), [l_]) <= 
          character__last))
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [k_])) and fld_tokentry(element(readerstatus__3, [k_]
          )) <= tokentypes__tryt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [k_])) and fld_tokenid(element(readerstatus__3, [k_])
          ) <= tokentypes__tokenidt__last)
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  true
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [k_])) and 
          fld_currentstatus(element(readerstatus__3, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [k_])) and fld_lastfault(element(
          readerstatus__3, [k_])) <= basictypes__unsigned32t__last)
%%%  Simplified C16 on reading formula in, to give:
     %%%  C16:  loop__1__i >= 0
***  Proved C1:  loop__1__i + 1 >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C4:  numberreaders >= tokenreader__interface__readerarrayi__first
     using hypothesis H4.
***  Proved C5:  numberreaders <= tokenreader__interface__readerarrayi__last
     using hypothesis H5.
***  Proved C6:  true
***  Proved C7:  numberreaders = numberreaders__entry__loop__1
     using hypothesis H8.
***  Proved C11:  true
***  Proved C14:  loop__1__i + 1 >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C16:  loop__1__i >= 0
     using hypothesis H21.
***  Proved C18:  numberreaders__entry__loop__1 >= 
          basictypes__unsigned32t__first
     using hypothesis H23.
***  Proved C19:  numberreaders__entry__loop__1 <= basictypes__unsigned32t__last
     using hypothesis H24.
-S-  Applied substitution rule init_rules(223).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__last by:
          10.
<S>  New H2:  loop__1__i <= 10
<S>  New H5:  numberreaders <= 10
<S>  New H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> character__first <= element(element(readers, [i___1]), [i___2]) 
          and element(element(readers, [i___1]), [i___2]) <= character__last))
<S>  New C2:  loop__1__i <= 9
<S>  New C15:  loop__1__i <= 9
>>>  Restructured hypothesis H43 into:
     >>>  H43:  loop__1__i <> numberreaders__entry__loop__1
-S-  Applied substitution rule init_rules(9).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> 0 <= element(element(readers, [i___1]), [i___2]) and element(
          element(readers, [i___1]), [i___2]) <= character__last))
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) <= 
          character__last))
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus__3, [k_])), [l_]) and element(
          fld_name(element(readerstatus__3, [k_])), [l_]) <= character__last))
-S-  Applied substitution rule init_rules(10).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= 255))
<S>  New H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> 0 <= element(element(readers, [i___1]), [i___2]) and element(
          element(readers, [i___1]), [i___2]) <= 255))
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) <= 255))
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus__3, [k_])), [l_]) and element(
          fld_name(element(readerstatus__3, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(20).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus, [k_])) and 
          fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H23:  numberreaders__entry__loop__1 >= 0
<S>  New H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__3, [i___1]))
           and fld_lastfault(element(readerstatus__3, [i___1])) <= 
          basictypes__unsigned32t__last)
<S>  New C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__3, [k_])) 
          and fld_lastfault(element(readerstatus__3, [k_])) <= 
          basictypes__unsigned32t__last)
-S-  Applied substitution rule init_rules(21).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H24:  numberreaders__entry__loop__1 <= 4294967295
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus, [k_])) and 
          fld_lastfault(element(readerstatus, [k_])) <= 4294967295)
<S>  New H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__3, [i___1]))
           and fld_lastfault(element(readerstatus__3, [i___1])) <= 4294967295)
<S>  New C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__3, [k_])) 
          and fld_lastfault(element(readerstatus__3, [k_])) <= 4294967295)
-S-  Applied substitution rule init_rules(163).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__first by:
          0.
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus, [k_])) and 
          fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__3, [i___1])) 
          and fld_tokenid(element(readerstatus__3, [i___1])) <= 
          tokentypes__tokenidt__last)
<S>  New C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__3, [k_])) and 
          fld_tokenid(element(readerstatus__3, [k_])) <= 
          tokentypes__tokenidt__last)
-S-  Applied substitution rule init_rules(164).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__last by:
          4294967295.
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus, [k_])) and 
          fld_tokenid(element(readerstatus, [k_])) <= 4294967295)
<S>  New H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__3, [i___1])) 
          and fld_tokenid(element(readerstatus__3, [i___1])) <= 4294967295)
<S>  New C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__3, [k_])) and 
          fld_tokenid(element(readerstatus__3, [k_])) <= 4294967295)
-S-  Applied substitution rule init_rules(169).
     This was achieved by replacing all occurrences of tokentypes__tryt__first 
          by:
          tokentypes__notoken.
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
<S>  New C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__3, [k_])) and fld_tokentry(element(readerstatus__3, [k_]
          )) <= tokentypes__tryt__last)
-S-  Applied substitution rule init_rules(170).
     This was achieved by replacing all occurrences of tokentypes__tryt__last 
          by:
          tokentypes__goodtoken.
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__goodtoken)
<S>  New H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__goodtoken)
<S>  New C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__3, [k_])) and fld_tokentry(element(readerstatus__3, [k_]
          )) <= tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H6:  user <= loop__2__r
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H37:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= element(
          fld_name(element(readerstatus, [k_])), [l_]) and element(fld_name(
          element(readerstatus, [k_])), [l_]) <= 255))
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= readert__last -> 0 <= element(fld_name(
          element(readerstatus__3, [i___1])), [i___2]) and element(fld_name(
          element(readerstatus__3, [i___1])), [i___2]) <= 255))
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_lastfault(element(readerstatus, [k_])) and fld_lastfault(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H36:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus__3, [i___1]))
           and fld_lastfault(element(readerstatus__3, [i___1])) <= 4294967295)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_tokenid(element(readerstatus, [k_])) and fld_tokenid(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H40:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus__3, [i___1])) 
          and fld_tokenid(element(readerstatus__3, [i___1])) <= 4294967295)
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus, [k_])) and 
          fld_tokentry(element(readerstatus, [k_])) <= tokentypes__goodtoken)
<S>  New H41:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__goodtoken)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__3, [k_])) and fld_currentstatus(element(
          readerstatus__3, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= element(
          fld_name(element(readerstatus__3, [k_])), [l_]) and element(fld_name(
          element(readerstatus__3, [k_])), [l_]) <= 255))
<S>  New C13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_lastfault(element(readerstatus__3, [k_])) and fld_lastfault(
          element(readerstatus__3, [k_])) <= 4294967295)
<S>  New C10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_tokenid(element(readerstatus__3, [k_])) and fld_tokenid(element(
          readerstatus__3, [k_])) <= 4294967295)
<S>  New C9:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__3, [k_])) 
          and fld_tokentry(element(readerstatus__3, [k_])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H37:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__3, [i___1])) and fld_currentstatus(element(
          readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(
          element(readerstatus, [k_])), [l_]) and element(fld_name(element(
          readerstatus, [k_])), [l_]) <= 255))
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__3, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__3, [i___1])), [i___2]) <= 255))
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_lastfault(element(readerstatus, [k_])) and fld_lastfault(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H36:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 
          <= fld_lastfault(element(readerstatus__3, [i___1])) and fld_lastfault(
          element(readerstatus__3, [i___1])) <= 4294967295)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_tokenid(element(readerstatus, [k_])) and fld_tokenid(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H40:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 0 
          <= fld_tokenid(element(readerstatus__3, [i___1])) and fld_tokenid(
          element(readerstatus__3, [i___1])) <= 4294967295)
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus, [k_])) and 
          fld_tokentry(element(readerstatus, [k_])) <= tokentypes__goodtoken)
<S>  New H41:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__3, [i___1]))
           and fld_tokentry(element(readerstatus__3, [i___1])) <= 
          tokentypes__goodtoken)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__3, [k_])) and fld_currentstatus(element(
          readerstatus__3, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(
          element(readerstatus__3, [k_])), [l_]) and element(fld_name(element(
          readerstatus__3, [k_])), [l_]) <= 255))
<S>  New C13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_lastfault(element(readerstatus__3, [k_])) and fld_lastfault(
          element(readerstatus__3, [k_])) <= 4294967295)
<S>  New C10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_tokenid(element(readerstatus__3, [k_])) and fld_tokenid(element(
          readerstatus__3, [k_])) <= 4294967295)
<S>  New C9:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__3, [k_])) 
          and fld_tokentry(element(readerstatus__3, [k_])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(217).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__first by:
          1.
<S>  New H25:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> 0 <= element(element(readers, [i___1]), [i___2]) and element(
          element(readers, [i___1]), [i___2]) <= 255))
<S>  New H9:  for_all(l_ : integer, 1 <= l_ and l_ <= 
          tokenreader__interface__readernamei__last -> for_all(k_ : readert, 
          user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus, [k_])), [l_]) and element(fld_name(element(
          readerstatus, [k_])), [l_]) <= 255))
<S>  New H42:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> 0 <= element(fld_name(element(
          readerstatus__3, [i___1])), [i___2]) and element(fld_name(element(
          readerstatus__3, [i___1])), [i___2]) <= 255))
<S>  New C8:  for_all(l_ : integer, 1 <= l_ and l_ <= 
          tokenreader__interface__readernamei__last -> for_all(k_ : readert, 
          user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus__3, [k_])), [l_]) and element(fld_name(element(
          readerstatus__3, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(218).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__last by:
          8.
<S>  New H25:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, tokenreader__interface__readerarrayi__first <= i___1 
          and i___1 <= 10 -> 0 <= element(element(readers, [i___1]), [i___2]) 
          and element(element(readers, [i___1]), [i___2]) <= 255))
<S>  New H9:  for_all(l_ : integer, 1 <= l_ and l_ <= 8 -> for_all(k_ : 
          readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus, [k_])), [l_]) and element(fld_name(element(
          readerstatus, [k_])), [l_]) <= 255))
<S>  New H42:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : readert, user <= i___1 and i___1 <= admin -> 0 <= element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) <= 255))
<S>  New C8:  for_all(l_ : integer, 1 <= l_ and l_ <= 8 -> for_all(k_ : 
          readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus__3, [k_])), [l_]) and element(fld_name(element(
          readerstatus__3, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(222).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H4:  numberreaders >= 1
<S>  New H25:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 10 -> 0 <= element(element(
          readers, [i___1]), [i___2]) and element(element(readers, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(321).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__first by:
          tokenreader__interface__unaware.
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus, [k_])) and fld_currentstatus(element(readerstatus, [k_])
          ) <= tokenreader__interface__validreaderstatet__last)
<S>  New H37:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__3, [i___1])) and fld_currentstatus(element(
          readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__3, [k_])) and fld_currentstatus(element(
          readerstatus__3, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
-S-  Applied substitution rule init_rules(322).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__last by:
          tokenreader__interface__mute.
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus, [k_])) and fld_currentstatus(element(readerstatus, [k_])
          ) <= tokenreader__interface__mute)
<S>  New H37:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__3, [i___1])) and fld_currentstatus(element(
          readerstatus__3, [i___1])) <= tokenreader__interface__mute)
<S>  New C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__3, [k_])) and fld_currentstatus(element(
          readerstatus__3, [k_])) <= tokenreader__interface__mute)
%%%  Hypotheses H22 & H43 together imply that
          loop__1__i < numberreaders__entry__loop__1.
     H22 & H43 have therefore been deleted and a new H44 added to this effect.
***  Proved C3:  loop__1__i + 1 <= numberreaders
     via its standard form, which is:
     Std.Fm C3:  - loop__1__i + numberreaders > 0
     using hypotheses H8 & H44.
***  Proved C17:  loop__1__i + 1 <= numberreaders__entry__loop__1
     via its standard form, which is:
     Std.Fm C17:  - loop__1__i + numberreaders__entry__loop__1 > 0
     using hypothesis H44.
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H26 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H31 (true-hypothesis).
---  Eliminated hypothesis H32 (true-hypothesis).
---  Eliminated hypothesis H33 (true-hypothesis).
---  Eliminated hypothesis H34 (true-hypothesis).
---  Eliminated hypothesis H35 (true-hypothesis).
---  Eliminated hypothesis H38 (true-hypothesis).
---  Eliminated hypothesis H39 (true-hypothesis).
---  Eliminated hypothesis H21 (duplicate of H1).
---  Eliminated hypothesis H2 (redundant, given H5, H8 & H44).
---  Eliminated hypothesis H3 (redundant, given H8 & H44).
---  Eliminated hypothesis H4 (redundant, given H1, H8 & H44).
---  Eliminated hypothesis H23 (redundant, given H1 & H44).
---  Eliminated hypothesis H24 (redundant, given H5 & H8).
-S-  Eliminated hypothesis H8.
     This was achieved by replacing all occurrences of numberreaders by:
          numberreaders__entry__loop__1.
<S>  New H5:  numberreaders__entry__loop__1 <= 10
---  Eliminated conclusion C15, which is a duplicate of C2.
***  Proved C2:  loop__1__i <= 9
     using hypotheses H5 & H44.
     +++  New H45:  integer__size >= 0
     +++  New H46:  character__size >= 0
     +++  New H47:  positive__size >= 0
     +++  New H48:  basictypes__unsigned32t__base__first <= 
          basictypes__unsigned32t__base__last
     +++  New H49:  audittypes__elementt__size >= 0
     +++  New H50:  audittypes__severityt__size >= 0
     +++  New H51:  audittypes__descriptioni__size >= 0
     +++  New H52:  tokentypes__tokenidt__size >= 0
     +++  New H53:  tokentypes__tokenidt__base__first <= 
          tokentypes__tokenidt__base__last
     +++  New H54:  tokentypes__tryt__size >= 0
     +++  New H55:  readert__size >= 0
     +++  New H56:  tokenreader__interface__readernamei__size >= 0
     +++  New H57:  tokenreader__interface__readerarrayi__size >= 0
     +++  New H58:  tokenreader__interface__responsecodet__size >= 0
     +++  New H59:  tokenreader__interface__readerstatet__size >= 0
     +++  New H60:  tokenreader__interface__validreaderstatet__size >= 0
     +++  New H61:  readerinfot__size >= 0
     +++  New H62:  basictypes__unsigned32t__base__first <= 0
     +++  New H63:  basictypes__unsigned32t__base__last >= 4294967295
     +++  New H64:  tokentypes__tokenidt__base__first <= 0
     +++  New H65:  tokentypes__tokenidt__base__last >= 4294967295
>>>  Attempting to prove quantified formula C8 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H66:  1 <= int_l__2
     +++  New H67:  int_l__2 <= 8
+++  New subgoal C1:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          element(fld_name(element(readerstatus__3, [k_])), [int_l__2]) and 
          element(fld_name(element(readerstatus__3, [k_])), [int_l__2]) <= 255)
     >>>  Attempting to prove quantified formula C1 by "unwrapping" it.
     +++  Added new hypotheses (in proving an implication formula).
          +++  New H68:  user <= rea_k__6
          +++  New H69:  rea_k__6 <= admin
     +++  New subgoal C1:  0 <= element(fld_name(element(readerstatus__3, [
          rea_k__6])), [int_l__2]) and element(fld_name(element(
          readerstatus__3, [rea_k__6])), [int_l__2]) <= 255
     >>>  Conclusion C1 has now been split into two, giving:
          >>>  C1:  0 <= element(fld_name(element(readerstatus__3, [rea_k__6]))
          , [int_l__2])
          >>>  C2:  element(fld_name(element(readerstatus__3, [rea_k__6])), [
          int_l__2]) <= 255
     ***  Proved subgoal C1
          using hypotheses H42, H66, H67, H68 & H69.
     ***  Proved subgoal C2
          using hypotheses H42, H66, H67, H68 & H69.
***  Proved C8:  for_all(l_ : integer, 1 <= l_ and l_ <= 8 -> for_all(k_ : 
          readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus__3, [k_])), [l_]) and element(fld_name(element(
          readerstatus__3, [k_])), [l_]) <= 255))
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C9 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H66:  user <= rea_k__7
     +++  New H67:  rea_k__7 <= admin
+++  New subgoal C1:  tokentypes__notoken <= fld_tokentry(element(
          readerstatus__3, [rea_k__7])) and fld_tokentry(element(
          readerstatus__3, [rea_k__7])) <= tokentypes__goodtoken
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  tokentypes__notoken <= fld_tokentry(element(readerstatus__3, [
          rea_k__7]))
     >>>  C2:  fld_tokentry(element(readerstatus__3, [rea_k__7])) <= 
          tokentypes__goodtoken
***  Proved subgoal C1
     using hypotheses H41, H66 & H67.
***  Proved subgoal C2
     using hypotheses H41, H66 & H67.
***  Proved C9:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus__3, [k_])) 
          and fld_tokentry(element(readerstatus__3, [k_])) <= 
          tokentypes__goodtoken)
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C10 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H66:  user <= rea_k__8
     +++  New H67:  rea_k__8 <= admin
+++  New subgoal C1:  0 <= fld_tokenid(element(readerstatus__3, [rea_k__8])) 
          and fld_tokenid(element(readerstatus__3, [rea_k__8])) <= 4294967295
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  0 <= fld_tokenid(element(readerstatus__3, [rea_k__8]))
     >>>  C2:  fld_tokenid(element(readerstatus__3, [rea_k__8])) <= 4294967295
***  Proved subgoal C1
     using hypotheses H40, H66 & H67.
***  Proved subgoal C2
     using hypotheses H40, H66 & H67.
***  Proved C10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_tokenid(element(readerstatus__3, [k_])) and fld_tokenid(element(
          readerstatus__3, [k_])) <= 4294967295)
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C12 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H66:  user <= rea_k__9
     +++  New H67:  rea_k__9 <= admin
+++  New subgoal C1:  tokenreader__interface__unaware <= fld_currentstatus(
          element(readerstatus__3, [rea_k__9])) and fld_currentstatus(element(
          readerstatus__3, [rea_k__9])) <= tokenreader__interface__mute
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__3, [rea_k__9]))
     >>>  C2:  fld_currentstatus(element(readerstatus__3, [rea_k__9])) <= 
          tokenreader__interface__mute
***  Proved subgoal C1
     using hypotheses H37, H66 & H67.
***  Proved subgoal C2
     using hypotheses H37, H66 & H67.
***  Proved C12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus__3, [k_])) and fld_currentstatus(element(
          readerstatus__3, [k_])) <= tokenreader__interface__mute)
     by unwrapping a universally-quantified formula.
>>>  Attempting to prove quantified formula C13 by "unwrapping" it.
+++  Added new hypotheses (in proving an implication formula).
     +++  New H66:  user <= rea_k__10
     +++  New H67:  rea_k__10 <= admin
+++  New subgoal C1:  0 <= fld_lastfault(element(readerstatus__3, [rea_k__10])) 
          and fld_lastfault(element(readerstatus__3, [rea_k__10])) <= 4294967295
>>>  Conclusion C1 has now been split into two, giving:
     >>>  C1:  0 <= fld_lastfault(element(readerstatus__3, [rea_k__10]))
     >>>  C2:  fld_lastfault(element(readerstatus__3, [rea_k__10])) <= 
          4294967295
***  Proved subgoal C1
     using hypotheses H36, H66 & H67.
***  Proved subgoal C2
     using hypotheses H36, H66 & H67.
***  Proved C13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_lastfault(element(readerstatus__3, [k_])) and fld_lastfault(
          element(readerstatus__3, [k_])) <= 4294967295)
     by unwrapping a universally-quantified formula.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_9.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C8 on reading formula in, to give:
     %%%  C8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  true
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
%%%  Simplified C16 on reading formula in, to give:
     %%%  C16:  loop__1__i >= 0
***  Proved C1:  loop__1__i + 1 >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C4:  numberreaders >= tokenreader__interface__readerarrayi__first
     using hypothesis H4.
***  Proved C5:  numberreaders <= tokenreader__interface__readerarrayi__last
     using hypothesis H5.
***  Proved C6:  true
***  Proved C7:  numberreaders = numberreaders__entry__loop__1
     using hypothesis H8.
***  Proved C8:  for_all(l_ : integer, 
          tokenreader__interface__readernamei__first <= l_ and l_ <= 
          tokenreader__interface__readernamei__last -> for_all(k_ : readert, 
          readert__first <= k_ and k_ <= readert__last -> character__first <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
     using hypothesis H9.
***  Proved C9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
     using hypothesis H10.
***  Proved C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
     using hypothesis H11.
***  Proved C11:  true
***  Proved C12:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
     using hypothesis H13.
***  Proved C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
     using hypothesis H14.
***  Proved C14:  loop__1__i + 1 >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C16:  loop__1__i >= 0
     using hypothesis H21.
***  Proved C18:  numberreaders__entry__loop__1 >= 
          basictypes__unsigned32t__first
     using hypothesis H23.
***  Proved C19:  numberreaders__entry__loop__1 <= basictypes__unsigned32t__last
     using hypothesis H24.
-S-  Applied substitution rule init_rules(223).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__last by:
          10.
<S>  New H2:  loop__1__i <= 10
<S>  New H5:  numberreaders <= 10
<S>  New H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> character__first <= element(element(readers, [i___1]), [i___2]) 
          and element(element(readers, [i___1]), [i___2]) <= character__last))
<S>  New C2:  loop__1__i <= 9
<S>  New C15:  loop__1__i <= 9
>>>  Restructured hypothesis H30 into:
     >>>  H30:  element(expectedreadernames, [loop__2__r]) <> element(readers, [
          loop__1__i])
>>>  Restructured hypothesis H32 into:
     >>>  H32:  loop__1__i <> numberreaders__entry__loop__1
-S-  Applied substitution rule init_rules(9).
     This was achieved by replacing all occurrences of character__first by:
          0.
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> 0 <= element(element(readers, [i___1]), [i___2]) and element(
          element(readers, [i___1]), [i___2]) <= character__last))
-S-  Applied substitution rule init_rules(10).
     This was achieved by replacing all occurrences of character__last by:
          255.
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 0 <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= 255))
<S>  New H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> 0 <= element(element(readers, [i___1]), [i___2]) and element(
          element(readers, [i___1]), [i___2]) <= 255))
-S-  Applied substitution rule init_rules(20).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__first by:
          0.
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus, [k_])) and 
          fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H23:  numberreaders__entry__loop__1 >= 0
-S-  Applied substitution rule init_rules(21).
     This was achieved by replacing all occurrences of 
          basictypes__unsigned32t__last by:
          4294967295.
<S>  New H24:  numberreaders__entry__loop__1 <= 4294967295
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_lastfault(element(readerstatus, [k_])) and 
          fld_lastfault(element(readerstatus, [k_])) <= 4294967295)
-S-  Applied substitution rule init_rules(163).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__first by:
          0.
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus, [k_])) and 
          fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
-S-  Applied substitution rule init_rules(164).
     This was achieved by replacing all occurrences of 
          tokentypes__tokenidt__last by:
          4294967295.
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> 0 <= fld_tokenid(element(readerstatus, [k_])) and 
          fld_tokenid(element(readerstatus, [k_])) <= 4294967295)
-S-  Applied substitution rule init_rules(169).
     This was achieved by replacing all occurrences of tokentypes__tryt__first 
          by:
          tokentypes__notoken.
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
-S-  Applied substitution rule init_rules(170).
     This was achieved by replacing all occurrences of tokentypes__tryt__last 
          by:
          tokentypes__goodtoken.
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__notoken <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H6:  user <= loop__2__r
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= element(
          fld_name(element(readerstatus, [k_])), [l_]) and element(fld_name(
          element(readerstatus, [k_])), [l_]) <= 255))
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_lastfault(element(readerstatus, [k_])) and fld_lastfault(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 0 <= 
          fld_tokenid(element(readerstatus, [k_])) and fld_tokenid(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus, [k_])) and 
          fld_tokentry(element(readerstatus, [k_])) <= tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H31:  loop__2__r = admin
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(
          element(readerstatus, [k_])), [l_]) and element(fld_name(element(
          readerstatus, [k_])), [l_]) <= 255))
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_lastfault(element(readerstatus, [k_])) and fld_lastfault(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 0 <= 
          fld_tokenid(element(readerstatus, [k_])) and fld_tokenid(element(
          readerstatus, [k_])) <= 4294967295)
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__notoken <= fld_tokentry(element(readerstatus, [k_])) and 
          fld_tokentry(element(readerstatus, [k_])) <= tokentypes__goodtoken)
-S-  Applied substitution rule init_rules(217).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__first by:
          1.
<S>  New H25:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 10 
          -> 0 <= element(element(readers, [i___1]), [i___2]) and element(
          element(readers, [i___1]), [i___2]) <= 255))
<S>  New H9:  for_all(l_ : integer, 1 <= l_ and l_ <= 
          tokenreader__interface__readernamei__last -> for_all(k_ : readert, 
          user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus, [k_])), [l_]) and element(fld_name(element(
          readerstatus, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(218).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readernamei__last by:
          8.
<S>  New H25:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, tokenreader__interface__readerarrayi__first <= i___1 
          and i___1 <= 10 -> 0 <= element(element(readers, [i___1]), [i___2]) 
          and element(element(readers, [i___1]), [i___2]) <= 255))
<S>  New H9:  for_all(l_ : integer, 1 <= l_ and l_ <= 8 -> for_all(k_ : 
          readert, user <= k_ and k_ <= admin -> 0 <= element(fld_name(element(
          readerstatus, [k_])), [l_]) and element(fld_name(element(
          readerstatus, [k_])), [l_]) <= 255))
-S-  Applied substitution rule init_rules(222).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__readerarrayi__first by:
          1.
<S>  New H1:  loop__1__i >= 1
<S>  New H4:  numberreaders >= 1
<S>  New H25:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 8 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 10 -> 0 <= element(element(
          readers, [i___1]), [i___2]) and element(element(readers, [i___1]), [
          i___2]) <= 255))
-S-  Applied substitution rule init_rules(321).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__first by:
          tokenreader__interface__unaware.
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus, [k_])) and fld_currentstatus(element(readerstatus, [k_])
          ) <= tokenreader__interface__validreaderstatet__last)
-S-  Applied substitution rule init_rules(322).
     This was achieved by replacing all occurrences of 
          tokenreader__interface__validreaderstatet__last by:
          tokenreader__interface__mute.
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__unaware <= fld_currentstatus(element(
          readerstatus, [k_])) and fld_currentstatus(element(readerstatus, [k_])
          ) <= tokenreader__interface__mute)
%%%  Hypotheses H22 & H32 together imply that
          loop__1__i < numberreaders__entry__loop__1.
     H22 & H32 have therefore been deleted and a new H33 added to this effect.
***  Proved C3:  loop__1__i + 1 <= numberreaders
     via its standard form, which is:
     Std.Fm C3:  - loop__1__i + numberreaders > 0
     using hypotheses H8 & H33.
***  Proved C17:  loop__1__i + 1 <= numberreaders__entry__loop__1
     via its standard form, which is:
     Std.Fm C17:  - loop__1__i + numberreaders__entry__loop__1 > 0
     using hypothesis H33.
---  Eliminated hypothesis H12 (true-hypothesis).
---  Eliminated hypothesis H15 (true-hypothesis).
---  Eliminated hypothesis H16 (true-hypothesis).
---  Eliminated hypothesis H17 (true-hypothesis).
---  Eliminated hypothesis H18 (true-hypothesis).
---  Eliminated hypothesis H19 (true-hypothesis).
---  Eliminated hypothesis H20 (true-hypothesis).
---  Eliminated hypothesis H26 (true-hypothesis).
---  Eliminated hypothesis H27 (true-hypothesis).
---  Eliminated hypothesis H28 (true-hypothesis).
---  Eliminated hypothesis H29 (true-hypothesis).
---  Eliminated hypothesis H21 (duplicate of H1).
---  Eliminated hypothesis H2 (redundant, given H5, H8 & H33).
---  Eliminated hypothesis H3 (redundant, given H8 & H33).
---  Eliminated hypothesis H4 (redundant, given H1, H8 & H33).
---  Eliminated hypothesis H23 (redundant, given H1 & H33).
---  Eliminated hypothesis H24 (redundant, given H5 & H8).
-S-  Eliminated hypothesis H8.
     This was achieved by replacing all occurrences of numberreaders by:
          numberreaders__entry__loop__1.
<S>  New H5:  numberreaders__entry__loop__1 <= 10
-S-  Eliminated hypothesis H31.
     This was achieved by replacing all occurrences of loop__2__r by:
          admin.
<S>  New H30:  element(expectedreadernames, [admin]) <> element(readers, [
          loop__1__i])
<S>  New H6:  true
<S>  New H7:  true
---  Eliminated hypothesis H6 (true-hypothesis).
---  Eliminated hypothesis H7 (true-hypothesis).
---  Eliminated conclusion C15, which is a duplicate of C2.
***  Proved C2:  loop__1__i <= 9
     using hypotheses H5 & H33.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_10.  @@@@@@@@@@
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  true
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  true
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  true
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified C14 on reading formula in, to give:
     %%%  C14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
%%%  Simplified C15 on reading formula in, to give:
     %%%  C15:  true
%%%  Simplified C17 on reading formula in, to give:
     %%%  C17:  true
***  Proved C1:  loop__1__i >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= tokenreader__interface__readerarrayi__last
     using hypothesis H2.
***  Proved C3:  loop__1__i <= numberreaders
     using hypothesis H3.
***  Proved C4:  numberreaders >= tokenreader__interface__readerarrayi__first
     using hypothesis H4.
***  Proved C5:  numberreaders <= tokenreader__interface__readerarrayi__last
     using hypothesis H5.
***  Proved C6:  true
***  Proved C8:  numberreaders = numberreaders__entry__loop__1
     using hypothesis H7.
***  Proved C9:  for_all(l_ : integer, 
          tokenreader__interface__readernamei__first <= l_ and l_ <= 
          tokenreader__interface__readernamei__last -> for_all(k_ : readert, 
          readert__first <= k_ and k_ <= readert__last -> character__first <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
     using hypothesis H8.
***  Proved C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
     using hypothesis H9.
***  Proved C11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
     using hypothesis H10.
***  Proved C12:  true
***  Proved C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
     using hypothesis H12.
***  Proved C14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
     using hypothesis H13.
***  Proved C15:  true
***  Proved C17:  true
***  Proved C19:  loop__1__i >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C20:  loop__1__i <= tokenreader__interface__readerarrayi__last
     using hypothesis H2.
***  Proved C21:  loop__1__i >= 1
     using hypothesis H16.
***  Proved C22:  loop__1__i <= numberreaders__entry__loop__1
     using hypothesis H17.
***  Proved C23:  numberreaders__entry__loop__1 >= 
          basictypes__unsigned32t__first
     using hypothesis H18.
***  Proved C24:  numberreaders__entry__loop__1 <= basictypes__unsigned32t__last
     using hypothesis H19.
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> character__first 
          <= element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H9:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H12:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New C7:  user <= readert__last
<S>  New C16:  user <= readert__last
<S>  New C18:  user <= readert__last
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H8:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> character__first <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H9:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H12:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New C7:  true
<S>  New C16:  true
<S>  New C18:  true
***  Proved C7:  true
***  Proved C16:  true
***  Proved C18:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_11.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C6 on reading formula in, to give:
     %%%  C6:  readert__first <= succ(loop__2__r)
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified C10 on reading formula in, to give:
     %%%  C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified C11 on reading formula in, to give:
     %%%  C11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified C12 on reading formula in, to give:
     %%%  C12:  true
%%%  Simplified C13 on reading formula in, to give:
     %%%  C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified C14 on reading formula in, to give:
     %%%  C14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
%%%  Simplified C15 on reading formula in, to give:
     %%%  C15:  readert__first <= succ(loop__2__r)
%%%  Simplified C17 on reading formula in, to give:
     %%%  C17:  readert__first <= succ(loop__2__r)
***  Proved C1:  loop__1__i >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= tokenreader__interface__readerarrayi__last
     using hypothesis H2.
***  Proved C3:  loop__1__i <= numberreaders
     using hypothesis H3.
***  Proved C4:  numberreaders >= tokenreader__interface__readerarrayi__first
     using hypothesis H4.
***  Proved C5:  numberreaders <= tokenreader__interface__readerarrayi__last
     using hypothesis H5.
***  Proved C8:  numberreaders = numberreaders__entry__loop__1
     using hypothesis H8.
***  Proved C9:  for_all(l_ : integer, 
          tokenreader__interface__readernamei__first <= l_ and l_ <= 
          tokenreader__interface__readernamei__last -> for_all(k_ : readert, 
          readert__first <= k_ and k_ <= readert__last -> character__first <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
     using hypothesis H9.
***  Proved C10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
     using hypothesis H10.
***  Proved C11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
     using hypothesis H11.
***  Proved C12:  true
***  Proved C13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
     using hypothesis H13.
***  Proved C14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
     using hypothesis H14.
***  Proved C19:  loop__1__i >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C20:  loop__1__i <= tokenreader__interface__readerarrayi__last
     using hypothesis H2.
***  Proved C21:  loop__1__i >= 1
     using hypothesis H21.
***  Proved C22:  loop__1__i <= numberreaders__entry__loop__1
     using hypothesis H22.
***  Proved C23:  numberreaders__entry__loop__1 >= 
          basictypes__unsigned32t__first
     using hypothesis H23.
***  Proved C24:  numberreaders__entry__loop__1 <= basictypes__unsigned32t__last
     using hypothesis H24.
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H6:  user <= loop__2__r
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> character__first 
          <= element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New C6:  user <= succ(loop__2__r)
<S>  New C15:  user <= succ(loop__2__r)
<S>  New C17:  user <= succ(loop__2__r)
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H31:  not loop__2__r = admin
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> character__first <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New C7:  loop__2__r <= user
<S>  New C16:  loop__2__r <= user
<S>  New C18:  loop__2__r <= user
***  Proved C6:  user <= succ(loop__2__r)
     using hypotheses H6 & H31.
***  Proved C15:  user <= succ(loop__2__r)
     using hypotheses H6 & H31.
***  Proved C17:  user <= succ(loop__2__r)
     using hypotheses H6 & H31.
***  Proved C7:  loop__2__r <= user
     using hypothesis H[31].
***  Proved C16:  loop__2__r <= user
     using hypothesis H[31].
***  Proved C18:  loop__2__r <= user
     using hypothesis H[31].
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_12.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= loop__2__r
***  Proved C1:  loop__1__i >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C2:  loop__1__i <= tokenreader__interface__readerarrayi__last
     using hypothesis H2.
***  Proved C3:  readert__first <= loop__2__r
     using hypothesis H6.
***  Proved C4:  loop__2__r <= readert__last
     using hypothesis H7.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_13.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= loop__2__r
***  Proved C1:  readert__first <= loop__2__r
     using hypothesis H6.
***  Proved C2:  loop__2__r <= readert__last
     using hypothesis H7.
***  Proved C3:  loop__1__i >= tokenreader__interface__readerarrayi__first
     using hypothesis H1.
***  Proved C4:  loop__1__i <= tokenreader__interface__readerarrayi__last
     using hypothesis H2.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_14.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= user
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= user
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> basictypes__unsigned32t__first <= fld_lastfault(element(
          readerstatus__1, [i___1])) and fld_lastfault(element(readerstatus__1, 
          [i___1])) <= basictypes__unsigned32t__last)
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= readert__last 
          -> tokentypes__tryt__first <= fld_tokentry(element(readerstatus__1, [
          i___1])) and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__tryt__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= readert__last -> character__first <= 
          element(fld_name(element(readerstatus__1, [i___1])), [i___2]) and 
          element(fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 
          character__last))
<S>  New C1:  true
<S>  New C3:  true
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H2:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(
          readerstatus__1, [i___1])) and fld_lastfault(element(readerstatus__1, 
          [i___1])) <= basictypes__unsigned32t__last)
<S>  New H3:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__1, [i___1])) and fld_currentstatus(element(
          readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H6:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus__1, [
          i___1])) and fld_tokenid(element(readerstatus__1, [i___1])) <= 
          tokentypes__tokenidt__last)
<S>  New H7:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus__1, [
          i___1])) and fld_tokentry(element(readerstatus__1, [i___1])) <= 
          tokentypes__tryt__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> character__first <= element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 
          character__last))
<S>  New C2:  true
<S>  New C4:  true
***  Proved C1:  true
***  Proved C3:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_15.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H34 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H35 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__3, [i___1])), [
          i___2]) <= character__last))
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= user
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= user
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H6:  user <= loop__2__r
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> character__first 
          <= element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H36:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
<S>  New H37:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H40:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
<S>  New H41:  for_all(i___1 : readert, user <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= readert__last -> character__first <= 
          element(fld_name(element(readerstatus__3, [i___1])), [i___2]) and 
          element(fld_name(element(readerstatus__3, [i___1])), [i___2]) <= 
          character__last))
<S>  New C1:  true
<S>  New C3:  true
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> character__first <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H36:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(
          readerstatus__3, [i___1])) and fld_lastfault(element(readerstatus__3, 
          [i___1])) <= basictypes__unsigned32t__last)
<S>  New H37:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus__3, [i___1])) and fld_currentstatus(element(
          readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H40:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus__3, [
          i___1])) and fld_tokenid(element(readerstatus__3, [i___1])) <= 
          tokentypes__tokenidt__last)
<S>  New H41:  for_all(i___1 : readert, user <= i___1 and i___1 <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus__3, [
          i___1])) and fld_tokentry(element(readerstatus__3, [i___1])) <= 
          tokentypes__tryt__last)
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          user <= i___1 and i___1 <= admin -> character__first <= element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) and element(
          fld_name(element(readerstatus__3, [i___1])), [i___2]) <= 
          character__last))
<S>  New C2:  true
<S>  New C4:  true
***  Proved C1:  true
***  Proved C3:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_16.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= user
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= user
-S-  Applied substitution rule init_rules(194).
     This was achieved by replacing all occurrences of readert__first by:
          user.
<S>  New H6:  user <= loop__2__r
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= readert__last -> character__first 
          <= element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= readert__last -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New C1:  true
<S>  New C3:  true
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H31:  loop__2__r = admin
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, user <= k_ and k_ <= admin -> character__first <= 
          element(fld_name(element(readerstatus, [k_])), [l_]) and element(
          fld_name(element(readerstatus, [k_])), [l_]) <= character__last))
<S>  New H10:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, user <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New C2:  true
<S>  New C4:  true
***  Proved C1:  true
***  Proved C3:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_17.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified H48 on reading formula in, to give:
     %%%  H48:  readert__first <= user
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H48).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H49).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_18.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H34 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H35 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__3, [i___1])), [
          i___2]) <= character__last))
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  readert__first <= user
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H44).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H45).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_19.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  readert__first <= user
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H34).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_20.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified H48 on reading formula in, to give:
     %%%  H48:  readert__first <= user
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H48).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H49).
%%%  Simplified H53 on reading formula in, to give:
     %%%  H53:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified H55 on reading formula in, to give:
     %%%  H55:  audittypes__elementt__first <= audittypes__systemfault
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= admin
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= admin
***  Proved C1:  readert__first <= admin
     using hypothesis H48.
***  Proved C3:  readert__first <= admin
     using hypothesis H48.
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> basictypes__unsigned32t__first <= fld_lastfault(element(
          readerstatus__1, [i___1])) and fld_lastfault(element(readerstatus__1, 
          [i___1])) <= basictypes__unsigned32t__last)
<S>  New H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= admin -> character__first <= 
          element(fld_name(element(readerstatus__1, [i___1])), [i___2]) and 
          element(fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 
          character__last))
<S>  New H49:  true
<S>  New C2:  true
<S>  New C4:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_21.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified H48 on reading formula in, to give:
     %%%  H48:  readert__first <= user
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H48).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H49).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= admin
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= admin
***  Proved C1:  readert__first <= admin
     using hypothesis H48.
***  Proved C3:  readert__first <= admin
     using hypothesis H48.
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> basictypes__unsigned32t__first <= fld_lastfault(element(
          readerstatus__1, [i___1])) and fld_lastfault(element(readerstatus__1, 
          [i___1])) <= basictypes__unsigned32t__last)
<S>  New H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
<S>  New H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
<S>  New H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= admin -> character__first <= 
          element(fld_name(element(readerstatus__1, [i___1])), [i___2]) and 
          element(fld_name(element(readerstatus__1, [i___1])), [i___2]) <= 
          character__last))
<S>  New H49:  true
<S>  New C2:  true
<S>  New C4:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_22.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H34 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H35 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__3, [i___1])), [
          i___2]) <= character__last))
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  readert__first <= user
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H44).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H45).
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified H51 on reading formula in, to give:
     %%%  H51:  audittypes__elementt__first <= audittypes__systemfault
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= admin
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= admin
***  Proved C1:  readert__first <= admin
     using hypothesis H44.
***  Proved C3:  readert__first <= admin
     using hypothesis H44.
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= admin -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> basictypes__unsigned32t__first <= fld_lastfault(element(
          readerstatus__3, [i___1])) and fld_lastfault(element(readerstatus__3, 
          [i___1])) <= basictypes__unsigned32t__last)
<S>  New H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
<S>  New H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= admin -> character__first <= 
          element(fld_name(element(readerstatus__3, [i___1])), [i___2]) and 
          element(fld_name(element(readerstatus__3, [i___1])), [i___2]) <= 
          character__last))
<S>  New H45:  true
<S>  New C2:  true
<S>  New C4:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_23.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  readert__first <= user
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H34).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  audittypes__elementt__first <= audittypes__systemfault
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= admin
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= admin
***  Proved C1:  readert__first <= admin
     using hypothesis H33.
***  Proved C3:  readert__first <= admin
     using hypothesis H33.
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= admin -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H31:  loop__2__r = admin
<S>  New H34:  true
<S>  New C2:  true
<S>  New C4:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_24.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H34 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H35 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__3, [i___1])), [
          i___2]) <= character__last))
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  readert__first <= user
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H44).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H45).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= admin
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= admin
***  Proved C1:  readert__first <= admin
     using hypothesis H44.
***  Proved C3:  readert__first <= admin
     using hypothesis H44.
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= admin -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> basictypes__unsigned32t__first <= fld_lastfault(element(
          readerstatus__3, [i___1])) and fld_lastfault(element(readerstatus__3, 
          [i___1])) <= basictypes__unsigned32t__last)
<S>  New H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
<S>  New H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          admin -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
<S>  New H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= admin -> character__first <= 
          element(fld_name(element(readerstatus__3, [i___1])), [i___2]) and 
          element(fld_name(element(readerstatus__3, [i___1])), [i___2]) <= 
          character__last))
<S>  New H45:  true
<S>  New C2:  true
<S>  New C4:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_25.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  readert__first <= user
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H34).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  readert__first <= admin
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  readert__first <= admin
***  Proved C1:  readert__first <= admin
     using hypothesis H33.
***  Proved C3:  readert__first <= admin
     using hypothesis H33.
-S-  Applied substitution rule init_rules(195).
     This was achieved by replacing all occurrences of readert__last by:
          admin.
<S>  New H7:  loop__2__r <= admin
<S>  New H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= admin -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
<S>  New H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tryt__first <= fld_tokentry(element(readerstatus, [k_])) 
          and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
<S>  New H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokentypes__tokenidt__first <= fld_tokenid(element(readerstatus, [k_])
          ) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
<S>  New H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          tokenreader__interface__validreaderstatet__first <= fld_currentstatus(
          element(readerstatus, [k_])) and fld_currentstatus(element(
          readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
<S>  New H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= admin -> 
          basictypes__unsigned32t__first <= fld_lastfault(element(readerstatus, 
          [k_])) and fld_lastfault(element(readerstatus, [k_])) <= 
          basictypes__unsigned32t__last)
<S>  New H31:  loop__2__r = admin
<S>  New H34:  true
<S>  New C2:  true
<S>  New C4:  true
***  Proved C2:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_26.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified H48 on reading formula in, to give:
     %%%  H48:  readert__first <= user
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H48).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H49).
%%%  Simplified H53 on reading formula in, to give:
     %%%  H53:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified H55 on reading formula in, to give:
     %%%  H55:  audittypes__elementt__first <= audittypes__systemfault
%%%  Simplified H57 on reading formula in, to give:
     %%%  H57:  readert__first <= admin
---  Hypothesis H59 has been replaced by "true".  (It is already present, as 
          H57).
---  Hypothesis H60 has been replaced by "true".  (It is already present, as 
          H58).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
***  Proved C1:  audittypes__severityt__first <= audittypes__warning
     using hypothesis H53.
***  Proved C2:  audittypes__warning <= audittypes__severityt__last
     using hypothesis H54.
***  Proved C3:  audittypes__elementt__first <= audittypes__systemfault
     using hypothesis H55.
***  Proved C4:  audittypes__systemfault <= audittypes__elementt__last
     using hypothesis H56.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_27.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H39 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified H48 on reading formula in, to give:
     %%%  H48:  readert__first <= user
---  Hypothesis H50 has been replaced by "true".  (It is already present, as 
          H48).
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H49).
%%%  Simplified H53 on reading formula in, to give:
     %%%  H53:  readert__first <= admin
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H53).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H54).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_28.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H34 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H35 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__3, [i___1])), [
          i___2]) <= character__last))
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  readert__first <= user
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H44).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H45).
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified H51 on reading formula in, to give:
     %%%  H51:  audittypes__elementt__first <= audittypes__systemfault
%%%  Simplified H53 on reading formula in, to give:
     %%%  H53:  readert__first <= admin
---  Hypothesis H55 has been replaced by "true".  (It is already present, as 
          H53).
---  Hypothesis H56 has been replaced by "true".  (It is already present, as 
          H54).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
***  Proved C1:  audittypes__severityt__first <= audittypes__warning
     using hypothesis H49.
***  Proved C2:  audittypes__warning <= audittypes__severityt__last
     using hypothesis H50.
***  Proved C3:  audittypes__elementt__first <= audittypes__systemfault
     using hypothesis H51.
***  Proved C4:  audittypes__systemfault <= audittypes__elementt__last
     using hypothesis H52.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_29.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  readert__first <= user
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H34).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  audittypes__elementt__first <= audittypes__systemfault
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  readert__first <= admin
---  Hypothesis H44 has been replaced by "true".  (It is already present, as 
          H42).
---  Hypothesis H45 has been replaced by "true".  (It is already present, as 
          H43).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
***  Proved C1:  audittypes__severityt__first <= audittypes__warning
     using hypothesis H38.
***  Proved C2:  audittypes__warning <= audittypes__severityt__last
     using hypothesis H39.
***  Proved C3:  audittypes__elementt__first <= audittypes__systemfault
     using hypothesis H40.
***  Proved C4:  audittypes__systemfault <= audittypes__elementt__last
     using hypothesis H41.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_30.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H25).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H33 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H34 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H35 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H36 on reading formula in, to give:
     %%%  H36:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__3, [i___1])) and fld_lastfault(element(
          readerstatus__3, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H37 on reading formula in, to give:
     %%%  H37:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__3, [i___1])) and 
          fld_currentstatus(element(readerstatus__3, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H40 on reading formula in, to give:
     %%%  H40:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__3, [i___1])) and fld_tokenid(element(readerstatus__3, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H41 on reading formula in, to give:
     %%%  H41:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__3, [i___1])) and fld_tokentry(element(readerstatus__3, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H42 on reading formula in, to give:
     %%%  H42:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__3, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__3, [i___1])), [
          i___2]) <= character__last))
%%%  Simplified H44 on reading formula in, to give:
     %%%  H44:  readert__first <= user
---  Hypothesis H46 has been replaced by "true".  (It is already present, as 
          H44).
---  Hypothesis H47 has been replaced by "true".  (It is already present, as 
          H45).
%%%  Simplified H49 on reading formula in, to give:
     %%%  H49:  readert__first <= admin
---  Hypothesis H51 has been replaced by "true".  (It is already present, as 
          H49).
---  Hypothesis H52 has been replaced by "true".  (It is already present, as 
          H50).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_31.  @@@@@@@@@@
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  readert__first <= loop__2__r
%%%  Simplified H9 on reading formula in, to give:
     %%%  H9:  for_all(l_ : integer, tokenreader__interface__readernamei__first 
          <= l_ and l_ <= tokenreader__interface__readernamei__last -> for_all(
          k_ : readert, readert__first <= k_ and k_ <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus, [k_])), [
          l_]) and element(fld_name(element(readerstatus, [k_])), [l_]) <= 
          character__last))
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus, [k_])) and fld_tokentry(element(readerstatus, [k_])) <= 
          tokentypes__tryt__last)
%%%  Simplified H11 on reading formula in, to give:
     %%%  H11:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus, [k_])) and fld_tokenid(element(readerstatus, [k_])) <= 
          tokentypes__tokenidt__last)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  true
%%%  Simplified H13 on reading formula in, to give:
     %%%  H13:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus, [k_])) and fld_currentstatus(
          element(readerstatus, [k_])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H14 on reading formula in, to give:
     %%%  H14:  for_all(k_ : readert, readert__first <= k_ and k_ <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus, [k_])) and fld_lastfault(element(readerstatus, [
          k_])) <= basictypes__unsigned32t__last)
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H17 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H18 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H19 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as H2)
          .
%%%  Simplified H25 on reading formula in, to give:
     %%%  H25:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers, [i___1]), [i___2]) and element(element(
          readers, [i___1]), [i___2]) <= character__last))
---  Hypothesis H26 has been replaced by "true".  (It is already present, as H1)
          .
---  Hypothesis H27 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H28 has been replaced by "true".  (It is already present, as H6)
          .
---  Hypothesis H29 has been replaced by "true".  (It is already present, as H7)
          .
%%%  Simplified H33 on reading formula in, to give:
     %%%  H33:  readert__first <= user
---  Hypothesis H35 has been replaced by "true".  (It is already present, as 
          H33).
---  Hypothesis H36 has been replaced by "true".  (It is already present, as 
          H34).
%%%  Simplified H38 on reading formula in, to give:
     %%%  H38:  readert__first <= admin
---  Hypothesis H40 has been replaced by "true".  (It is already present, as 
          H38).
---  Hypothesis H41 has been replaced by "true".  (It is already present, as 
          H39).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_32.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H17).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_33.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H19).
***  Proved C1:  responsecode__2 >= basictypes__unsigned32t__first
     using hypothesis H18.
***  Proved C2:  responsecode__2 <= basictypes__unsigned32t__last
     using hypothesis H19.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_34.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> basictypes__unsigned32t__first <= fld_lastfault(
          element(readerstatus__1, [i___1])) and fld_lastfault(element(
          readerstatus__1, [i___1])) <= basictypes__unsigned32t__last)
%%%  Simplified H3 on reading formula in, to give:
     %%%  H3:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokenreader__interface__validreaderstatet__first <= 
          fld_currentstatus(element(readerstatus__1, [i___1])) and 
          fld_currentstatus(element(readerstatus__1, [i___1])) <= 
          tokenreader__interface__validreaderstatet__last)
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tokenidt__first <= fld_tokenid(element(
          readerstatus__1, [i___1])) and fld_tokenid(element(readerstatus__1, [
          i___1])) <= tokentypes__tokenidt__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : readert, readert__first <= i___1 and i___1 <= 
          readert__last -> tokentypes__tryt__first <= fld_tokentry(element(
          readerstatus__1, [i___1])) and fld_tokentry(element(readerstatus__1, [
          i___1])) <= tokentypes__tryt__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : readert, 
          readert__first <= i___1 and i___1 <= readert__last -> 
          character__first <= element(fld_name(element(readerstatus__1, [i___1])
          ), [i___2]) and element(fld_name(element(readerstatus__1, [i___1])), [
          i___2]) <= character__last))
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H10).
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  for_all(i___2 : integer, 
          tokenreader__interface__readernamei__first <= i___2 and i___2 <= 
          tokenreader__interface__readernamei__last -> for_all(i___1 : integer, 
          tokenreader__interface__readerarrayi__first <= i___1 and i___1 <= 
          tokenreader__interface__readerarrayi__last -> character__first <= 
          element(element(readers__2, [i___1]), [i___2]) and element(element(
          readers__2, [i___1]), [i___2]) <= character__last))
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H29 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H19).
%%%  Simplified H31 on reading formula in, to give:
     %%%  H31:  for_all(i___1 : integer, audittypes__descriptioni__first <= 
          i___1 and i___1 <= audittypes__descriptioni__last -> character__first 
          <= element(makedescription(mk__string([1] := 84, [2] := 111, [3] := 
          107, [4] := 101, [5] := 110, [6] := 32, [7] := 82, [8] := 101, [9] := 
          97, [10] := 100, [11] := 101, [12] := 114, [13] := 32, [14] := 105, [
          15] := 110, [16] := 105, [17] := 116, [18] := 105, [19] := 97, [20] 
          := 108, [21] := 105, [22] := 115, [23] := 97, [24] := 116, [25] := 
          105, [26] := 111, [27] := 110, [28] := 32, [29] := 102, [30] := 97, [
          31] := 105, [32] := 108, [33] := 117, [34] := 114, [35] := 101, [36] 
          := 32, [37] := 58, [38] := 32), responsecode__2), [i___1]) and 
          element(makedescription(mk__string([1] := 84, [2] := 111, [3] := 107, 
          [4] := 101, [5] := 110, [6] := 32, [7] := 82, [8] := 101, [9] := 97, [
          10] := 100, [11] := 101, [12] := 114, [13] := 32, [14] := 105, [15] 
          := 110, [16] := 105, [17] := 116, [18] := 105, [19] := 97, [20] := 
          108, [21] := 105, [22] := 115, [23] := 97, [24] := 116, [25] := 105, [
          26] := 111, [27] := 110, [28] := 32, [29] := 102, [30] := 97, [31] := 
          105, [32] := 108, [33] := 117, [34] := 114, [35] := 101, [36] := 32, [
          37] := 58, [38] := 32), responsecode__2), [i___1]) <= character__last)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  audittypes__severityt__first <= audittypes__warning
%%%  Simplified C3 on reading formula in, to give:
     %%%  C3:  audittypes__elementt__first <= audittypes__systemfault
-S-  Applied substitution rule init_rules(133).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__first by:
          audittypes__information.
<S>  New C1:  true
-S-  Applied substitution rule init_rules(134).
     This was achieved by replacing all occurrences of 
          audittypes__severityt__last by:
          audittypes__critical.
<S>  New C2:  true
-S-  Applied substitution rule init_rules(26).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__first by:
          audittypes__startunenrolledtis.
<S>  New C3:  true
-S-  Applied substitution rule init_rules(27).
     This was achieved by replacing all occurrences of 
          audittypes__elementt__last by:
          audittypes__systemfault.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_35.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_36.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_37.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_38.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_39.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_40.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_41.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_42.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_43.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_44.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_45.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_46.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_47.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_48.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_49.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_init_50.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.

