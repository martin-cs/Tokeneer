           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:19.65

                    procedure TokenReader.GetCertificate




For path(s) from start to run-time check associated with statement of line 869:

procedure_getcertificate_1.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
        ->
C1:    reader >= readert__first .
C2:    reader <= readert__last .
 

For path(s) from start to run-time check associated with statement of line 872:

procedure_getcertificate_2.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__idcert .
        ->
C1:    reader >= readert__first .
C2:    reader <= readert__last .
 

For path(s) from start to run-time check associated with statement of line 872:

procedure_getcertificate_3.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__idcert .
H17:   reader >= readert__first .
H18:   reader <= readert__last .
H19:   for_all(i___1: integer, ((i___1 >= 
           certtypes__rawcertificatei__first) and (i___1 <= 
           certtypes__rawcertificatei__last)) -> ((element(rawcert__1, [
           i___1]) >= character__first) and (element(rawcert__1, [
           i___1]) <= character__last))) .
H20:   true .
H21:   responsecode__1 >= basictypes__unsigned32t__first .
H22:   responsecode__1 <= basictypes__unsigned32t__last .
        ->
C1:    responsecode__1 >= basictypes__unsigned32t__first .
C2:    responsecode__1 <= basictypes__unsigned32t__last .
 

For path(s) from start to run-time check associated with statement of line 878:

procedure_getcertificate_4.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__authcert .
        ->
C1:    reader >= readert__first .
C2:    reader <= readert__last .
 

For path(s) from start to run-time check associated with statement of line 878:

procedure_getcertificate_5.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__authcert .
H17:   reader >= readert__first .
H18:   reader <= readert__last .
H19:   for_all(i___1: integer, ((i___1 >= 
           certtypes__rawcertificatei__first) and (i___1 <= 
           certtypes__rawcertificatei__last)) -> ((element(rawcert__2, [
           i___1]) >= character__first) and (element(rawcert__2, [
           i___1]) <= character__last))) .
H20:   true .
H21:   true .
H22:   responsecode__2 >= basictypes__unsigned32t__first .
H23:   responsecode__2 <= basictypes__unsigned32t__last .
        ->
C1:    responsecode__2 >= basictypes__unsigned32t__first .
C2:    responsecode__2 <= basictypes__unsigned32t__last .
 

For path(s) from start to run-time check associated with statement of line 885:

procedure_getcertificate_6.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__privcert .
        ->
C1:    reader >= readert__first .
C2:    reader <= readert__last .
 

For path(s) from start to run-time check associated with statement of line 885:

procedure_getcertificate_7.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__privcert .
H17:   reader >= readert__first .
H18:   reader <= readert__last .
H19:   for_all(i___1: integer, ((i___1 >= 
           certtypes__rawcertificatei__first) and (i___1 <= 
           certtypes__rawcertificatei__last)) -> ((element(rawcert__3, [
           i___1]) >= character__first) and (element(rawcert__3, [
           i___1]) <= character__last))) .
H20:   true .
H21:   responsecode__3 >= basictypes__unsigned32t__first .
H22:   responsecode__3 <= basictypes__unsigned32t__last .
        ->
C1:    responsecode__3 >= basictypes__unsigned32t__first .
C2:    responsecode__3 <= basictypes__unsigned32t__last .
 

For path(s) from start to run-time check associated with statement of line 891:

procedure_getcertificate_8.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__iandacert .
        ->
C1:    reader >= readert__first .
C2:    reader <= readert__last .
 

For path(s) from start to run-time check associated with statement of line 891:

procedure_getcertificate_9.
H1:    true .
H2:    reader >= readert__first .
H3:    reader <= readert__last .
H4:    certtype >= certtypes__certificatet__first .
H5:    certtype <= certtypes__certificatet__last .
H6:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_lastfault(element(
           readerstatus, [i___1])) >= basictypes__unsigned32t__first) and (
           fld_lastfault(element(readerstatus, [i___1])) <= 
           basictypes__unsigned32t__last))) .
H7:    for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_currentstatus(element(
           readerstatus, [i___1])) >= 
           tokenreader__interface__validreaderstatet__first) and (
           fld_currentstatus(element(readerstatus, [i___1])) <= 
           tokenreader__interface__validreaderstatet__last))) .
H8:    true .
H9:    true .
H10:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokenid(element(
           readerstatus, [i___1])) >= tokentypes__tokenidt__first) and (
           fld_tokenid(element(readerstatus, [i___1])) <= 
           tokentypes__tokenidt__last))) .
H11:   for_all(i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((fld_tokentry(element(
           readerstatus, [i___1])) >= tokentypes__tryt__first) and (
           fld_tokentry(element(readerstatus, [i___1])) <= 
           tokentypes__tryt__last))) .
H12:   for_all(i___2: integer, ((i___2 >= 
           tokenreader__interface__readernamei__first) and (
           i___2 <= tokenreader__interface__readernamei__last)) -> (for_all(
           i___1: readert, ((i___1 >= readert__first) and (
           i___1 <= readert__last)) -> ((element(fld_name(element(
           readerstatus, [i___1])), [i___2]) >= character__first) and (element(
           fld_name(element(readerstatus, [i___1])), [i___2]) <= 
           character__last))))) .
H13:   reader >= readert__first .
H14:   reader <= readert__last .
H15:   fld_tokentry(element(readerstatus, [reader])) = 
           tokentypes__goodtoken .
H16:   certtype = certtypes__iandacert .
H17:   reader >= readert__first .
H18:   reader <= readert__last .
H19:   for_all(i___1: integer, ((i___1 >= 
           certtypes__rawcertificatei__first) and (i___1 <= 
           certtypes__rawcertificatei__last)) -> ((element(rawcert__4, [
           i___1]) >= character__first) and (element(rawcert__4, [
           i___1]) <= character__last))) .
H20:   true .
H21:   responsecode__4 >= basictypes__unsigned32t__first .
H22:   responsecode__4 <= basictypes__unsigned32t__last .
        ->
C1:    responsecode__4 >= basictypes__unsigned32t__first .
C2:    responsecode__4 <= basictypes__unsigned32t__last .
 

For path(s) from start to finish:

procedure_getcertificate_10.
*** true .          /* trivially true VC removed by Examiner */


procedure_getcertificate_11.
*** true .          /* trivially true VC removed by Examiner */


procedure_getcertificate_12.
*** true .          /* trivially true VC removed by Examiner */


procedure_getcertificate_13.
*** true .          /* trivially true VC removed by Examiner */


procedure_getcertificate_14.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_getcertificate_15.
*** true .          /* trivially true VC removed by Examiner */


procedure_getcertificate_16.
*** true .          /* trivially true VC removed by Examiner */


