           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:28.85*/

              /*procedure ConfigData.ValidateFile.ReadClearance*/


rule_family readclearanc_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

readclearanc_rules(1): character__first <= element(clearancetitle, [I]) may_be_deduced_from [1 <= I, I <= 17].
readclearanc_rules(2): element(clearancetitle, [I]) <= character__last may_be_deduced_from [1 <= I, I <= 17].
readclearanc_rules(3): integer__size >= 0 may_be_deduced.
readclearanc_rules(4): integer__first may_be_replaced_by -2147483648.
readclearanc_rules(5): integer__last may_be_replaced_by 2147483647.
readclearanc_rules(6): integer__base__first may_be_replaced_by -2147483648.
readclearanc_rules(7): integer__base__last may_be_replaced_by 2147483647.
readclearanc_rules(8): character__size >= 0 may_be_deduced.
readclearanc_rules(9): character__first may_be_replaced_by 0.
readclearanc_rules(10): character__last may_be_replaced_by 255.
readclearanc_rules(11): character__base__first may_be_replaced_by 0.
readclearanc_rules(12): character__base__last may_be_replaced_by 255.
readclearanc_rules(13): natural__size >= 0 may_be_deduced.
readclearanc_rules(14): natural__first may_be_replaced_by 0.
readclearanc_rules(15): natural__last may_be_replaced_by 2147483647.
readclearanc_rules(16): natural__base__first may_be_replaced_by -2147483648.
readclearanc_rules(17): natural__base__last may_be_replaced_by 2147483647.
readclearanc_rules(18): positive__size >= 0 may_be_deduced.
readclearanc_rules(19): positive__first may_be_replaced_by 1.
readclearanc_rules(20): positive__last may_be_replaced_by 2147483647.
readclearanc_rules(21): positive__base__first may_be_replaced_by -2147483648.
readclearanc_rules(22): positive__base__last may_be_replaced_by 2147483647.
readclearanc_rules(23): privtypes__classt__size >= 0 may_be_deduced.
readclearanc_rules(24): privtypes__classt__first may_be_replaced_by privtypes__unmarked.
readclearanc_rules(25): privtypes__classt__last may_be_replaced_by privtypes__topsecret.
readclearanc_rules(26): privtypes__classt__base__first may_be_replaced_by privtypes__unmarked.
readclearanc_rules(27): privtypes__classt__base__last may_be_replaced_by privtypes__topsecret.
readclearanc_rules(28): privtypes__classt__pos(privtypes__classt__first) may_be_replaced_by 0.
readclearanc_rules(29): privtypes__classt__pos(
     privtypes__unmarked) may_be_replaced_by 0.
readclearanc_rules(30): privtypes__classt__val(0) may_be_replaced_by 
     privtypes__unmarked.
readclearanc_rules(31): privtypes__classt__pos(
     privtypes__unclassified) may_be_replaced_by 1.
readclearanc_rules(32): privtypes__classt__val(1) may_be_replaced_by 
     privtypes__unclassified.
readclearanc_rules(33): privtypes__classt__pos(
     privtypes__restricted) may_be_replaced_by 2.
readclearanc_rules(34): privtypes__classt__val(2) may_be_replaced_by 
     privtypes__restricted.
readclearanc_rules(35): privtypes__classt__pos(
     privtypes__confidential) may_be_replaced_by 3.
readclearanc_rules(36): privtypes__classt__val(3) may_be_replaced_by 
     privtypes__confidential.
readclearanc_rules(37): privtypes__classt__pos(privtypes__secret) may_be_replaced_by 4.
readclearanc_rules(38): privtypes__classt__val(4) may_be_replaced_by 
     privtypes__secret.
readclearanc_rules(39): privtypes__classt__pos(
     privtypes__topsecret) may_be_replaced_by 5.
readclearanc_rules(40): privtypes__classt__val(5) may_be_replaced_by 
     privtypes__topsecret.
readclearanc_rules(41): privtypes__classt__pos(privtypes__classt__last) may_be_replaced_by 5.
readclearanc_rules(42): privtypes__classt__pos(succ(X)) may_be_replaced_by 
     privtypes__classt__pos(X) + 1
     if [X <=privtypes__topsecret, X <> privtypes__topsecret].
readclearanc_rules(43): privtypes__classt__pos(pred(X)) may_be_replaced_by 
     privtypes__classt__pos(X) - 1
     if [X >=privtypes__unmarked, X <> privtypes__unmarked].
readclearanc_rules(44): privtypes__classt__pos(X) >= 0 may_be_deduced_from
     [privtypes__unmarked <= X, X <= privtypes__topsecret].
readclearanc_rules(45): privtypes__classt__pos(X) <= 5 may_be_deduced_from
     [privtypes__unmarked <= X, X <= privtypes__topsecret].
readclearanc_rules(46): privtypes__classt__val(X) >= 
     privtypes__unmarked may_be_deduced_from
     [0 <= X, X <= 5].
readclearanc_rules(47): privtypes__classt__val(X) <= 
     privtypes__topsecret may_be_deduced_from
     [0 <= X, X <= 5].
readclearanc_rules(48): succ(privtypes__classt__val(X)) may_be_replaced_by 
     privtypes__classt__val(X+1)
     if [0 <= X, X < 5].
readclearanc_rules(49): pred(privtypes__classt__val(X)) may_be_replaced_by 
     privtypes__classt__val(X-1)
     if [0 < X, X <= 5].
readclearanc_rules(50): privtypes__classt__pos(privtypes__classt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 5].
readclearanc_rules(51): privtypes__classt__val(privtypes__classt__pos(X)) may_be_replaced_by X
     if [privtypes__unmarked <= X, X <= privtypes__topsecret].
readclearanc_rules(52): privtypes__classt__pos(X) <= 
     privtypes__classt__pos(Y) & X <= Y are_interchangeable 
     if [privtypes__unmarked <= X, X <= privtypes__topsecret, 
     privtypes__unmarked <= Y, Y <= privtypes__topsecret].
readclearanc_rules(53): privtypes__classt__val(X) <= 
     privtypes__classt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 5, 0 <= Y, Y <= 5].
readclearanc_rules(54): clearancetexti__size >= 0 may_be_deduced.
readclearanc_rules(55): clearancetexti__first may_be_replaced_by 1.
readclearanc_rules(56): clearancetexti__last may_be_replaced_by 17.
readclearanc_rules(57): clearancetexti__base__first may_be_replaced_by -2147483648.
readclearanc_rules(58): clearancetexti__base__last may_be_replaced_by 2147483647.
