           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:29.61}

                       {procedure ConfigData.WriteFile}


title procedure writefile;

  function round__(real) : integer;
  type character = integer;
  type clock__durationt = integer;
  type audittypes__filesizet = integer;
  type file__t = pending;
  type privtypes__classt = (privtypes__unmarked, 
     privtypes__unclassified, privtypes__restricted, 
     privtypes__confidential, privtypes__secret, 
     privtypes__topsecret);
  type iandatypes__fart = integer;
  type accesspolicyt = (workinghours, allhours);
  type string = array [integer] of character;
  const null__string : string = pending;
  type classstringt = record
        text : string;
        length : integer
     end;
  type accessstringt = record
        text : string;
        length : integer
     end;
  type classstringlookupt = array [privtypes__classt] of 
     classstringt;
  type accessstringlookupt = array [accesspolicyt] of 
     accessstringt;
  const classstringlookup : classstringlookupt = pending;
  const accessstringlookup : accessstringlookupt = pending;
  const string5i__base__first : integer = pending; 
  const string5i__base__last : integer = pending; 
  const accesstexti__base__first : integer = pending; 
  const accesstexti__base__last : integer = pending; 
  const classtexti__base__first : integer = pending; 
  const classtexti__base__last : integer = pending; 
  const accesspolicyt__base__first : accesspolicyt = pending; 
  const accesspolicyt__base__last : accesspolicyt = pending; 
  const durationt__base__first : integer = pending; 
  const durationt__base__last : integer = pending; 
  const iandatypes__fart__base__first : integer = pending; 
  const iandatypes__fart__base__last : integer = pending; 
  const privtypes__classt__base__first : privtypes__classt = pending; 
  const privtypes__classt__base__last : privtypes__classt = pending; 
  const audittypes__filesizet__base__first : integer = pending; 
  const audittypes__filesizet__base__last : integer = pending; 
  const clock__durationt__base__first : integer = pending; 
  const clock__durationt__base__last : integer = pending; 
  const positive__base__first : integer = pending; 
  const positive__base__last : integer = pending; 
  const natural__base__first : integer = pending; 
  const natural__base__last : integer = pending; 
  const character__base__first : character = pending; 
  const character__base__last : character = pending; 
  const integer__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const string5i__first : integer = pending; 
  const string5i__last : integer = pending; 
  const string5i__size : integer = pending; 
  const accessstringt__size : integer = pending; 
  const accesstexti__first : integer = pending; 
  const accesstexti__last : integer = pending; 
  const accesstexti__size : integer = pending; 
  const classstringt__size : integer = pending; 
  const classtexti__first : integer = pending; 
  const classtexti__last : integer = pending; 
  const classtexti__size : integer = pending; 
  const accesspolicyt__first : accesspolicyt = pending; 
  const accesspolicyt__last : accesspolicyt = pending; 
  const accesspolicyt__size : integer = pending; 
  const durationt__first : integer = pending; 
  const durationt__last : integer = pending; 
  const durationt__size : integer = pending; 
  const iandatypes__fart__first : integer = pending; 
  const iandatypes__fart__last : integer = pending; 
  const iandatypes__fart__size : integer = pending; 
  const privtypes__classt__first : privtypes__classt = pending; 
  const privtypes__classt__last : privtypes__classt = pending; 
  const privtypes__classt__size : integer = pending; 
  const audittypes__filesizet__first : integer = pending; 
  const audittypes__filesizet__last : integer = pending; 
  const audittypes__filesizet__size : integer = pending; 
  const clock__durationt__first : integer = pending; 
  const clock__durationt__last : integer = pending; 
  const clock__durationt__size : integer = pending; 
  const positive__first : integer = pending; 
  const positive__last : integer = pending; 
  const positive__size : integer = pending; 
  const natural__first : integer = pending; 
  const natural__last : integer = pending; 
  const natural__size : integer = pending; 
  const character__first : character = pending; 
  const character__last : character = pending; 
  const character__size : integer = pending; 
  const integer__first : integer = pending; 
  const integer__last : integer = pending; 
  const integer__size : integer = pending; 
  var success : boolean;
  var thelatchunlockduration : integer;
  var thealarmsilentduration : integer;
  var thefingerwaitduration : integer;
  var thetokenremovalduration : integer;
  var theenclaveclearance : privtypes__classt;
  var theworkinghoursstart : integer;
  var theworkinghoursend : integer;
  var themaxauthduration : integer;
  var theaccesspolicy : accesspolicyt;
  var theminentryclass : privtypes__classt;
  var theminpreservedlogsize : integer;
  var thealarmthresholdsize : integer;
  var thesystemmaxfar : integer;
  var configfile : file__t;
  function file__exists(file__t) : boolean;
  function workinghourstext(integer) : string;

end;
