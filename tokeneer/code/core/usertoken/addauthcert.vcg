           *******************************************************
                       Semantic Analysis of SPARK Text
                              Examiner GPL 2011
             Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.
           *******************************************************


                        DATE : 05-SEP-2011 15:33:20.67

                      procedure UserToken.AddAuthCert




For path(s) from start to run-time check associated with statement of line 1066:

procedure_addauthcert_1.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
        ->
C1:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
C2:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
 

For path(s) from start to run-time check associated with statement of line 1068:

procedure_addauthcert_2.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
        ->
C1:    configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
C2:    configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
 

For path(s) from start to precondition check associated with statement of line 1084:

procedure_addauthcert_3.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   configdata__authperiodisempty(configdata__state) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
        ->
C1:    not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
 

procedure_addauthcert_4.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   configdata__authperiodisempty(configdata__state) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
        ->
C1:    not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
 

procedure_addauthcert_5.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   not (configdata__authperiodisempty(configdata__state)) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
        ->
C1:    not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
 

procedure_addauthcert_6.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   not (configdata__authperiodisempty(configdata__state)) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
        ->
C1:    not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
 

For path(s) from start to run-time check associated with statement of line 1084:

procedure_addauthcert_7.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   configdata__authperiodisempty(configdata__state) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H31:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H32:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H33:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
        ->
C1:    certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
C2:    certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
 

procedure_addauthcert_8.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   configdata__authperiodisempty(configdata__state) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H27:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H28:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H29:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
        ->
C1:    certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
C2:    certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
 

procedure_addauthcert_9.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   not (configdata__authperiodisempty(configdata__state)) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H31:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H32:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H33:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
        ->
C1:    certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
C2:    certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
 

procedure_addauthcert_10.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   not (configdata__authperiodisempty(configdata__state)) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H27:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H28:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H29:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
        ->
C1:    certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
C2:    certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
 

For path(s) from start to run-time check associated with statement of line 1087:

procedure_addauthcert_11.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   configdata__authperiodisempty(configdata__state) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
        ->
C1:    certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
C2:    certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
 

procedure_addauthcert_12.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   configdata__authperiodisempty(configdata__state) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
        ->
C1:    certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
C2:    certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
 

procedure_addauthcert_13.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   not (configdata__authperiodisempty(configdata__state)) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
        ->
C1:    certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
C2:    certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
 

procedure_addauthcert_14.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   not (configdata__authperiodisempty(configdata__state)) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
        ->
C1:    certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
C2:    certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
 

For path(s) from start to run-time check associated with statement of line 1089:

procedure_addauthcert_15.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   configdata__authperiodisempty(configdata__state) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H31:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H32:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

procedure_addauthcert_16.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   configdata__authperiodisempty(configdata__state) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H27:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H28:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

procedure_addauthcert_17.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   not (configdata__authperiodisempty(configdata__state)) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H31:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H32:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

procedure_addauthcert_18.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   not (configdata__authperiodisempty(configdata__state)) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H27:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H28:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
        ->
C1:    audittypes__warning >= audittypes__severityt__first .
C2:    audittypes__warning <= audittypes__severityt__last .
C3:    audittypes__systemfault >= audittypes__elementt__first .
C4:    audittypes__systemfault <= audittypes__elementt__last .
 

For path(s) from start to run-time check associated with statement of line 1099:

procedure_addauthcert_19.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   configdata__authperiodisempty(configdata__state) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H31:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H32:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H33:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H34:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H35:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H36:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) >= 
           certtypes__serialnumbert__first .
H37:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) <= 
           certtypes__serialnumbert__last .
H38:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) <= 
           character__last))) .
H39:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__namecountt__first .
H40:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__namecountt__last .
H41:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__issueridt__first .
H42:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__issueridt__last .
H43:   true .
H44:   true .
H45:   true .
H46:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H47:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H48:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H49:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H50:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H51:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H52:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H53:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H54:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H55:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) >= privtypes__classt__first .
H56:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

procedure_addauthcert_20.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   configdata__authperiodisempty(configdata__state) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H27:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H28:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H29:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H30:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H31:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H32:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) >= 
           certtypes__serialnumbert__first .
H33:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) <= 
           certtypes__serialnumbert__last .
H34:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) <= 
           character__last))) .
H35:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__namecountt__first .
H36:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__namecountt__last .
H37:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__issueridt__first .
H38:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__issueridt__last .
H39:   true .
H40:   true .
H41:   true .
H42:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H43:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H44:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H45:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H46:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H47:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H48:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H49:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H50:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H51:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H52:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

procedure_addauthcert_21.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   not (configdata__authperiodisempty(configdata__state)) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H31:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H32:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H33:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H34:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H35:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H36:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) >= 
           certtypes__serialnumbert__first .
H37:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) <= 
           certtypes__serialnumbert__last .
H38:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) <= 
           character__last))) .
H39:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__namecountt__first .
H40:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__namecountt__last .
H41:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__issueridt__first .
H42:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__issueridt__last .
H43:   true .
H44:   true .
H45:   true .
H46:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H47:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H48:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H49:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H50:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H51:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H52:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H53:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H54:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H55:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) >= privtypes__classt__first .
H56:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

procedure_addauthcert_22.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   not (configdata__authperiodisempty(configdata__state)) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H27:   not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state)) .
H28:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H29:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H30:   certificatestore__serialnumber(certificatestore__state) >= 
           certtypes__serialnumbert__first .
H31:   certificatestore__serialnumber(certificatestore__state) <= 
           certtypes__serialnumbert__last .
H32:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) >= 
           certtypes__serialnumbert__first .
H33:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state))) <= 
           certtypes__serialnumbert__last .
H34:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certificatestore__serialnumber(
           certificatestore__state)))), [i___1]) <= 
           character__last))) .
H35:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__namecountt__first .
H36:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__namecountt__last .
H37:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) >= 
           cryptotypes__issueridt__first .
H38:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certificatestore__serialnumber(
           certificatestore__state)))) <= 
           cryptotypes__issueridt__last .
H39:   true .
H40:   true .
H41:   true .
H42:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H43:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H44:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H45:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H46:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H47:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H48:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H49:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H50:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H51:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H52:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

procedure_addauthcert_23.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   configdata__authperiodisempty(configdata__state) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H31:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H32:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
H33:   audittypes__warning >= audittypes__severityt__first .
H34:   audittypes__warning <= audittypes__severityt__last .
H35:   audittypes__systemfault >= audittypes__elementt__first .
H36:   audittypes__systemfault <= audittypes__elementt__last .
H37:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) >= 
           certtypes__serialnumbert__first .
H38:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) <= 
           certtypes__serialnumbert__last .
H39:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certtypes__serialnumbert__first))), [
           i___1]) <= character__last))) .
H40:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__namecountt__first .
H41:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__namecountt__last .
H42:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__issueridt__first .
H43:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__issueridt__last .
H44:   true .
H45:   true .
H46:   true .
H47:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H48:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H49:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H50:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H51:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H52:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H53:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H54:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H55:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H56:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) >= privtypes__classt__first .
H57:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

procedure_addauthcert_24.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   configdata__authperiodisempty(configdata__state) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H27:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H28:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
H29:   audittypes__warning >= audittypes__severityt__first .
H30:   audittypes__warning <= audittypes__severityt__last .
H31:   audittypes__systemfault >= audittypes__elementt__first .
H32:   audittypes__systemfault <= audittypes__elementt__last .
H33:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) >= 
           certtypes__serialnumbert__first .
H34:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) <= 
           certtypes__serialnumbert__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certtypes__serialnumbert__first))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__issueridt__first .
H39:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__issueridt__last .
H40:   true .
H41:   true .
H42:   true .
H43:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H44:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H45:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H46:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H47:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H48:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H49:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H50:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H51:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H52:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H53:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

procedure_addauthcert_25.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state) .
H17:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H18:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H19:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H20:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H21:   true .
H22:   not (configdata__authperiodisempty(configdata__state)) .
H23:   true .
H24:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H25:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H26:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H27:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H28:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H29:   true .
H30:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H31:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H32:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
H33:   audittypes__warning >= audittypes__severityt__first .
H34:   audittypes__warning <= audittypes__severityt__last .
H35:   audittypes__systemfault >= audittypes__elementt__first .
H36:   audittypes__systemfault <= audittypes__elementt__last .
H37:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) >= 
           certtypes__serialnumbert__first .
H38:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) <= 
           certtypes__serialnumbert__last .
H39:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certtypes__serialnumbert__first))), [
           i___1]) <= character__last))) .
H40:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__namecountt__first .
H41:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__namecountt__last .
H42:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__issueridt__first .
H43:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__issueridt__last .
H44:   true .
H45:   true .
H46:   true .
H47:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H48:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H49:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H50:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H51:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H52:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H53:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H54:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H55:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H56:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) >= privtypes__classt__first .
H57:   fld_class(upf_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert)))), configdata__theenclaveclearance(
           configdata__state))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

procedure_addauthcert_26.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    true .
H3:    fld_idstatus(idcert) >= certificatestatus__first .
H4:    fld_idstatus(idcert) <= certificatestatus__last .
H5:    true .
H6:    true .
H7:    true .
H8:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H9:    fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H10:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) >= privtypes__classt__first .
H11:   fld_class(cert__attr__priv__theclearance(fld_contents(
           privcert))) <= privtypes__classt__last .
H12:   configdata__theenclaveclearance(configdata__state) >= 
           privtypes__classt__first .
H13:   configdata__theenclaveclearance(configdata__state) <= 
           privtypes__classt__last .
H14:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H15:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
H16:   not (fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) > configdata__theenclaveclearance(
           configdata__state)) .
H17:   true .
H18:   not (configdata__authperiodisempty(configdata__state)) .
H19:   true .
H20:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) >= 
           character__first) and (element(fld_name(
           keystore__thistis(keystore__state)), [i___1]) <= 
           character__last))) .
H21:   fld_namelength(keystore__thistis(keystore__state)) >= 
           cryptotypes__namecountt__first .
H22:   fld_namelength(keystore__thistis(keystore__state)) <= 
           cryptotypes__namecountt__last .
H23:   fld_id(keystore__thistis(keystore__state)) >= 
           cryptotypes__issueridt__first .
H24:   fld_id(keystore__thistis(keystore__state)) <= 
           cryptotypes__issueridt__last .
H25:   true .
H26:   not (not (certificatestore__serialnumberhasoverflowed(
           certificatestore__state))) .
H27:   certtypes__serialnumbert__first >= 
           certtypes__serialnumbert__first .
H28:   certtypes__serialnumbert__first <= 
           certtypes__serialnumbert__last .
H29:   audittypes__warning >= audittypes__severityt__first .
H30:   audittypes__warning <= audittypes__severityt__last .
H31:   audittypes__systemfault >= audittypes__elementt__first .
H32:   audittypes__systemfault <= audittypes__elementt__last .
H33:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) >= 
           certtypes__serialnumbert__first .
H34:   fld_serialnumber(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first)) <= 
           certtypes__serialnumbert__last .
H35:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))), [i___1]) >= 
           character__first) and (element(fld_name(fld_issuer(
           upf_serialnumber(upf_issuer(id, keystore__thistis(
           keystore__state)), certtypes__serialnumbert__first))), [
           i___1]) <= character__last))) .
H36:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__namecountt__first .
H37:   fld_namelength(fld_issuer(upf_serialnumber(upf_issuer(
           id, keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__namecountt__last .
H38:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) >= 
           cryptotypes__issueridt__first .
H39:   fld_id(fld_issuer(upf_serialnumber(upf_issuer(id, 
           keystore__thistis(keystore__state)), 
           certtypes__serialnumbert__first))) <= 
           cryptotypes__issueridt__last .
H40:   true .
H41:   true .
H42:   true .
H43:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) >= certtypes__serialnumbert__first .
H44:   fld_serialnumber(cert__theid(fld_inherit(fld_contents(
           idcert)))) <= certtypes__serialnumbert__last .
H45:   for_all(i___1: integer, ((i___1 >= cryptotypes__namei__first) and (
           i___1 <= cryptotypes__namei__last)) -> ((element(fld_name(
           fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) >= character__first) and (element(
           fld_name(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))), [i___1]) <= character__last))) .
H46:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__namecountt__first .
H47:   fld_namelength(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__namecountt__last .
H48:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) >= cryptotypes__issueridt__first .
H49:   fld_id(fld_issuer(cert__theid(fld_inherit(fld_contents(
           idcert))))) <= cryptotypes__issueridt__last .
H50:   cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
H51:   cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
H52:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) >= privtypes__classt__first .
H53:   fld_class(upf_class(clearance, fld_class(
           cert__attr__priv__theclearance(fld_contents(
           privcert))))) <= privtypes__classt__last .
        ->
C1:    cert__attr__priv__therole(fld_contents(privcert)) >= 
           privtypes__privileget__first .
C2:    cert__attr__priv__therole(fld_contents(privcert)) <= 
           privtypes__privileget__last .
C3:    cryptotypes__sha1_rsa >= cryptotypes__algorithmt__first .
C4:    cryptotypes__sha1_rsa <= cryptotypes__algorithmt__last .
 

For path(s) from start to finish:

procedure_addauthcert_27.
*** true .          /* trivially true VC removed by Examiner */


procedure_addauthcert_28.
*** true .          /* trivially true VC removed by Examiner */


procedure_addauthcert_29.
*** true .          /* trivially true VC removed by Examiner */


procedure_addauthcert_30.
*** true .          /* trivially true VC removed by Examiner */


procedure_addauthcert_31.
*** true .          /* trivially true VC removed by Examiner */


procedure_addauthcert_32.
*** true .          /* trivially true VC removed by Examiner */


procedure_addauthcert_33.
*** true .          /* trivially true VC removed by Examiner */


procedure_addauthcert_34.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_addauthcert_35.
H1:    keystore__privatekeypresent(keystore__state) .
H2:    idcert = fld_idcert(state) .
H3:    privcert = fld_privcert(state) .
H4:    authcert = fld_authcert(state) .
H5:    usertoken__interface__state = fld_usertoken__interface__state(
           state) .
H6:    iandacert = fld_iandacert(state) .
H7:    tokenid = fld_tokenid(state) .
H8:    tokentry = fld_tokentry(state) .
H9:    tokenpresence = fld_tokenpresence(state) .
H10:   true .
H11:   fld_idstatus(idcert) >= certificatestatus__first .
H12:   fld_idstatus(idcert) <= certificatestatus__last .
H13:   true .
H14:   true .
H15:   true .
        ->
C1:    keystore__privatekeypresent(keystore__state) .
 

procedure_addauthcert_36.
*** true .          /* trivially true VC removed by Examiner */


