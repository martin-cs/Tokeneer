           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:20.30}

                  {procedure UserToken.ReadAndCheckAuthCert}


title procedure readandcheckauthcert;

  function round__(real) : integer;
  type basictypes__unsigned32t = integer;
  type privtypes__privileget = (privtypes__useronly, 
     privtypes__guard, privtypes__auditmanager, 
     privtypes__securityofficer);
  type cert__contentst = pending;
  type tokentypes__tryt = (tokentypes__notoken, 
     tokentypes__badtoken, tokentypes__goodtoken);
  type usertoken__interface__state__type = pending;
  type certificatestatus = (bad, notverified, notcurrent, 
     validcert);
  type cert__attr__contentst = record
        inherit : cert__contentst
     end;
  type cert__id__contentst = record
        inherit : cert__contentst
     end;
  type cert__attr__auth__contentst = record
        inherit : cert__attr__contentst
     end;
  type valididcertt = record
        valid : boolean;
        idstatus : certificatestatus;
        contents : cert__id__contentst
     end;
  const certificatestatus__base__first : certificatestatus = pending; 
  const certificatestatus__base__last : certificatestatus = pending; 
  const tokentypes__tryt__base__first : tokentypes__tryt = pending; 
  const tokentypes__tryt__base__last : tokentypes__tryt = pending; 
  const tokentypes__tokenidt__base__first : integer = pending; 
  const tokentypes__tokenidt__base__last : integer = pending; 
  const privtypes__privileget__base__first : 
     privtypes__privileget = pending; 
  const privtypes__privileget__base__last : privtypes__privileget = pending; 
  const basictypes__unsigned32t__base__first : integer = pending; 
  const basictypes__unsigned32t__base__last : integer = pending; 
  const valididcertt__size : integer = pending; 
  const certificatestatus__first : certificatestatus = pending; 
  const certificatestatus__last : certificatestatus = pending; 
  const certificatestatus__size : integer = pending; 
  const tokentypes__tryt__first : tokentypes__tryt = pending; 
  const tokentypes__tryt__last : tokentypes__tryt = pending; 
  const tokentypes__tryt__size : integer = pending; 
  const tokentypes__tokenidt__first : integer = pending; 
  const tokentypes__tokenidt__last : integer = pending; 
  const tokentypes__tokenidt__size : integer = pending; 
  const privtypes__privileget__first : privtypes__privileget = pending; 
  const privtypes__privileget__last : privtypes__privileget = pending; 
  const privtypes__privileget__size : integer = pending; 
  const basictypes__unsigned32t__first : integer = pending; 
  const basictypes__unsigned32t__last : integer = pending; 
  const basictypes__unsigned32t__size : integer = pending; 
  var usertoken__interface__state : 
     usertoken__interface__state__type;
  var tokenid : integer;
  var idcert : valididcertt;
  var authcertcontents : cert__attr__auth__contentst;
  function cert__attr__auth__therole(cert__attr__auth__contentst) : 
     privtypes__privileget;
  function usertoken__interface__thetokenid(
     usertoken__interface__state__type) : integer;
  function usertoken__interface__thetokentry(
     usertoken__interface__state__type) : tokentypes__tryt;
  var authcertcontents__2 : cert__attr__auth__contentst;
  var idcert__1 : valididcertt;

end;
