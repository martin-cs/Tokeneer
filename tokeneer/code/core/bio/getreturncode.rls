           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 05-SEP-2011 15:33:17.97*/

                         /*function Bio.GetReturnCode*/


rule_family getreturncod_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

getreturncod_rules(1): basictypes__unsigned32t__size >= 0 may_be_deduced.
getreturncod_rules(2): basictypes__unsigned32t__size may_be_replaced_by 32.
getreturncod_rules(3): basictypes__unsigned32t__first may_be_replaced_by 0.
getreturncod_rules(4): basictypes__unsigned32t__last may_be_replaced_by 4294967295.
getreturncod_rules(5): basictypes__unsigned32t__base__first <= 
     basictypes__unsigned32t__base__last may_be_deduced.
getreturncod_rules(6): basictypes__unsigned32t__base__first <= 
     basictypes__unsigned32t__first may_be_deduced.
getreturncod_rules(7): basictypes__unsigned32t__base__last >= 
     basictypes__unsigned32t__last may_be_deduced.
getreturncod_rules(8): returnt__size >= 0 may_be_deduced.
getreturncod_rules(9): returnt__size may_be_replaced_by 32.
getreturncod_rules(10): returnt__first may_be_replaced_by bioapiok.
getreturncod_rules(11): returnt__last may_be_replaced_by devicelevelerror.
getreturncod_rules(12): returnt__base__first may_be_replaced_by bioapiok.
getreturncod_rules(13): returnt__base__last may_be_replaced_by devicelevelerror.
getreturncod_rules(14): returnt__pos(returnt__first) may_be_replaced_by 0.
getreturncod_rules(15): returnt__pos(bioapiok) may_be_replaced_by 0.
getreturncod_rules(16): returnt__val(0) may_be_replaced_by 
     bioapiok.
getreturncod_rules(17): returnt__pos(internalerror) may_be_replaced_by 1.
getreturncod_rules(18): returnt__val(1) may_be_replaced_by 
     internalerror.
getreturncod_rules(19): returnt__pos(memoryerror) may_be_replaced_by 2.
getreturncod_rules(20): returnt__val(2) may_be_replaced_by 
     memoryerror.
getreturncod_rules(21): returnt__pos(functionfailed) may_be_replaced_by 3.
getreturncod_rules(22): returnt__val(3) may_be_replaced_by 
     functionfailed.
getreturncod_rules(23): returnt__pos(invaliddata) may_be_replaced_by 4.
getreturncod_rules(24): returnt__val(4) may_be_replaced_by 
     invaliddata.
getreturncod_rules(25): returnt__pos(bioapinotinitialized) may_be_replaced_by 5.
getreturncod_rules(26): returnt__val(5) may_be_replaced_by 
     bioapinotinitialized.
getreturncod_rules(27): returnt__pos(moduleloadfailed) may_be_replaced_by 6.
getreturncod_rules(28): returnt__val(6) may_be_replaced_by 
     moduleloadfailed.
getreturncod_rules(29): returnt__pos(moduleunloadfailed) may_be_replaced_by 7.
getreturncod_rules(30): returnt__val(7) may_be_replaced_by 
     moduleunloadfailed.
getreturncod_rules(31): returnt__pos(bspinternalerror) may_be_replaced_by 8.
getreturncod_rules(32): returnt__val(8) may_be_replaced_by 
     bspinternalerror.
getreturncod_rules(33): returnt__pos(bspmemoryerror) may_be_replaced_by 9.
getreturncod_rules(34): returnt__val(9) may_be_replaced_by 
     bspmemoryerror.
getreturncod_rules(35): returnt__pos(bspfunctionfailed) may_be_replaced_by 10.
getreturncod_rules(36): returnt__val(10) may_be_replaced_by 
     bspfunctionfailed.
getreturncod_rules(37): returnt__pos(bspinvaliddata) may_be_replaced_by 11.
getreturncod_rules(38): returnt__val(11) may_be_replaced_by 
     bspinvaliddata.
getreturncod_rules(39): returnt__pos(bspunabletocapture) may_be_replaced_by 12.
getreturncod_rules(40): returnt__val(12) may_be_replaced_by 
     bspunabletocapture.
getreturncod_rules(41): returnt__pos(bsptimeoutexpired) may_be_replaced_by 13.
getreturncod_rules(42): returnt__val(13) may_be_replaced_by 
     bsptimeoutexpired.
getreturncod_rules(43): returnt__pos(bspbirsignaturefailure) may_be_replaced_by 14.
getreturncod_rules(44): returnt__val(14) may_be_replaced_by 
     bspbirsignaturefailure.
getreturncod_rules(45): returnt__pos(bspinconsistentpurpose) may_be_replaced_by 15.
getreturncod_rules(46): returnt__val(15) may_be_replaced_by 
     bspinconsistentpurpose.
getreturncod_rules(47): returnt__pos(devicelevelerror) may_be_replaced_by 16.
getreturncod_rules(48): returnt__val(16) may_be_replaced_by 
     devicelevelerror.
getreturncod_rules(49): returnt__pos(returnt__last) may_be_replaced_by 16.
getreturncod_rules(50): returnt__pos(succ(X)) may_be_replaced_by 
     returnt__pos(X) + 1
     if [X <=devicelevelerror, X <> devicelevelerror].
getreturncod_rules(51): returnt__pos(pred(X)) may_be_replaced_by 
     returnt__pos(X) - 1
     if [X >=bioapiok, X <> bioapiok].
getreturncod_rules(52): returnt__pos(X) >= 0 may_be_deduced_from
     [bioapiok <= X, X <= devicelevelerror].
getreturncod_rules(53): returnt__pos(X) <= 16 may_be_deduced_from
     [bioapiok <= X, X <= devicelevelerror].
getreturncod_rules(54): returnt__val(X) >= bioapiok may_be_deduced_from
     [0 <= X, X <= 16].
getreturncod_rules(55): returnt__val(X) <= devicelevelerror may_be_deduced_from
     [0 <= X, X <= 16].
getreturncod_rules(56): succ(returnt__val(X)) may_be_replaced_by 
     returnt__val(X+1)
     if [0 <= X, X < 16].
getreturncod_rules(57): pred(returnt__val(X)) may_be_replaced_by 
     returnt__val(X-1)
     if [0 < X, X <= 16].
getreturncod_rules(58): returnt__pos(returnt__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 16].
getreturncod_rules(59): returnt__val(returnt__pos(X)) may_be_replaced_by X
     if [bioapiok <= X, X <= devicelevelerror].
getreturncod_rules(60): returnt__pos(X) <= returnt__pos(Y) & X <= Y are_interchangeable 
     if [bioapiok <= X, X <= devicelevelerror, bioapiok <= Y, Y <= 
     devicelevelerror].
getreturncod_rules(61): returnt__val(X) <= returnt__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 16, 0 <= Y, Y <= 16].
