           {*******************************************************}
                               {FDL Declarations}
                              {Examiner GPL 2011}
             {Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.}
           {*******************************************************}


                        {DATE : 05-SEP-2011 15:33:18.00}

                        {function Bio.MakeDescription}


title function makedescription;

  function round__(real) : integer;
  type character = integer;
  type basictypes__unsigned32t = integer;
  type returnt = (bioapiok, internalerror, memoryerror, 
     functionfailed, invaliddata, bioapinotinitialized, 
     moduleloadfailed, moduleunloadfailed, bspinternalerror, 
     bspmemoryerror, bspfunctionfailed, bspinvaliddata, 
     bspunabletocapture, bsptimeoutexpired, 
     bspbirsignaturefailure, bspinconsistentpurpose, 
     devicelevelerror);
  type string = array [integer] of character;
  const null__string : string = pending;
  const returnt__base__first : returnt = pending; 
  const returnt__base__last : returnt = pending; 
  const basictypes__unsigned32t__base__first : integer = pending; 
  const basictypes__unsigned32t__base__last : integer = pending; 
  const positive__base__first : integer = pending; 
  const positive__base__last : integer = pending; 
  const character__base__first : character = pending; 
  const character__base__last : character = pending; 
  const integer__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const text__index__subtype__1__first : integer = pending; 
  const text__index__subtype__1__last : integer = pending; 
  const returnt__first : returnt = pending; 
  const returnt__last : returnt = pending; 
  const returnt__size : integer = pending; 
  const basictypes__unsigned32t__first : integer = pending; 
  const basictypes__unsigned32t__last : integer = pending; 
  const basictypes__unsigned32t__size : integer = pending; 
  const positive__first : integer = pending; 
  const positive__last : integer = pending; 
  const positive__size : integer = pending; 
  const character__first : character = pending; 
  const character__last : character = pending; 
  const character__size : integer = pending; 
  const integer__first : integer = pending; 
  const integer__last : integer = pending; 
  const integer__size : integer = pending; 
  var text : string;
  var returnvalue : integer;
  function getreturncode(integer) : returnt;

end;
